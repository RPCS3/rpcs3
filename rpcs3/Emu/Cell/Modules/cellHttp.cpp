#include "stdafx.h"
#include "Emu/Cell/PPUModule.h"

#include "cellHttp.h"

LOG_CHANNEL(cellHttp);

template<>
void fmt_class_string<CellHttpError>::format(std::string& out, u64 arg)
{
	format_enum(out, arg, [](auto error)
	{
		switch (error)
		{
			STR_CASE(CELL_HTTP_ERROR_ALREADY_INITIALIZED);
			STR_CASE(CELL_HTTP_ERROR_NOT_INITIALIZED);
			STR_CASE(CELL_HTTP_ERROR_NO_MEMORY);
			STR_CASE(CELL_HTTP_ERROR_NO_BUFFER);
			STR_CASE(CELL_HTTP_ERROR_NO_STRING);
			STR_CASE(CELL_HTTP_ERROR_INSUFFICIENT);
			STR_CASE(CELL_HTTP_ERROR_INVALID_URI);
			STR_CASE(CELL_HTTP_ERROR_INVALID_HEADER);
			STR_CASE(CELL_HTTP_ERROR_BAD_METHOD);
			STR_CASE(CELL_HTTP_ERROR_BAD_CLIENT);
			STR_CASE(CELL_HTTP_ERROR_BAD_TRANS);
			STR_CASE(CELL_HTTP_ERROR_NO_CONNECTION);
			STR_CASE(CELL_HTTP_ERROR_NO_REQUEST_SENT);
			STR_CASE(CELL_HTTP_ERROR_ALREADY_BUILT);
			STR_CASE(CELL_HTTP_ERROR_ALREADY_SENT);
			STR_CASE(CELL_HTTP_ERROR_NO_HEADER);
			STR_CASE(CELL_HTTP_ERROR_NO_CONTENT_LENGTH);
			STR_CASE(CELL_HTTP_ERROR_TOO_MANY_REDIRECTS);
			STR_CASE(CELL_HTTP_ERROR_TOO_MANY_AUTHS);
			STR_CASE(CELL_HTTP_ERROR_TRANS_NO_CONNECTION);
			STR_CASE(CELL_HTTP_ERROR_CB_FAILED);
			STR_CASE(CELL_HTTP_ERROR_NOT_PIPED);
			STR_CASE(CELL_HTTP_ERROR_OUT_OF_ORDER_PIPE);
			STR_CASE(CELL_HTTP_ERROR_TRANS_ABORTED);
			STR_CASE(CELL_HTTP_ERROR_BROKEN_PIPELINE);
			STR_CASE(CELL_HTTP_ERROR_UNAVAILABLE);
			STR_CASE(CELL_HTTP_ERROR_INVALID_VALUE);
			STR_CASE(CELL_HTTP_ERROR_CANNOT_AUTHENTICATE);
			STR_CASE(CELL_HTTP_ERROR_COOKIE_NOT_FOUND);
			STR_CASE(CELL_HTTP_ERROR_COOKIE_INVALID_DOMAIN);
			STR_CASE(CELL_HTTP_ERROR_CACHE_ALREADY_INITIALIZED);
			STR_CASE(CELL_HTTP_ERROR_CACHE_NOT_INITIALIZED);
			STR_CASE(CELL_HTTP_ERROR_LINE_EXCEEDS_MAX);
			STR_CASE(CELL_HTTP_ERROR_REQUIRES_BASIC_AUTH);
			STR_CASE(CELL_HTTP_ERROR_UNKNOWN);
			STR_CASE(CELL_HTTP_ERROR_INTERNAL);
			STR_CASE(CELL_HTTP_ERROR_NONREMOVABLE);
			STR_CASE(CELL_HTTP_ERROR_BAD_CONN);
			STR_CASE(CELL_HTTP_ERROR_BAD_MAN);
			STR_CASE(CELL_HTTP_ERROR_NO_POOL);
			STR_CASE(CELL_HTTP_ERROR_NO_REQUEST);
			STR_CASE(CELL_HTTP_ERROR_LOCK_FAILED);
			STR_CASE(CELL_HTTP_ERROR_INVALID_DATA);
			STR_CASE(CELL_HTTP_ERROR_BROKEN_CHUNK);
			STR_CASE(CELL_HTTP_ERROR_DECODE_SETUP);
			STR_CASE(CELL_HTTP_ERROR_DECODE_STREAM);
			STR_CASE(CELL_HTTP_ERROR_BROKEN_DECODE_STREAM);
			STR_CASE(CELL_HTTP_ERROR_INVALID_DCACHE_PATH);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_ALREADY_INITIALIZED);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_NOT_INITIALIZED);
			STR_CASE(CELL_HTTP_ERROR_TOO_MANY_DCACHE_ENTRY);
			STR_CASE(CELL_HTTP_ERROR_DUP_DCACHE_ENTRY);
			STR_CASE(CELL_HTTP_ERROR_WRITE_DCACHE);
			STR_CASE(CELL_HTTP_ERROR_READ_DCACHE);
			STR_CASE(CELL_HTTP_ERROR_CACHE_TOO_LARGE);
			STR_CASE(CELL_HTTP_ERROR_INVALID_DCACHE_VERSION);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_FILE_BROKEN);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_EXCEEDS_MAX);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_BUSY);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_INDEX_BROKEN);
			STR_CASE(CELL_HTTP_ERROR_INVALID_DCACHE_INDEX_NODE);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_FILE_INCONSISTENCY);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_URI_TOO_LONG);
			STR_CASE(CELL_HTTP_ERROR_READ_DCACHE_EOF);
			STR_CASE(CELL_HTTP_ERROR_END_OF_DCACHE_INDEX_NODE);
			STR_CASE(CELL_HTTP_ERROR_NO_CACHE_MEMORY);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_BROKEN);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_TOO_MANY_WRITE);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_TOO_MANY_READ);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_FATAL);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_UNSUPPORTED_FEATURE);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_INDEX_IS_ALREADY_OPEN);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_INDEX_IS_OPENING);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_UNKNOWN);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_INDEX_IS_CLOSED);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_ABORTED);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_INDEX_IS_CLOSING);
			STR_CASE(CELL_HTTP_ERROR_DCACHE_UNKNOWN_INDEX_STATE);
			STR_CASE(CELL_HTTP_ERROR_NET_FIN);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_TIMEOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_TIMEOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_TIMEOUT);
		}

		return unknown;
	});
}

template<>
void fmt_class_string<CellHttpsError>::format(std::string& out, u64 arg)
{
	format_enum(out, arg, [](auto error)
	{
		switch (error)
		{
			STR_CASE(CELL_HTTPS_ERROR_CERTIFICATE_LOAD);
			STR_CASE(CELL_HTTPS_ERROR_BAD_MEMORY);
			STR_CASE(CELL_HTTPS_ERROR_CONTEXT_CREATION);
			STR_CASE(CELL_HTTPS_ERROR_CONNECTION_CREATION);
			STR_CASE(CELL_HTTPS_ERROR_SOCKET_ASSOCIATION);
			STR_CASE(CELL_HTTPS_ERROR_HANDSHAKE);
			STR_CASE(CELL_HTTPS_ERROR_LOOKUP_CERTIFICATE);
			STR_CASE(CELL_HTTPS_ERROR_NO_SSL);
			STR_CASE(CELL_HTTPS_ERROR_KEY_LOAD);
			STR_CASE(CELL_HTTPS_ERROR_CERT_KEY_MISMATCH);
			STR_CASE(CELL_HTTPS_ERROR_KEY_NEEDS_CERT);
			STR_CASE(CELL_HTTPS_ERROR_CERT_NEEDS_KEY);
			STR_CASE(CELL_HTTPS_ERROR_RETRY_CONNECTION);
			STR_CASE(CELL_HTTPS_ERROR_NET_SSL_CONNECT);
			STR_CASE(CELL_HTTPS_ERROR_NET_SSL_SEND);
			STR_CASE(CELL_HTTPS_ERROR_NET_SSL_RECV);
		}

		return unknown;
	});
}

template<>
void fmt_class_string<CellHttpErrorNet>::format(std::string& out, u64 arg)
{
	format_enum(out, arg, [](auto error)
	{
		switch (error)
		{
			STR_CASE(CELL_HTTP_ERROR_NET_RESOLVER_NETDB_INTERNAL);
			STR_CASE(CELL_HTTP_ERROR_NET_RESOLVER_HOST_NOT_FOUND);
			STR_CASE(CELL_HTTP_ERROR_NET_RESOLVER_TRY_AGAIN);
			STR_CASE(CELL_HTTP_ERROR_NET_RESOLVER_NO_RECOVERY);
			STR_CASE(CELL_HTTP_ERROR_NET_RESOLVER_NO_DATA);
			//STR_CASE(CELL_HTTP_ERROR_NET_RESOLVER_NO_ADDRESS);

			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_ABORT_ETIME);

			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_OPTION_ETIME);

			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SOCKET_ETIME);

			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_CONNECT_ETIME);

			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_SEND_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SEND_ETIME);

			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_RECV_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_RECV_ETIME);

			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SELECT_ETIME);

			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_CONNECT_ETIME);

			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_SEND_ETIME);

			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EPERM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOENT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ESRCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EINTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENXIO);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_E2BIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOEXC);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EBADF);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ECHILD);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EDEADLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOMEM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EACCES);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EFAULT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOTBLK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EBUSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EEXIST);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EXDEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENODEV);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOTDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EISDIR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EINVAL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EMFILE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOTTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ETXTBSY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EFBIG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOSPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ESPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EROFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EMLINK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EPIPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EDOM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ERANGE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EAGAIN);
			//STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EWOULDBLOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EINPROGRESS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EALREADY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOTSOCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EDESTADDRREQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EMSGSIZE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EPROTOTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOPROTOOPT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EPROTONOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ESOCKTNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EOPNOTSUPP);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EPFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EAFNOSUPPORT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EADDRINUSE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EADDRNOTAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENETDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENETUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENETRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ECONNABORTED);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ECONNRESET);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOBUFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EISCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOTCONN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ESHUTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ETOOMANYREFS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ETIMEDOUT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ECONNREFUSED);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ELOOP);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENAMETOOLONG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EHOSTDOWN);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EHOSTUNREACH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOTEMPTY);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EPROCLIM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EUSERS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EDQUOT);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ESTALE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EREMOTE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EBADRPC);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ERPCMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EPROGUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EPROGMISMATCH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EPROCUNAVAIL);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOLCK);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOSYS);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EFTYPE);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENEEDAUTH);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EIDRM);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EOVERFLOW);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EILSEQ);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOTSUP);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ECANCELED);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_EBADMSG);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENODATA);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOSR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ENOSTR);
			STR_CASE(CELL_HTTP_ERROR_NET_SSL_RECV_ETIME);
		}

		return unknown;
	});
}

error_code cellHttpAuthCacheExport()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpAuthCacheFlush()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpAuthCacheGetEntryMax()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpAuthCacheImport()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpAuthCacheSetEntryMax()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpInit()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpEnd()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpsInit()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpsEnd()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpSetProxy()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpGetCookie()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpGetProxy()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpInitCookie()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpEndCookie()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpAddCookieWithClientId()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpSessionCookieFlush()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpCookieExport()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpCookieExportWithClientId()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpCookieFlush()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpCookieImport()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpCookieImportWithClientId()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetCookieSendCallback()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetCookieRecvCallback()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpCreateClient()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpDestroyClient()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetAuthenticationCallback()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetTransactionStateCallback()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetRedirectCallback()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetProxy()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetProxy()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetVersion()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetVersion()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetPipeline()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetPipeline()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetKeepAlive()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetKeepAlive()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetAutoRedirect()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetAutoRedirect()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetAutoAuthentication()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetAutoAuthentication()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetAuthenticationCacheStatus()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetAuthenticationCacheStatus()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetCookieStatus()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetCookieStatus()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetUserAgent()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetUserAgent()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetResponseBufferMax()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetResponseBufferMax()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientCloseAllConnections()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientCloseConnections()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientPollConnections()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetConnectionStateCallback()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetConnectionWaitStatus()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetConnectionWaitStatus()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetConnectionWaitTimeout()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetConnectionWaitTimeout()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetRecvTimeout()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetRecvTimeout()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetSendTimeout()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetSendTimeout()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetConnTimeout()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetConnTimeout()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetTotalPoolSize()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetTotalPoolSize()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetPerHostPoolSize()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetPerHostPoolSize()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetPerHostKeepAliveMax()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetPerHostKeepAliveMax()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetPerPipelineMax()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetPerPipelineMax()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetRecvBufferSize()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetRecvBufferSize()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetSendBufferSize()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetSendBufferSize()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetAllHeaders()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetHeader()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetHeader()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientAddHeader()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientDeleteHeader()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetSslCallback()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetSslClientCertificate()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpCreateTransaction()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpDestroyTransaction()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionGetUri()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionCloseConnection()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionReleaseConnection()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionAbortConnection()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpSendRequest()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRequestSetContentLength()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRequestGetContentLength()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRequestSetChunkedTransferStatus()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRequestGetChunkedTransferStatus()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRequestGetAllHeaders()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRequestSetHeader()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRequestGetHeader()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRequestAddHeader()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRequestDeleteHeader()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpRecvResponse()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpResponseGetAllHeaders()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpResponseGetHeader()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpResponseGetContentLength()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpResponseGetStatusCode()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpResponseGetStatusLine()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionGetSslCipherName()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionGetSslCipherId()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionGetSslCipherVersion()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionGetSslCipherBits()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionGetSslCipherString()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionGetSslVersion()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpTransactionGetSslId()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetMinSslVersion()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetMinSslVersion()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetSslVersion()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientGetSslVersion()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpClientSetSslIdDestroyCallback()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpFlushCache()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpEndCache()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpInitCache()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpGetCacheInfo()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

error_code cellHttpGetMemoryInfo()
{
	UNIMPLEMENTED_FUNC(cellHttp);
	return CELL_OK;
}

DECLARE(ppu_module_manager::cellHttp)("cellHttp", []()
{
	REG_FUNC(cellHttp, cellHttpAuthCacheExport);
	REG_FUNC(cellHttp, cellHttpAuthCacheFlush);
	REG_FUNC(cellHttp, cellHttpAuthCacheGetEntryMax);
	REG_FUNC(cellHttp, cellHttpAuthCacheImport);
	REG_FUNC(cellHttp, cellHttpAuthCacheSetEntryMax);
	REG_FUNC(cellHttp, cellHttpInit);
	REG_FUNC(cellHttp, cellHttpEnd);
	REG_FUNC(cellHttp, cellHttpsInit);
	REG_FUNC(cellHttp, cellHttpsEnd);
	REG_FUNC(cellHttp, cellHttpSetProxy);
	REG_FUNC(cellHttp, cellHttpGetCookie);
	REG_FUNC(cellHttp, cellHttpGetProxy);

	REG_FUNC(cellHttp, cellHttpInitCookie);
	REG_FUNC(cellHttp, cellHttpEndCookie);
	REG_FUNC(cellHttp, cellHttpAddCookieWithClientId);
	REG_FUNC(cellHttp, cellHttpSessionCookieFlush);

	REG_FUNC(cellHttp, cellHttpCookieExport);
	REG_FUNC(cellHttp, cellHttpCookieExportWithClientId);
	REG_FUNC(cellHttp, cellHttpCookieFlush);
	REG_FUNC(cellHttp, cellHttpCookieImport);
	REG_FUNC(cellHttp, cellHttpCookieImportWithClientId);

	REG_FUNC(cellHttp, cellHttpClientSetCookieSendCallback);
	REG_FUNC(cellHttp, cellHttpClientSetCookieRecvCallback);

	REG_FUNC(cellHttp, cellHttpCreateClient);
	REG_FUNC(cellHttp, cellHttpDestroyClient);
	REG_FUNC(cellHttp, cellHttpClientSetAuthenticationCallback);
	REG_FUNC(cellHttp, cellHttpClientSetTransactionStateCallback);
	REG_FUNC(cellHttp, cellHttpClientSetRedirectCallback);

	REG_FUNC(cellHttp, cellHttpClientSetProxy);
	REG_FUNC(cellHttp, cellHttpClientGetProxy);
	REG_FUNC(cellHttp, cellHttpClientSetVersion);
	REG_FUNC(cellHttp, cellHttpClientGetVersion);
	REG_FUNC(cellHttp, cellHttpClientSetPipeline);
	REG_FUNC(cellHttp, cellHttpClientGetPipeline);
	REG_FUNC(cellHttp, cellHttpClientSetKeepAlive);
	REG_FUNC(cellHttp, cellHttpClientGetKeepAlive);
	REG_FUNC(cellHttp, cellHttpClientSetAutoRedirect);
	REG_FUNC(cellHttp, cellHttpClientGetAutoRedirect);
	REG_FUNC(cellHttp, cellHttpClientSetAutoAuthentication);
	REG_FUNC(cellHttp, cellHttpClientGetAutoAuthentication);
	REG_FUNC(cellHttp, cellHttpClientSetAuthenticationCacheStatus);
	REG_FUNC(cellHttp, cellHttpClientGetAuthenticationCacheStatus);
	REG_FUNC(cellHttp, cellHttpClientSetCookieStatus);
	REG_FUNC(cellHttp, cellHttpClientGetCookieStatus);
	REG_FUNC(cellHttp, cellHttpClientSetUserAgent);
	REG_FUNC(cellHttp, cellHttpClientGetUserAgent);
	REG_FUNC(cellHttp, cellHttpClientSetResponseBufferMax);
	REG_FUNC(cellHttp, cellHttpClientGetResponseBufferMax);

	REG_FUNC(cellHttp, cellHttpClientCloseAllConnections);
	REG_FUNC(cellHttp, cellHttpClientCloseConnections);
	REG_FUNC(cellHttp, cellHttpClientPollConnections);

	REG_FUNC(cellHttp, cellHttpClientSetConnectionStateCallback);
	REG_FUNC(cellHttp, cellHttpClientGetConnectionWaitStatus);
	REG_FUNC(cellHttp, cellHttpClientSetConnectionWaitStatus);
	REG_FUNC(cellHttp, cellHttpClientGetConnectionWaitTimeout);
	REG_FUNC(cellHttp, cellHttpClientSetConnectionWaitTimeout);
	REG_FUNC(cellHttp, cellHttpClientSetRecvTimeout);
	REG_FUNC(cellHttp, cellHttpClientGetRecvTimeout);
	REG_FUNC(cellHttp, cellHttpClientSetSendTimeout);
	REG_FUNC(cellHttp, cellHttpClientGetSendTimeout);
	REG_FUNC(cellHttp, cellHttpClientSetConnTimeout);
	REG_FUNC(cellHttp, cellHttpClientGetConnTimeout);
	REG_FUNC(cellHttp, cellHttpClientSetTotalPoolSize);
	REG_FUNC(cellHttp, cellHttpClientGetTotalPoolSize);
	REG_FUNC(cellHttp, cellHttpClientSetPerHostPoolSize);
	REG_FUNC(cellHttp, cellHttpClientGetPerHostPoolSize);
	REG_FUNC(cellHttp, cellHttpClientSetPerHostKeepAliveMax);
	REG_FUNC(cellHttp, cellHttpClientGetPerHostKeepAliveMax);
	REG_FUNC(cellHttp, cellHttpClientSetPerPipelineMax);
	REG_FUNC(cellHttp, cellHttpClientGetPerPipelineMax);
	REG_FUNC(cellHttp, cellHttpClientSetRecvBufferSize);
	REG_FUNC(cellHttp, cellHttpClientGetRecvBufferSize);
	REG_FUNC(cellHttp, cellHttpClientSetSendBufferSize);
	REG_FUNC(cellHttp, cellHttpClientGetSendBufferSize);

	REG_FUNC(cellHttp, cellHttpClientGetAllHeaders);
	REG_FUNC(cellHttp, cellHttpClientSetHeader);
	REG_FUNC(cellHttp, cellHttpClientGetHeader);
	REG_FUNC(cellHttp, cellHttpClientAddHeader);
	REG_FUNC(cellHttp, cellHttpClientDeleteHeader);

	REG_FUNC(cellHttp, cellHttpClientSetSslCallback);
	REG_FUNC(cellHttp, cellHttpClientSetSslClientCertificate);

	REG_FUNC(cellHttp, cellHttpCreateTransaction);
	REG_FUNC(cellHttp, cellHttpDestroyTransaction);
	REG_FUNC(cellHttp, cellHttpTransactionGetUri);
	REG_FUNC(cellHttp, cellHttpTransactionCloseConnection);
	REG_FUNC(cellHttp, cellHttpTransactionReleaseConnection);
	REG_FUNC(cellHttp, cellHttpTransactionAbortConnection);

	REG_FUNC(cellHttp, cellHttpSendRequest);
	REG_FUNC(cellHttp, cellHttpRequestSetContentLength);
	REG_FUNC(cellHttp, cellHttpRequestGetContentLength);
	REG_FUNC(cellHttp, cellHttpRequestSetChunkedTransferStatus);
	REG_FUNC(cellHttp, cellHttpRequestGetChunkedTransferStatus);
	REG_FUNC(cellHttp, cellHttpRequestGetAllHeaders);
	REG_FUNC(cellHttp, cellHttpRequestSetHeader);
	REG_FUNC(cellHttp, cellHttpRequestGetHeader);
	REG_FUNC(cellHttp, cellHttpRequestAddHeader);
	REG_FUNC(cellHttp, cellHttpRequestDeleteHeader);

	REG_FUNC(cellHttp, cellHttpRecvResponse);
	REG_FUNC(cellHttp, cellHttpResponseGetAllHeaders);
	REG_FUNC(cellHttp, cellHttpResponseGetHeader);
	REG_FUNC(cellHttp, cellHttpResponseGetContentLength);
	REG_FUNC(cellHttp, cellHttpResponseGetStatusCode);
	REG_FUNC(cellHttp, cellHttpResponseGetStatusLine);

	REG_FUNC(cellHttp, cellHttpTransactionGetSslCipherName);
	REG_FUNC(cellHttp, cellHttpTransactionGetSslCipherId);
	REG_FUNC(cellHttp, cellHttpTransactionGetSslCipherVersion);
	REG_FUNC(cellHttp, cellHttpTransactionGetSslCipherBits);
	REG_FUNC(cellHttp, cellHttpTransactionGetSslCipherString);
	REG_FUNC(cellHttp, cellHttpTransactionGetSslVersion);
	REG_FUNC(cellHttp, cellHttpTransactionGetSslId);

	REG_FUNC(cellHttp, cellHttpClientSetMinSslVersion);
	REG_FUNC(cellHttp, cellHttpClientGetMinSslVersion);
	REG_FUNC(cellHttp, cellHttpClientSetSslVersion);
	REG_FUNC(cellHttp, cellHttpClientGetSslVersion);
	REG_FUNC(cellHttp, cellHttpClientSetSslIdDestroyCallback);

	REG_FUNC(cellHttp, cellHttpFlushCache);
	REG_FUNC(cellHttp, cellHttpEndCache);
	REG_FUNC(cellHttp, cellHttpInitCache);
	REG_FUNC(cellHttp, cellHttpGetCacheInfo);
	REG_FUNC(cellHttp, cellHttpGetMemoryInfo);
});

DECLARE(ppu_module_manager::cellHttps)("cellHttps", []()
{
	// cellHttps doesn't have functions (cellHttpsInit belongs to cellHttp, for example)
});
