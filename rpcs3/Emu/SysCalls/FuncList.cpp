#include "stdafx.h"
#include "SysCalls.h"

#define FUNC_LOG_ERROR(x) ConLog.Error(x); return 0
s64 SysCalls::DoFunc(const u32 id) 
{
	switch(id)
	{
	case 0x1529e506: FUNC_LOG_ERROR("TODO: cellAdecDecodeAu");
	case 0x487b613e: FUNC_LOG_ERROR("TODO: cellAdecStartSeq");
	case 0x7e4a4a49: FUNC_LOG_ERROR("TODO: cellAdecQueryAttr");
	case 0x847d2380: FUNC_LOG_ERROR("TODO: cellAdecClose");
	case 0x8b5551a4: FUNC_LOG_ERROR("TODO: cellAdecOpenEx");
	case 0x97ff2af1: FUNC_LOG_ERROR("TODO: cellAdecGetPcm");
	case 0xbd75f78b: FUNC_LOG_ERROR("TODO: cellAdecGetPcmItem");
	case 0xd00a6988: FUNC_LOG_ERROR("TODO: cellAdecOpen");
	case 0xe2ea549b: FUNC_LOG_ERROR("TODO: cellAdecEndSeq");
	case 0x006016da: FUNC_LOG_ERROR("TODO: cellAtracGetBitrate");
	case 0x06ddb53e: FUNC_LOG_ERROR("TODO: cellAtracSetSecondBuffer");
	case 0x0f9667b6: FUNC_LOG_ERROR("TODO: cellAtracGetChannel");
	case 0x2642d4cc: FUNC_LOG_ERROR("TODO: cellAtracCreateDecoderExt");
	case 0x2bfff084: FUNC_LOG_ERROR("TODO: cellAtracGetStreamDataInfo");
	case 0x46cfc013: FUNC_LOG_ERROR("TODO: cellAtracAddStreamData");
	case 0x4797d1ff: FUNC_LOG_ERROR("TODO: cellAtracGetNextSample");
	case 0x5f62d546: FUNC_LOG_ERROR("TODO: cellAtracGetMaxSample");
	case 0x66afc68e: FUNC_LOG_ERROR("TODO: cellAtracSetDataAndGetMemSize");
	case 0x761cb9be: FUNC_LOG_ERROR("TODO: cellAtracDeleteDecoder");
	case 0x7772eb2b: FUNC_LOG_ERROR("TODO: cellAtracResetPlayPosition");
	case 0x78ba5c41: FUNC_LOG_ERROR("TODO: cellAtracSetLoopNum");
	case 0x7b22e672: FUNC_LOG_ERROR("TODO: cellAtracGetNextDecodePosition");
	case 0x8eb0e65f: FUNC_LOG_ERROR("TODO: cellAtracDecode");
	case 0x99efe171: FUNC_LOG_ERROR("TODO: cellAtracIsSecondBufferNeeded");
	case 0x99fb73d1: FUNC_LOG_ERROR("TODO: cellAtracGetBufferInfoForResetting");
	case 0xab6b6dbf: FUNC_LOG_ERROR("TODO: cellAtracGetLoopInfo");
	case 0xb5c11938: FUNC_LOG_ERROR("TODO: cellAtracGetInternalErrorInfo");
	case 0xbe07f05e: FUNC_LOG_ERROR("TODO: cellAtracGetSecondBufferInfo");
	case 0xc9a95fcb: FUNC_LOG_ERROR("TODO: cellAtracGetVacantSize");
	case 0xcf01d5d4: FUNC_LOG_ERROR("TODO: cellAtracGetSoundInfo");
	case 0xdfab73aa: FUNC_LOG_ERROR("TODO: cellAtracGetRemainFrame");
	case 0xfa293e88: FUNC_LOG_ERROR("TODO: cellAtracCreateDecoder");
	case 0x04af134e: FUNC_LOG_ERROR("TODO: cellAudioCreateNotifyEventQueue");
	case 0x0b168f92: FUNC_LOG_ERROR("TODO: cellAudioInit");
	case 0x17d1213b: FUNC_LOG_ERROR("TODO: cellAudioSendAck");
	case 0x28bc1409: FUNC_LOG_ERROR("TODO: cellAudioUnsetPersonalDevice");
	case 0x2b9bd9ad: FUNC_LOG_ERROR("TODO: cellAudioRemoveNotifyEventQueueEx");
	case 0x31211f6b: FUNC_LOG_ERROR("TODO: cellAudioMiscSetAccessoryVolume");
	case 0x377e0cd9: FUNC_LOG_ERROR("TODO: cellAudioSetNotifyEventQueue");
	case 0x4109d08c: FUNC_LOG_ERROR("TODO: cellAudioGetPortTimestamp");
	case 0x4129fe2d: FUNC_LOG_ERROR("TODO: cellAudioPortClose");
	case 0x5676f81c: FUNC_LOG_ERROR("TODO: cellAudioSetPersonalDevice");
	case 0x56dfe179: FUNC_LOG_ERROR("TODO: cellAudioSetPortLevel");
	case 0x5b1e2c73: FUNC_LOG_ERROR("TODO: cellAudioPortStop");
	case 0x74a66af0: FUNC_LOG_ERROR("TODO: cellAudioGetPortConfig");
	case 0x832df17e: FUNC_LOG_ERROR("TODO: cellAudioAdd6chData");
	case 0x89be28f2: FUNC_LOG_ERROR("TODO: cellAudioPortStart");
	case 0x9e4b1db8: FUNC_LOG_ERROR("TODO: cellAudioAdd2chData");
	case 0xa4c9ba65: FUNC_LOG_ERROR("TODO: cellAudioCreateNotifyEventQueueEx");
	case 0xb56ef5a1: FUNC_LOG_ERROR("TODO: cellAudioSetNotifyEventQueueEx");
	case 0xca5ac370: FUNC_LOG_ERROR("TODO: cellAudioQuit");
	case 0xcd7bc431: FUNC_LOG_ERROR("TODO: cellAudioPortOpen");
	case 0xdab029aa: FUNC_LOG_ERROR("TODO: cellAudioAddData");
	case 0xe4046afe: FUNC_LOG_ERROR("TODO: cellAudioGetPortBlockTag");
	case 0xff3626fd: FUNC_LOG_ERROR("TODO: cellAudioRemoveNotifyEventQueue");
	case 0x2ab0d183: FUNC_LOG_ERROR("TODO: cellBGDLGetInfo2");
	case 0x4e9bb95b: FUNC_LOG_ERROR("TODO: cellBGDLGetInfo");
	case 0x74e57bdf: FUNC_LOG_ERROR("TODO: cellBGDLGetMode");
	case 0x7e134a90: FUNC_LOG_ERROR("TODO: cellBGDLSetMode");
	case 0x02f5ced0: FUNC_LOG_ERROR("TODO: cellCameraStop");
	case 0x0e63c444: FUNC_LOG_ERROR("TODO: cellCameraGetBufferInfoEx");
	case 0x10697d7f: FUNC_LOG_ERROR("TODO: cellCameraGetBufferInfo");
	case 0x21fc151f: FUNC_LOG_ERROR("TODO: cellCameraReadEx");
	case 0x2dea3e9b: FUNC_LOG_ERROR("TODO: cellCameraSetExtensionUnit");
	case 0x379c5dd6: FUNC_LOG_ERROR("TODO: cellCameraClose");
	case 0x3845d39b: FUNC_LOG_ERROR("TODO: cellCameraRead");
	case 0x44673f07: FUNC_LOG_ERROR("TODO: cellCameraRemoveNotifyEventQueue2");
	case 0x456dc4aa: FUNC_LOG_ERROR("TODO: cellCameraStart");
	case 0x532b8aaa: FUNC_LOG_ERROR("TODO: cellCameraGetAttribute");
	case 0x58bc5870: FUNC_LOG_ERROR("TODO: cellCameraGetType");
	case 0x5ad46570: FUNC_LOG_ERROR("TODO: cellCameraEnd");
	case 0x5d25f866: FUNC_LOG_ERROR("TODO: cellCameraOpenEx");
	case 0x5eebf24e: FUNC_LOG_ERROR("TODO: cellCameraIsStarted");
	case 0x602e2052: FUNC_LOG_ERROR("TODO: cellCameraGetDeviceGUID");
	case 0x61dfbe83: FUNC_LOG_ERROR("TODO: cellCameraPrepExtensionUnit");
	case 0x7dac520c: FUNC_LOG_ERROR("TODO: cellCameraGetBufferSize");
	case 0x7e063bbc: FUNC_LOG_ERROR("TODO: cellCameraIsAttached");
	case 0x81f83db9: FUNC_LOG_ERROR("TODO: cellCameraReset");
	case 0x85e1b8da: FUNC_LOG_ERROR("TODO: cellCameraOpen");
	case 0x8ca53dde: FUNC_LOG_ERROR("TODO: cellCameraIsAvailable");
	case 0x8cd56eee: FUNC_LOG_ERROR("TODO: cellCameraSetAttribute");
	case 0x9b98d258: FUNC_LOG_ERROR("TODO: cellCameraRemoveNotifyEventQueue");
	case 0xa7fd2f5b: FUNC_LOG_ERROR("TODO: cellCameraSetNotifyEventQueue2");
	case 0xb0647e5a: FUNC_LOG_ERROR("TODO: cellCameraSetNotifyEventQueue");
	case 0xb602e328: FUNC_LOG_ERROR("TODO: cellCameraGetExtensionUnit");
	case 0xbf47c5dd: FUNC_LOG_ERROR("TODO: cellCameraInit");
	case 0xe28b206b: FUNC_LOG_ERROR("TODO: cellCameraReadComplete");
	case 0xeb6f95fb: FUNC_LOG_ERROR("TODO: cellCameraCtrlExtensionUnit");
	case 0xfa160f24: FUNC_LOG_ERROR("TODO: cellCameraIsOpen");
	case 0x0f6ab57b: FUNC_LOG_ERROR("TODO: cellCelp8EncStart");
	case 0x2099f86e: FUNC_LOG_ERROR("TODO: cellCelp8EncEncodeFrame");
	case 0x29da1ea6: FUNC_LOG_ERROR("TODO: cellCelp8EncWaitForOutput");
	case 0x2d677e0c: FUNC_LOG_ERROR("TODO: cellCelp8EncQueryAttr");
	case 0x2eb6efee: FUNC_LOG_ERROR("TODO: cellCelp8EncOpen");
	case 0x48c5020d: FUNC_LOG_ERROR("TODO: cellCelp8EncGetAu");
	case 0xbbbc2c1c: FUNC_LOG_ERROR("TODO: cellCelp8EncEnd");
	case 0xcd48ad62: FUNC_LOG_ERROR("TODO: cellCelp8EncOpenEx");
	case 0xfd2566b4: FUNC_LOG_ERROR("TODO: cellCelp8EncClose");
	case 0x15ec0cca: FUNC_LOG_ERROR("TODO: cellCelpEncClose");
	case 0x3773692f: FUNC_LOG_ERROR("TODO: cellCelpEncGetAu");
	case 0x55dc23de: FUNC_LOG_ERROR("TODO: cellCelpEncStart");
	case 0x6b148570: FUNC_LOG_ERROR("TODO: cellCelpEncQueryAttr");
	case 0x77b3b29a: FUNC_LOG_ERROR("TODO: cellCelpEncOpen");
	case 0x81fe030c: FUNC_LOG_ERROR("TODO: cellCelpEncEncodeFrame");
	case 0x9b244272: FUNC_LOG_ERROR("TODO: cellCelpEncWaitForOutput");
	case 0x9eb084db: FUNC_LOG_ERROR("TODO: cellCelpEncOpenEx");
	case 0xf2b85dff: FUNC_LOG_ERROR("TODO: cellCelpEncEnd");
	case 0x002e8da2: FUNC_LOG_ERROR("TODO: cellDmuxPeekAuEx");
	case 0x02170d1a: FUNC_LOG_ERROR("TODO: cellDmuxQueryEsAttr");
	case 0x04e7499f: FUNC_LOG_ERROR("TODO: cellDmuxSetStream");
	case 0x05371c8d: FUNC_LOG_ERROR("TODO: cellDmuxDisableEs");
	case 0x11bc3a6c: FUNC_LOG_ERROR("TODO: cellDmuxOpen2");
	case 0x21d424f0: FUNC_LOG_ERROR("TODO: cellDmuxResetEs");
	case 0x24ea6474: FUNC_LOG_ERROR("TODO: cellDmuxReleaseAu");
	case 0x2750c5e0: FUNC_LOG_ERROR("TODO: cellDmuxPeekAu");
	case 0x2c9a5857: FUNC_LOG_ERROR("TODO: cellDmuxGetAuEx");
	case 0x3f76e3cd: FUNC_LOG_ERROR("TODO: cellDmuxQueryAttr2");
	case 0x42c716b5: FUNC_LOG_ERROR("TODO: cellDmuxGetAu");
	case 0x52911bcf: FUNC_LOG_ERROR("TODO: cellDmuxQueryEsAttr2");
	case 0x5d345de9: FUNC_LOG_ERROR("TODO: cellDmuxResetStream");
	case 0x68492de9: FUNC_LOG_ERROR("TODO: cellDmuxOpen");
	case 0x7b56dc3f: FUNC_LOG_ERROR("TODO: cellDmuxEnableEs");
	case 0x8c692521: FUNC_LOG_ERROR("TODO: cellDmuxClose");
	case 0xa2d4189b: FUNC_LOG_ERROR("TODO: cellDmuxQueryAttr");
	case 0xccff1284: FUNC_LOG_ERROR("TODO: cellDmuxResetStreamAndWaitDone");
	case 0xebb3b2bd: FUNC_LOG_ERROR("TODO: cellDmuxFlushEs");
	case 0xf6c23560: FUNC_LOG_ERROR("TODO: cellDmuxOpenEx");
	case 0x01036193: FUNC_LOG_ERROR("TODO: cellFiberPpuContextReturnToThread");
	case 0x081c98be: FUNC_LOG_ERROR("TODO: cellFiberPpuContextRunScheduler");
	case 0x0a25b6c8: FUNC_LOG_ERROR("TODO: cellFiberPpuContextEnterScheduler");
	case 0x0c44f441: FUNC_LOG_ERROR("TODO: cellFiberPpuYield");
	case 0x12b1acf0: FUNC_LOG_ERROR("TODO: cellFiberPpuRunFibers");
	case 0x1e7a247a: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlRunFibers");
	case 0x31252ec3: FUNC_LOG_ERROR("TODO: _cellFiberPpuContextAttributeInitialize");
	case 0x3204b146: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlInitialize");
	case 0x34a81091: FUNC_LOG_ERROR("TODO: cellFiberPpuContextSelf");
	case 0x3860a12a: FUNC_LOG_ERROR("TODO: cellFiberPpuSchedulerTraceFinalize");
	case 0x392c5aa5: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlSetPollingMode");
	case 0x3b417f82: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlJoinFiber");
	case 0x4fc86b2c: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlDisconnectEventQueue");
	case 0x55870804: FUNC_LOG_ERROR("TODO: _cellFiberPpuInitialize");
	case 0x5d3992dd: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlSendSignal");
	case 0x5d9a7034: FUNC_LOG_ERROR("TODO: cellFiberPpuSelf");
	case 0x62a20f0d: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlConnectEventQueueToSpurs");
	case 0x68ba4568: FUNC_LOG_ERROR("TODO: _cellFiberPpuUtilWorkerControlAttributeInitialize");
	case 0x6c164b3b: FUNC_LOG_ERROR("TODO: cellFiberPpuWaitSignal");
	case 0x72086315: FUNC_LOG_ERROR("TODO: cellFiberPpuContextInitialize");
	case 0x7c2f4034: FUNC_LOG_ERROR("TODO: cellFiberPpuCreateFiber");
	case 0x8afb8356: FUNC_LOG_ERROR("TODO: cellFiberPpuSendSignal");
	case 0x8b6baa01: FUNC_LOG_ERROR("TODO: cellFiberPpuFinalizeScheduler");
	case 0x9e25c72d: FUNC_LOG_ERROR("TODO: _cellFiberPpuSchedulerAttributeInitialize");
	case 0xa27c95ca: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlFinalize");
	case 0xa4599cf3: FUNC_LOG_ERROR("TODO: cellFiberPpuWaitFlag");
	case 0xa6004249: FUNC_LOG_ERROR("TODO: cellFiberPpuJoinFiber");
	case 0xaba1c563: FUNC_LOG_ERROR("TODO: cellFiberPpuContextRun");
	case 0xadedbebf: FUNC_LOG_ERROR("TODO: cellFiberPpuSchedulerTraceStart");
	case 0xb0594b2d: FUNC_LOG_ERROR("TODO: cellFiberPpuGetScheduler");
	case 0xb3a48079: FUNC_LOG_ERROR("TODO: cellFiberPpuContextFinalize");
	case 0xb90c871b: FUNC_LOG_ERROR("TODO: cellFiberPpuContextCheckStackLimit");
	case 0xbabf714b: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlWakeup");
	case 0xbf9cd933: FUNC_LOG_ERROR("TODO: cellFiberPpuSchedulerTraceInitialize");
	case 0xbfca88d3: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlCreateFiber");
	case 0xc04e2438: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlShutdown");
	case 0xc11f8056: FUNC_LOG_ERROR("TODO: _cellFiberPpuAttributeInitialize");
	case 0xd0066b17: FUNC_LOG_ERROR("TODO: cellFiberPpuContextSwitch");
	case 0xe492a675: FUNC_LOG_ERROR("TODO: cellFiberPpuHasRunnableFiber");
	case 0xe665f9a9: FUNC_LOG_ERROR("TODO: cellFiberPpuSchedulerTraceStop");
	case 0xea6dc1ad: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlCheckFlags");
	case 0xee3b604d: FUNC_LOG_ERROR("TODO: cellFiberPpuInitializeScheduler");
	case 0xf2ccad4f: FUNC_LOG_ERROR("TODO: cellFiberPpuUtilWorkerControlInitializeWithAttribute");
	case 0xf3e81219: FUNC_LOG_ERROR("TODO: cellFiberPpuCheckStackLimit");
	case 0xf6c6900c: FUNC_LOG_ERROR("TODO: cellFiberPpuCheckFlags");
	case 0xfa8d5f95: FUNC_LOG_ERROR("TODO: cellFiberPpuExit");
	case 0xfbf5fe40: FUNC_LOG_ERROR("TODO: cellFiberPpuSetPriority");
	case 0x0109f3d3: FUNC_LOG_ERROR("TODO: cellFontGetRenderEffectWeight");
	case 0x03a142b9: FUNC_LOG_ERROR("TODO: cellFontGraphicsGetDrawType");
	case 0x042e74e3: FUNC_LOG_ERROR("TODO: cellFontCreateRenderer");
	case 0x061049ad: FUNC_LOG_ERROR("TODO: cellFontGraphicsSetFontRGBA");
	case 0x06be743d: FUNC_LOG_ERROR("TODO: cellFontGetKerning");
	case 0x073fa321: FUNC_LOG_ERROR("TODO: cellFontOpenFontsetOnMemory");
	case 0x0a7306a4: FUNC_LOG_ERROR("TODO: cellFontOpenFontFile");
	case 0x0baf90fe: FUNC_LOG_ERROR("TODO: cellFontGetRenderScaledKerning");
	case 0x0d106a11: FUNC_LOG_ERROR("TODO: cellFontGetRenderScalePixel");
	case 0x1387c45c: FUNC_LOG_ERROR("TODO: cellFontGetHorizontalLayout");
	case 0x16322df1: FUNC_LOG_ERROR("TODO: cellFontGraphicsSetScalePixel");
	case 0x1a218fe4: FUNC_LOG_ERROR("TODO: cellFontRenderCharGlyphImageHorizontal");
	case 0x21ebb248: FUNC_LOG_ERROR("TODO: cellFontDestroyRenderer");
	case 0x227e1e3c: FUNC_LOG_ERROR("TODO: cellFontSetupRenderScalePixel");
	case 0x22e24707: FUNC_LOG_ERROR("TODO: cellFontGlyphGetScalePixel");
	case 0x231d5941: FUNC_LOG_ERROR("TODO: cellFontGlyphGetHorizontalShift");
	case 0x2388186c: FUNC_LOG_ERROR("TODO: cellFontGraphicsGetScalePixel");
	case 0x25253fe4: FUNC_LOG_ERROR("TODO: cellFontSetEffectWeight");
	case 0x25dbeff9: FUNC_LOG_ERROR("TODO: cellFontGetEffectWeight");
	case 0x285d30d6: FUNC_LOG_ERROR("TODO: cellFontGetScalePixel");
	case 0x29329541: FUNC_LOG_ERROR("TODO: cellFontOpenFontInstance");
	case 0x297f0e93: FUNC_LOG_ERROR("TODO: cellFontSetScalePixel");
	case 0x2da9fd9d: FUNC_LOG_ERROR("TODO: cellFontGetRenderCharGlyphMetrics");
	case 0x3da90559: FUNC_LOG_ERROR("TODO: cellFontClearFileCache");
	case 0x40d40544: FUNC_LOG_ERROR("TODO: cellFontEndLibrary");
	case 0x47ca71ef: FUNC_LOG_ERROR("TODO: cellFontAdjustFontScaling");
	case 0x4d19c631: FUNC_LOG_ERROR("TODO: cellFontSetupRenderScalePoint");
	case 0x534e785f: FUNC_LOG_ERROR("TODO: cellFontGlyphGetVerticalShift");
	case 0x53f529fe: FUNC_LOG_ERROR("TODO: cellFontGlyphSetupVertexesGlyph");
	case 0x59ef0073: FUNC_LOG_ERROR("TODO: cellFontGetGlyphExpandBufferInfo");
	case 0x5abd8b1e: FUNC_LOG_ERROR("TODO: cellFontGetLibrary");
	case 0x66a23100: FUNC_LOG_ERROR("TODO: cellFontBindRenderer");
	case 0x698897f8: FUNC_LOG_ERROR("TODO: cellFontGetVerticalLayout");
	case 0x6bad7a69: FUNC_LOG_ERROR("TODO: cellFontVertexesGlyphRelocate");
	case 0x6bf6f832: FUNC_LOG_ERROR("TODO: cellFontSetFontsetOpenMode");
	case 0x6cfada83: FUNC_LOG_ERROR("TODO: cellFontSetFontOpenMode");
	case 0x700e6223: FUNC_LOG_ERROR("TODO: cellFontGetRenderCharGlyphMetricsVertical");
	case 0x70f3e728: FUNC_LOG_ERROR("TODO: cellFontSetScalePoint");
	case 0x78d05e08: FUNC_LOG_ERROR("TODO: cellFontSetupRenderEffectSlant");
	case 0x7ab47f7e: FUNC_LOG_ERROR("TODO: cellFontEnd");
	case 0x7c5df0d8: FUNC_LOG_ERROR("TODO: cellFontGetInitializedRevisionFlags");
	case 0x7c83bc15: FUNC_LOG_ERROR("TODO: cellFontGraphicsSetLineRGBA");
	case 0x8657c8f5: FUNC_LOG_ERROR("TODO: cellFontSetEffectSlant");
	case 0x87bd650f: FUNC_LOG_ERROR("TODO: cellFontGraphicsSetDrawType");
	case 0x88be4799: FUNC_LOG_ERROR("TODO: cellFontRenderCharGlyphImage");
	case 0x8a35c887: FUNC_LOG_ERROR("TODO: cellFontEndGraphics");
	case 0x8a632038: FUNC_LOG_ERROR("TODO: cellFontGetResolutionDpi");
	case 0x8e3f2c40: FUNC_LOG_ERROR("TODO: cellFontGlyphRenderImageVertical");
	case 0x90b9465e: FUNC_LOG_ERROR("TODO: cellFontRenderSurfaceInit");
	case 0x970d4c22: FUNC_LOG_ERROR("TODO: cellFontGraphicsSetupDrawContext");
	case 0x97b95244: FUNC_LOG_ERROR("TODO: cellFontGlyphRenderImageHorizontal");
	case 0x98ac5524: FUNC_LOG_ERROR("TODO: cellFontGetFontIdCode");
	case 0x9c8d3ff7: FUNC_LOG_ERROR("TODO: cellFontGlyphGetOutlineVertexes");
	case 0x9e19072b: FUNC_LOG_ERROR("TODO: cellFontOpenFontMemory");
	case 0x9e3b1e16: FUNC_LOG_ERROR("TODO: cellFontAdjustGlyphExpandBuffer");
	case 0xa165daae: FUNC_LOG_ERROR("TODO: cellFontGetRenderScalePoint");
	case 0xa41342dc: FUNC_LOG_ERROR("TODO: cellFontGraphicsGetFontRGBA");
	case 0xa6dc25d1: FUNC_LOG_ERROR("TODO: cellFontSetupRenderEffectWeight");
	case 0xa7b2103a: FUNC_LOG_ERROR("TODO: cellFontDelete");
	case 0xa885cc9b: FUNC_LOG_ERROR("TODO: cellFontOpenFontset");
	case 0xa8fae920: FUNC_LOG_ERROR("TODO: cellFontGlyphGetOutlineControlDistance");
	case 0xb015a84e: FUNC_LOG_ERROR("TODO: cellFontGetRevisionFlags");
	case 0xb276f1f6: FUNC_LOG_ERROR("TODO: cellFontCloseFont");
	case 0xb3d304b2: FUNC_LOG_ERROR("TODO: cellFontPatchWorks");
	case 0xb422b005: FUNC_LOG_ERROR("TODO: cellFontRenderSurfaceSetScissor");
	case 0xb4d112af: FUNC_LOG_ERROR("TODO: cellFontGlyphGetVertexesGlyphSize");
	case 0xc17259de: FUNC_LOG_ERROR("TODO: cellFontGenerateCharGlyph");
	case 0xc91c8ece: FUNC_LOG_ERROR("TODO: cellFontGetBindingRenderer");
	case 0xcaed32c1: FUNC_LOG_ERROR("TODO: cellFontGenerateCharGlyphVertical");
	case 0xced4dda9: FUNC_LOG_ERROR("TODO: cellFontGetRenderEffectSlant");
	case 0xd62f5d76: FUNC_LOG_ERROR("TODO: cellFontDeleteGlyph");
	case 0xd8eaee9f: FUNC_LOG_ERROR("TODO: cellFontGetCharGlyphMetrics");
	case 0xdee0836c: FUNC_LOG_ERROR("TODO: cellFontExtend");
	case 0xe01b199e: FUNC_LOG_ERROR("TODO: cellFontGlyphRenderImage");
	case 0xe16e679a: FUNC_LOG_ERROR("TODO: cellFontGetEffectSlant");
	case 0xe857a0ca: FUNC_LOG_ERROR("TODO: cellFontRenderCharGlyphImageVertical");
	case 0xf03dcc29: FUNC_LOG_ERROR("TODO: cellFontInitializeWithRevision");
	case 0xf16379fa: FUNC_LOG_ERROR("TODO: cellFontUnbindRenderer");
	case 0xf7a19060: FUNC_LOG_ERROR("TODO: cellFontGetScalePoint");
	case 0xf7aaa8e2: FUNC_LOG_ERROR("TODO: cellFontGraphicsGetLineRGBA");
	case 0xfb3341ba: FUNC_LOG_ERROR("TODO: cellFontSetResolutionDpi");
	case 0xfe9a6dd7: FUNC_LOG_ERROR("TODO: cellFontGetCharGlyphMetricsVertical");
	case 0x7a0a83c4: FUNC_LOG_ERROR("TODO: cellFontInitLibraryFreeTypeWithRevision");
	case 0xec89a187: FUNC_LOG_ERROR("TODO: cellFontFTGetRevisionFlags");
	case 0xfa0c2de0: FUNC_LOG_ERROR("TODO: cellFontFTGetInitializedRevisionFlags");
	case 0x2a8e6b92: FUNC_LOG_ERROR("TODO: cellGameGetDiscContentInfoUpdatePath");
	case 0x3a5d726a: FUNC_LOG_ERROR("TODO: cellGameGetParamString");
	case 0x42a2e133: FUNC_LOG_ERROR("TODO: cellGameCreateGameData");
	case 0x70acec67: FUNC_LOG_ERROR("TODO: cellGameContentPermit");
	case 0x87406734: FUNC_LOG_ERROR("TODO: cellGameThemeInstallFromBuffer");
	case 0xa80bf223: FUNC_LOG_ERROR("TODO: cellGameGetLocalWebContentPath");
	case 0xb0a1f8c6: FUNC_LOG_ERROR("TODO: cellGameContentErrorDialog");
	case 0xb367c6e3: FUNC_LOG_ERROR("TODO: cellGameDeleteGameData");
	case 0xb7a45caf: FUNC_LOG_ERROR("TODO: cellGameGetParamInt");
	case 0xce4374f6: FUNC_LOG_ERROR("TODO: cellGamePatchCheck");
	case 0xd24e3928: FUNC_LOG_ERROR("TODO: cellGameThemeInstall");
	case 0xdaa5cd20: FUNC_LOG_ERROR("TODO: cellGameSetParamString");
	case 0xdb9819f3: FUNC_LOG_ERROR("TODO: cellGameDataCheck");
	case 0xef9d42d5: FUNC_LOG_ERROR("TODO: cellGameGetSizeKB");
	case 0xf52639ea: FUNC_LOG_ERROR("TODO: cellGameBootCheck");
	case 0x38579ec9: FUNC_LOG_ERROR("TODO: cellGameSetExitParam");
	case 0x59b1ede1: FUNC_LOG_ERROR("TODO: cellGameGetHomeDataExportPath");
	case 0x59bbebd4: FUNC_LOG_ERROR("TODO: cellGameGetHomePath");
	case 0x72cc6cf7: FUNC_LOG_ERROR("TODO: cellGameGetHomeDataImportPath");
	case 0x94e9f81d: FUNC_LOG_ERROR("TODO: cellGameGetHomeLaunchOptionPath");
	case 0xf6acd0bc: FUNC_LOG_ERROR("TODO: cellGameGetBootGameInfo");
	case 0x055bd74d: FUNC_LOG_ERROR("TODO: cellGcmGetTiledPitchSize");
	case 0x06edea9e: FUNC_LOG_ERROR("TODO: cellGcmSetUserHandler");
	case 0x0a862772: FUNC_LOG_ERROR("TODO: cellGcmSetQueueHandler");
	case 0x0b4b62d5: FUNC_LOG_ERROR("TODO: cellGcmSetPrepareFlip");
	case 0x0e6b0dae: FUNC_LOG_ERROR("TODO: cellGcmGetDisplayInfo");
	case 0x107bf3a1: FUNC_LOG_ERROR("TODO: cellGcmInitCursor");
	case 0x15bae46b: FUNC_LOG_ERROR("TODO: _cellGcmInitBody");
	case 0x172c3197: FUNC_LOG_ERROR("TODO: cellGcmSetDefaultCommandBufferAndSegmentWordSize");
	case 0x1a0de550: FUNC_LOG_ERROR("TODO: cellGcmSetCursorPosition");
	case 0x1bd633f8: FUNC_LOG_ERROR("TODO: _cellGcmFunc3");
	case 0x1f61b3ff: FUNC_LOG_ERROR("TODO: cellGcmDumpGraphicsError");
	case 0x21397818: FUNC_LOG_ERROR("TODO: _cellGcmSetFlipCommand");
	case 0x21ac3697: FUNC_LOG_ERROR("TODO: cellGcmAddressToOffset");
	case 0x21cee035: FUNC_LOG_ERROR("TODO: cellGcmGetNotifyDataAddress");
	case 0x23ae55a3: FUNC_LOG_ERROR("TODO: cellGcmGetLastSecondVTime");
	case 0x25b40ab4: FUNC_LOG_ERROR("TODO: cellGcmSortRemapEaIoAddress");
	case 0x2922aed0: FUNC_LOG_ERROR("TODO: cellGcmGetOffsetTable");
	case 0x2a6fba9c: FUNC_LOG_ERROR("TODO: cellGcmIoOffsetToAddress");
	case 0x2ad4951b: FUNC_LOG_ERROR("TODO: cellGcmGetTimeStampLocation");
	case 0x371674cf: FUNC_LOG_ERROR("TODO: cellGcmGetDisplayBufferByFlipIndex");
	case 0x3a33c1fd: FUNC_LOG_ERROR("TODO: _cellGcmFunc15");
	case 0x3b9bd5bd: FUNC_LOG_ERROR("TODO: cellGcmUnreserveIoMapSize");
	case 0x4524cccd: FUNC_LOG_ERROR("TODO: cellGcmBindTile");
	case 0x4ae8d215: FUNC_LOG_ERROR("TODO: cellGcmSetFlipMode");
	case 0x4d7ce993: FUNC_LOG_ERROR("TODO: cellGcmSetSecondVFrequency");
	case 0x51c9d62b: FUNC_LOG_ERROR("TODO: cellGcmSetDebugOutputLevel");
	case 0x527c6439: FUNC_LOG_ERROR("TODO: cellGcmTerminate");
	case 0x5a41c10f: FUNC_LOG_ERROR("TODO: cellGcmGetTimeStamp");
	case 0x5e2ee0f0: FUNC_LOG_ERROR("TODO: cellGcmGetDefaultCommandWordSize");
	case 0x5f909b17: FUNC_LOG_ERROR("TODO: _cellGcmFunc1");
	case 0x626e8518: FUNC_LOG_ERROR("TODO: cellGcmMapEaIoAddressWithFlags");
	case 0x63387071: FUNC_LOG_ERROR("TODO: cellGcmGetLastFlipTime");
	case 0x63441cb4: FUNC_LOG_ERROR("TODO: cellGcmMapEaIoAddress");
	case 0x657571f7: FUNC_LOG_ERROR("TODO: cellGcmGetTileInfo");
	case 0x661fe266: FUNC_LOG_ERROR("TODO: _cellGcmFunc12");
	case 0x688b8ac9: FUNC_LOG_ERROR("TODO: _cellGcmFunc38");
	case 0x69c6cc82: FUNC_LOG_ERROR("TODO: cellGcmSetCursorDisable");
	case 0x723bbc7e: FUNC_LOG_ERROR("TODO: cellGcmGetVBlankCount");
	case 0x72a577ce: FUNC_LOG_ERROR("TODO: cellGcmGetFlipStatus");
	case 0x7fc034bc: FUNC_LOG_ERROR("TODO: _cellGcmFunc4");
	case 0x8572bce2: FUNC_LOG_ERROR("TODO: cellGcmGetReportDataAddressLocation");
	case 0x8bde5ebf: FUNC_LOG_ERROR("TODO: cellGcmSetUserCommand");
	case 0x8cdf8c70: FUNC_LOG_ERROR("TODO: cellGcmGetDefaultSegmentWordSize");
	case 0x8effb7fd: FUNC_LOG_ERROR("TODO: _cellGcmFunc2");
	case 0x93806525: FUNC_LOG_ERROR("TODO: cellGcmGetCurrentDisplayBufferId");
	case 0x983fb9aa: FUNC_LOG_ERROR("TODO: cellGcmSetWaitFlip");
	case 0x99d397ac: FUNC_LOG_ERROR("TODO: cellGcmGetReport");
	case 0x9a0159af: FUNC_LOG_ERROR("TODO: cellGcmGetReportDataAddress");
	case 0x9ba451e4: FUNC_LOG_ERROR("TODO: cellGcmSetDefaultFifoSize");
	case 0x9dc04436: FUNC_LOG_ERROR("TODO: cellGcmBindZcull");
	case 0xa114ec67: FUNC_LOG_ERROR("TODO: cellGcmMapMainMemory");
	case 0xa41ef7e8: FUNC_LOG_ERROR("TODO: cellGcmSetFlipHandler");
	case 0xa47c09ff: FUNC_LOG_ERROR("TODO: cellGcmSetFlipStatus");
	case 0xa53d12ae: FUNC_LOG_ERROR("TODO: cellGcmSetDisplayBuffer");
	case 0xa547adde: FUNC_LOG_ERROR("TODO: cellGcmGetControlRegister");
	case 0xa6b180ac: FUNC_LOG_ERROR("TODO: cellGcmGetReportDataLocation");
	case 0xa75640e8: FUNC_LOG_ERROR("TODO: cellGcmUnbindZcull");
	case 0xa7ede268: FUNC_LOG_ERROR("TODO: cellGcmReserveIoMapSize");
	case 0xa91b0402: FUNC_LOG_ERROR("TODO: cellGcmSetVBlankHandler");
	case 0xacee8542: FUNC_LOG_ERROR("TODO: cellGcmSetFlipImmediate");
	case 0xb2e761d4: FUNC_LOG_ERROR("TODO: cellGcmResetFlipStatus");
	case 0xbb42a9dd: FUNC_LOG_ERROR("TODO: _cellGcmFunc13");
	case 0xbc982946: FUNC_LOG_ERROR("TODO: cellGcmSetDefaultCommandBuffer");
	case 0xbd100dbc: FUNC_LOG_ERROR("TODO: cellGcmSetTileInfo");
	case 0xbd2fa0a7: FUNC_LOG_ERROR("TODO: cellGcmUpdateCursor");
	case 0xbd6d60d9: FUNC_LOG_ERROR("TODO: cellGcmSetInvalidateTile");
	case 0xc47d0812: FUNC_LOG_ERROR("TODO: cellGcmSetCursorEnable");
	case 0xc8f3bd09: FUNC_LOG_ERROR("TODO: cellGcmGetCurrentField");
	case 0xcaabd992: FUNC_LOG_ERROR("TODO: cellGcmInitDefaultFifoMode");
	case 0xd01b570d: FUNC_LOG_ERROR("TODO: cellGcmSetGraphicsHandler");
	case 0xd0b1d189: ConLog.Error("TODO: cellGcmSetTile"); return SC_ARGS_1;
	case 0xd34a420d: ConLog.Error("TODO: cellGcmSetZcull"); return SC_ARGS_1;
	case 0xd8f88e1a: FUNC_LOG_ERROR("TODO: _cellGcmSetFlipCommandWithWaitLabel");
	case 0xd9a0a879: FUNC_LOG_ERROR("TODO: cellGcmGetZcullInfo");
	case 0xd9b7653e: FUNC_LOG_ERROR("TODO: cellGcmUnbindTile");
	case 0xdb23e867: FUNC_LOG_ERROR("TODO: cellGcmUnmapIoAddress");
	case 0xdb769b32: FUNC_LOG_ERROR("TODO: cellGcmMapLocalMemory");
	case 0xdc09357e: FUNC_LOG_ERROR("TODO: cellGcmSetFlip");
	case 0xdc494430: FUNC_LOG_ERROR("TODO: cellGcmSetSecondVHandler");
	case 0xdf6476bd: FUNC_LOG_ERROR("TODO: cellGcmSetWaitFlipUnsafe");
	case 0xe315a0b2: FUNC_LOG_ERROR("TODO: cellGcmGetConfiguration");
	case 0xe44874f3: FUNC_LOG_ERROR("TODO: cellGcmSysGetLastVBlankTime");
	case 0xefd00f54: FUNC_LOG_ERROR("TODO: cellGcmUnmapEaIoAddress");
	case 0xf80196c1: FUNC_LOG_ERROR("TODO: cellGcmGetLabelAddress");
	case 0xf9bfdc72: FUNC_LOG_ERROR("TODO: cellGcmSetCursorImageOffset");
	case 0xfb81c03e: FUNC_LOG_ERROR("TODO: cellGcmGetMaxIoMapSize");
	case 0xfce9e764: FUNC_LOG_ERROR("TODO: cellGcmInitSystemMode");
	case 0xffe0160e: FUNC_LOG_ERROR("TODO: cellGcmSetVBlankFrequency");
	case 0x02e7e03e: FUNC_LOG_ERROR("TODO: cellGifDecExtDecodeData");
	case 0x116a7da9: FUNC_LOG_ERROR("TODO: cellGifDecClose");
	case 0x17fb83c1: FUNC_LOG_ERROR("TODO: cellGifDecExtOpen");
	case 0x41a90dc4: FUNC_LOG_ERROR("TODO: cellGifDecSetParameter");
	case 0x44b1bc61: FUNC_LOG_ERROR("TODO: cellGifDecDecodeData");
	case 0x4711cb7f: FUNC_LOG_ERROR("TODO: cellGifDecExtCreate");
	case 0x75745079: FUNC_LOG_ERROR("TODO: cellGifDecOpen");
	case 0x95cae771: FUNC_LOG_ERROR("TODO: cellGifDecExtSetParameter");
	case 0xb60d42a5: FUNC_LOG_ERROR("TODO: cellGifDecCreate");
	case 0xe53f91f2: FUNC_LOG_ERROR("TODO: cellGifDecExtReadHeader");
	case 0xe74b2cb1: FUNC_LOG_ERROR("TODO: cellGifDecDestroy");
	case 0xf0da95de: FUNC_LOG_ERROR("TODO: cellGifDecReadHeader");
	case 0x052a80d9: FUNC_LOG_ERROR("TODO: cellHttpCreateTransaction");
	case 0x070f1020: FUNC_LOG_ERROR("TODO: cellHttpClientGetTotalPoolSize");
	case 0x0b9fea5f: FUNC_LOG_ERROR("TODO: cellHttpRequestGetHeader");
	case 0x0d846d63: FUNC_LOG_ERROR("TODO: cellHttpCookieImportWithClientId");
	case 0x0d896b97: FUNC_LOG_ERROR("TODO: cellHttpSetProxy");
	case 0x0d9c65be: FUNC_LOG_ERROR("TODO: cellHttpClientGetAllHeaders");
	case 0x0ef17399: FUNC_LOG_ERROR("TODO: cellHttpTransactionGetUri");
	case 0x10d0d7fc: FUNC_LOG_ERROR("TODO: cellHttpResponseGetStatusCode");
	case 0x130150ea: FUNC_LOG_ERROR("TODO: cellHttpClientGetRecvBufferSize");
	case 0x1395d8d1: FUNC_LOG_ERROR("TODO: cellHttpClientSetSslCallback");
	case 0x13fe767b: FUNC_LOG_ERROR("TODO: cellHttpClientSetCookieRecvCallback");
	case 0x14bfc765: FUNC_LOG_ERROR("TODO: cellHttpClientGetConnTimeout");
	case 0x16214411: FUNC_LOG_ERROR("TODO: cellHttpRequestDeleteHeader");
	case 0x1b5bdcc6: FUNC_LOG_ERROR("TODO: cellHttpAddCookieWithClientId");
	case 0x2033b878: FUNC_LOG_ERROR("TODO: cellHttpClientCloseAllConnections");
	case 0x211d8ba3: FUNC_LOG_ERROR("TODO: cellHttpClientSetAutoRedirect");
	case 0x224e1610: FUNC_LOG_ERROR("TODO: cellHttpClientSetRecvTimeout");
	case 0x250c386c: FUNC_LOG_ERROR("TODO: cellHttpInit");
	case 0x271a0b06: FUNC_LOG_ERROR("TODO: cellHttpClientGetSendTimeout");
	case 0x27f86d70: FUNC_LOG_ERROR("TODO: cellHttpClientCloseConnections");
	case 0x2960e309: FUNC_LOG_ERROR("TODO: cellHttpClientGetAutoRedirect");
	case 0x296a46cf: FUNC_LOG_ERROR("TODO: cellHttpClientSetPipeline");
	case 0x2a1f28f6: FUNC_LOG_ERROR("TODO: cellHttpClientGetPipeline");
	case 0x2a78ff04: FUNC_LOG_ERROR("TODO: cellHttpTransactionGetSslId");
	case 0x2a87603a: FUNC_LOG_ERROR("TODO: cellHttpGetProxy");
	case 0x2d52848b: FUNC_LOG_ERROR("TODO: cellHttpTransactionAbortConnection");
	case 0x32f5cae2: FUNC_LOG_ERROR("TODO: cellHttpDestroyTransaction");
	case 0x34061e49: FUNC_LOG_ERROR("TODO: cellHttpTransactionGetSslCipherId");
	case 0x38954133: FUNC_LOG_ERROR("TODO: cellHttpTransactionGetSslCipherBits");
	case 0x40547d8b: FUNC_LOG_ERROR("TODO: cellHttpClientSetVersion");
	case 0x4137a1f6: FUNC_LOG_ERROR("TODO: cellHttpRequestGetChunkedTransferStatus");
	case 0x42205fe0: FUNC_LOG_ERROR("TODO: cellHttpRequestGetAllHeaders");
	case 0x434419c8: FUNC_LOG_ERROR("TODO: cellHttpClientSetCookieStatus");
	case 0x464ff889: FUNC_LOG_ERROR("TODO: cellHttpResponseGetContentLength");
	case 0x46bcc9ff: FUNC_LOG_ERROR("TODO: cellHttpClientGetPerHostKeepAliveMax");
	case 0x473cd9f1: FUNC_LOG_ERROR("TODO: cellHttpClientSetRedirectCallback");
	case 0x4b33942a: FUNC_LOG_ERROR("TODO: cellHttpClientAddHeader");
	case 0x4d40cf98: FUNC_LOG_ERROR("TODO: cellHttpClientGetProxy");
	case 0x4d915204: FUNC_LOG_ERROR("TODO: cellHttpClientSetCookieSendCallback");
	case 0x4e4ee53a: FUNC_LOG_ERROR("TODO: cellHttpCreateClient");
	case 0x4f5d8d20: FUNC_LOG_ERROR("TODO: cellHttpResponseGetHeader");
	case 0x522180bc: FUNC_LOG_ERROR("TODO: cellHttpsInit");
	case 0x54f2a4de: FUNC_LOG_ERROR("TODO: cellHttpRequestSetHeader");
	case 0x591c21a8: FUNC_LOG_ERROR("TODO: cellHttpClientGetKeepAlive");
	case 0x595adee9: FUNC_LOG_ERROR("TODO: cellHttpClientSetPerHostKeepAliveMax");
	case 0x5980a293: FUNC_LOG_ERROR("TODO: cellHttpClientGetAutoAuthentication");
	case 0x5d473170: FUNC_LOG_ERROR("TODO: cellHttpClientSetKeepAlive");
	case 0x617eec02: FUNC_LOG_ERROR("TODO: cellHttpClientDeleteHeader");
	case 0x61b2bade: FUNC_LOG_ERROR("TODO: cellHttpEndCookie");
	case 0x61c90691: FUNC_LOG_ERROR("TODO: cellHttpRecvResponse");
	case 0x65691795: FUNC_LOG_ERROR("TODO: cellHttpClientSetSslVersion");
	case 0x660d42a9: FUNC_LOG_ERROR("TODO: cellHttpClientSetAuthenticationCallback");
	case 0x6884cdb7: FUNC_LOG_ERROR("TODO: cellHttpClientGetResponseBufferMax");
	case 0x6a81b5e4: FUNC_LOG_ERROR("TODO: cellHttpResponseGetStatusLine");
	case 0x6eed4999: FUNC_LOG_ERROR("TODO: cellHttpClientSetAuthenticationCacheStatus");
	case 0x71714cdc: FUNC_LOG_ERROR("TODO: cellHttpClientSetSendTimeout");
	case 0x7313c78d: FUNC_LOG_ERROR("TODO: cellHttpClientSetSslIdDestroyCallback");
	case 0x895c604c: FUNC_LOG_ERROR("TODO: cellHttpTransactionGetSslCipherName");
	case 0x8aa5fcd3: FUNC_LOG_ERROR("TODO: cellHttpClientSetTotalPoolSize");
	case 0x8e3f7ee1: FUNC_LOG_ERROR("TODO: cellHttpRequestSetChunkedTransferStatus");
	case 0x8eaf47a3: FUNC_LOG_ERROR("TODO: cellHttpClientSetAutoAuthentication");
	case 0x93e938e5: FUNC_LOG_ERROR("TODO: cellHttpTransactionGetSslCipherVersion");
	case 0x958323cf: FUNC_LOG_ERROR("TODO: cellHttpRequestGetContentLength");
	case 0x9638f766: FUNC_LOG_ERROR("TODO: cellHttpInitCookie");
	case 0x980855ac: FUNC_LOG_ERROR("TODO: cellHttpDestroyClient");
	case 0xa0d9223c: FUNC_LOG_ERROR("TODO: cellHttpTransactionCloseConnection");
	case 0xa34c4b6f: FUNC_LOG_ERROR("TODO: cellHttpClientSetHeader");
	case 0xa755b005: FUNC_LOG_ERROR("TODO: cellHttpSendRequest");
	case 0xab1c55ab: FUNC_LOG_ERROR("TODO: cellHttpClientSetPerHostPoolSize");
	case 0xad1c6f02: FUNC_LOG_ERROR("TODO: cellHttpTransactionGetSslVersion");
	case 0xad6a2e5b: FUNC_LOG_ERROR("TODO: cellHttpSessionCookieFlush");
	case 0xadc0a4b2: FUNC_LOG_ERROR("TODO: cellHttpClientPollConnections");
	case 0xadd66b5c: FUNC_LOG_ERROR("TODO: cellHttpClientSetResponseBufferMax");
	case 0xaf73a64e: FUNC_LOG_ERROR("TODO: cellHttpRequestSetContentLength");
	case 0xb6feb84b: FUNC_LOG_ERROR("TODO: cellHttpClientSetTransactionStateCallback");
	case 0xba78e51f: FUNC_LOG_ERROR("TODO: cellHttpClientGetRecvTimeout");
	case 0xbea17389: FUNC_LOG_ERROR("TODO: cellHttpResponseGetAllHeaders");
	case 0xbf6e3659: FUNC_LOG_ERROR("TODO: cellHttpClientSetRecvBufferSize");
	case 0xcac9fc34: FUNC_LOG_ERROR("TODO: cellHttpClientSetUserAgent");
	case 0xccf57336: FUNC_LOG_ERROR("TODO: cellHttpClientGetSslVersion");
	case 0xd06c90a4: FUNC_LOG_ERROR("TODO: cellHttpClientGetPerPipelineMax");
	case 0xd1ec0b25: FUNC_LOG_ERROR("TODO: cellHttpClientGetHeader");
	case 0xd276ff1f: FUNC_LOG_ERROR("TODO: cellHttpEnd");
	case 0xd47cc666: FUNC_LOG_ERROR("TODO: cellHttpTransactionReleaseConnection");
	case 0xd7471088: FUNC_LOG_ERROR("TODO: cellHttpClientSetConnTimeout");
	case 0xd7d3cd5d: FUNC_LOG_ERROR("TODO: cellHttpClientSetProxy");
	case 0xd8352a40: FUNC_LOG_ERROR("TODO: cellHttpClientSetSslClientCertificate");
	case 0xdc405507: FUNC_LOG_ERROR("TODO: cellHttpClientGetVersion");
	case 0xdc7ed599: FUNC_LOG_ERROR("TODO: cellHttpClientSetPerPipelineMax");
	case 0xe3c424b3: FUNC_LOG_ERROR("TODO: cellHttpTransactionGetSslCipherString");
	case 0xe6d4202f: FUNC_LOG_ERROR("TODO: cellHttpsEnd");
	case 0xeb9c1e5e: FUNC_LOG_ERROR("TODO: cellHttpClientGetCookieStatus");
	case 0xed993147: FUNC_LOG_ERROR("TODO: cellHttpRequestAddHeader");
	case 0xee05b0c1: FUNC_LOG_ERROR("TODO: cellHttpClientGetUserAgent");
	case 0xf972c733: FUNC_LOG_ERROR("TODO: cellHttpCookieExportWithClientId");
	case 0xfce39343: FUNC_LOG_ERROR("TODO: cellHttpClientGetAuthenticationCacheStatus");
	case 0xffc74003: FUNC_LOG_ERROR("TODO: cellHttpClientGetPerHostPoolSize");
	case 0x04accebf: FUNC_LOG_ERROR("TODO: cellHttpUtilBuildHeader");
	case 0x1c6e4dbb: FUNC_LOG_ERROR("TODO: cellHttpUtilBuildRequestLine");
	case 0x2763fd66: FUNC_LOG_ERROR("TODO: cellHttpUtilUnescapeUri");
	case 0x2bcbced4: FUNC_LOG_ERROR("TODO: cellHttpUtilParseStatusLine");
	case 0x32faaf58: FUNC_LOG_ERROR("TODO: cellHttpUtilParseUri");
	case 0x37bb53a2: FUNC_LOG_ERROR("TODO: cellHttpUtilAppendHeaderValue");
	case 0x44d756d6: FUNC_LOG_ERROR("TODO: cellHttpUtilFormUrlEncode");
	case 0x50ea75bc: FUNC_LOG_ERROR("TODO: cellHttpUtilCopyStatusLine");
	case 0x6f0f7667: FUNC_LOG_ERROR("TODO: cellHttpUtilBuildUri");
	case 0x83faa354: FUNC_LOG_ERROR("TODO: cellHttpUtilBase64Encoder");
	case 0x8bb608e4: FUNC_LOG_ERROR("TODO: cellHttpUtilParseUriPath");
	case 0x8e52ee08: FUNC_LOG_ERROR("TODO: cellHttpUtilBase64Decoder");
	case 0x8e6c5bb9: FUNC_LOG_ERROR("TODO: cellHttpUtilFormUrlDecode");
	case 0x8ea23deb: FUNC_LOG_ERROR("TODO: cellHttpUtilMergeUriPath");
	case 0x9003b1f2: FUNC_LOG_ERROR("TODO: cellHttpUtilEscapeUri");
	case 0x97f9fbe5: FUNC_LOG_ERROR("TODO: cellHttpUtilCopyHeader");
	case 0xa3457869: FUNC_LOG_ERROR("TODO: cellHttpUtilParseProxy");
	case 0xaabeb869: FUNC_LOG_ERROR("TODO: cellHttpUtilSweepPath");
	case 0xe1fb0ebd: FUNC_LOG_ERROR("TODO: cellHttpUtilParseHeader");
	case 0xf05df789: FUNC_LOG_ERROR("TODO: cellHttpUtilCopyUri");
	case 0x0e363ae7: FUNC_LOG_ERROR("TODO: cellImeJpGetFocusTop");
	case 0x177bd218: FUNC_LOG_ERROR("TODO: cellImeJpGetCandidateSelect");
	case 0x1986f2cd: FUNC_LOG_ERROR("TODO: cellImeJpGetPredictList");
	case 0x1b119958: FUNC_LOG_ERROR("TODO: cellImeJpOpen3");
	case 0x1e29103b: FUNC_LOG_ERROR("TODO: cellImeJpConvertForward");
	case 0x1e411261: FUNC_LOG_ERROR("TODO: cellImeJpMoveFocusClause");
	case 0x24e9d8fc: FUNC_LOG_ERROR("TODO: cellImeJpSetKanaInputMode");
	case 0x36d38701: FUNC_LOG_ERROR("TODO: cellImeJpReset");
	case 0x37961cc1: FUNC_LOG_ERROR("TODO: cellImeJpExtendConvertArea");
	case 0x441a1c2b: FUNC_LOG_ERROR("TODO: cellImeJpEnterString");
	case 0x44608862: FUNC_LOG_ERROR("TODO: cellImeJpOpen");
	case 0x46d1234a: FUNC_LOG_ERROR("TODO: cellImeJpClose");
	case 0x47b43dd4: FUNC_LOG_ERROR("TODO: cellImeJpOpen2");
	case 0x5b6ada55: FUNC_LOG_ERROR("TODO: cellImeJpEnterCharExt");
	case 0x5f5b3227: FUNC_LOG_ERROR("TODO: cellImeJpGetFocusLength");
	case 0x6298b55a: FUNC_LOG_ERROR("TODO: cellImeJpEnterStringExt");
	case 0x6319eda3: FUNC_LOG_ERROR("TODO: cellImeJpAllDeleteConvertString");
	case 0x66c6cc78: FUNC_LOG_ERROR("TODO: cellImeJpGetStatus");
	case 0x6ccbe3d6: FUNC_LOG_ERROR("TODO: cellImeJpEnterChar");
	case 0x7189430b: FUNC_LOG_ERROR("TODO: cellImeJpAllConfirm");
	case 0x72257652: FUNC_LOG_ERROR("TODO: cellImeJpDeleteWord");
	case 0x7a18c2b9: FUNC_LOG_ERROR("TODO: cellImeJpCurrentPartConfirm");
	case 0x89f8a567: FUNC_LOG_ERROR("TODO: cellImeJpGetConfirmYomiString");
	case 0x8bb41f47: FUNC_LOG_ERROR("TODO: cellImeJpPostConvert");
	case 0xaa1d1f57: FUNC_LOG_ERROR("TODO: cellImeJpBackspaceWord");
	case 0xaa2a3287: FUNC_LOG_ERROR("TODO: cellImeJpShortenConvertArea");
	case 0xac6693d8: FUNC_LOG_ERROR("TODO: cellImeJpModeCaretRight");
	case 0xbd679cc1: FUNC_LOG_ERROR("TODO: cellImeJpTemporalConfirm");
	case 0xc1786c81: FUNC_LOG_ERROR("TODO: cellImeJpSetFixInputMode");
	case 0xc2bb48bc: FUNC_LOG_ERROR("TODO: cellImeJpConvertBackward");
	case 0xc4796a45: FUNC_LOG_ERROR("TODO: cellImeJpGetCandidateListSize");
	case 0xcbbc20b7: FUNC_LOG_ERROR("TODO: cellImeJpAllConvertCancel");
	case 0xd3fc3606: FUNC_LOG_ERROR("TODO: cellImeJpGetConfirmString");
	case 0xe4cc15ba: FUNC_LOG_ERROR("TODO: cellImeJpGetCandidateList");
	case 0xe76c9700: FUNC_LOG_ERROR("TODO: cellImeJpModeCaretLeft");
	case 0xea2d4881: FUNC_LOG_ERROR("TODO: cellImeJpGetConvertYomiString");
	case 0xeae879dc: FUNC_LOG_ERROR("TODO: cellImeJpConvertCancel");
	case 0xeede898c: FUNC_LOG_ERROR("TODO: cellImeJpConfirmPrediction");
	case 0xf5992ec8: FUNC_LOG_ERROR("TODO: cellImeJpSetInputCharType");
	case 0xf91abda3: FUNC_LOG_ERROR("TODO: cellImeJpGetConvertString");
	case 0x65cbbb16: FUNC_LOG_ERROR("TODO: cellJpgDecExtSetParameter");
	case 0x6d9ebccf: FUNC_LOG_ERROR("TODO: cellJpgDecReadHeader");
	case 0x716f8792: FUNC_LOG_ERROR("TODO: cellJpgDecExtDecodeData");
	case 0x8b300f66: FUNC_LOG_ERROR("TODO: cellJpgDecExtCreate");
	case 0x9338a07a: FUNC_LOG_ERROR("TODO: cellJpgDecClose");
	case 0x976ca5c2: FUNC_LOG_ERROR("TODO: cellJpgDecOpen");
	case 0xa7978f59: FUNC_LOG_ERROR("TODO: cellJpgDecCreate");
	case 0xa9f703e3: FUNC_LOG_ERROR("TODO: cellJpgDecExtOpen");
	case 0xaf8bb012: FUNC_LOG_ERROR("TODO: cellJpgDecDecodeData");
	case 0xb91eb3d2: FUNC_LOG_ERROR("TODO: cellJpgDecExtReadHeader");
	case 0xd8ea91f8: FUNC_LOG_ERROR("TODO: cellJpgDecDestroy");
	case 0xe08f3910: FUNC_LOG_ERROR("TODO: cellJpgDecSetParameter");
	case 0x0cf2b78b: FUNC_LOG_ERROR("TODO: cellJpgEncReset");
	case 0x12d9b6c5: FUNC_LOG_ERROR("TODO: cellJpgEncQueryAttr");
	case 0x2ae79be8: FUNC_LOG_ERROR("TODO: cellJpgEncWaitForInput");
	case 0x4262e880: FUNC_LOG_ERROR("TODO: cellJpgEncGetStreamInfo");
	case 0x636dc89e: FUNC_LOG_ERROR("TODO: cellJpgEncEncodePicture2");
	case 0x6f2d371c: FUNC_LOG_ERROR("TODO: cellJpgEncOpenEx");
	case 0x969fc5f7: FUNC_LOG_ERROR("TODO: cellJpgEncClose");
	case 0x9b4e3a74: FUNC_LOG_ERROR("TODO: cellJpgEncWaitForOutput");
	case 0xa4bfae51: FUNC_LOG_ERROR("TODO: cellJpgEncOpen");
	case 0xa9e81214: FUNC_LOG_ERROR("TODO: cellJpgEncEncodePicture");
	case 0x0dfbadfa: FUNC_LOG_ERROR("TODO: cellKey2CharSetArrangement");
	case 0x14bf2dc1: FUNC_LOG_ERROR("TODO: cellKey2CharClose");
	case 0x56776c0d: FUNC_LOG_ERROR("TODO: cellKey2CharGetChar");
	case 0xabf629c1: FUNC_LOG_ERROR("TODO: cellKey2CharOpen");
	case 0xbfc03768: FUNC_LOG_ERROR("TODO: cellKey2CharSetMode");
	case 0x0252efcc: FUNC_LOG_ERROR("TODO: cellUserTraceInit");
	case 0x05893e7c: FUNC_LOG_ERROR("TODO: cellUserTraceRegister");
	case 0x6d045c2e: FUNC_LOG_ERROR("TODO: cellUserTraceUnregister");
	case 0x898c77bf: FUNC_LOG_ERROR("TODO: cellUserTraceTerminate");
	case 0x017024a8: FUNC_LOG_ERROR("TODO: cellMicGetDeviceGUID");
	case 0x05709bbf: FUNC_LOG_ERROR("TODO: cellMicOpenEx");
	case 0x07e1b12c: FUNC_LOG_ERROR("TODO: cellMicRead");
	case 0x186cb1fb: FUNC_LOG_ERROR("TODO: cellMicIsOpen");
	case 0x1b42101b: FUNC_LOG_ERROR("TODO: cellMicIsAttached");
	case 0x25c5723f: FUNC_LOG_ERROR("TODO: cellMicGetStatus");
	case 0x323deb41: FUNC_LOG_ERROR("TODO: cellMicSetSignalAttr");
	case 0x3acc118e: FUNC_LOG_ERROR("TODO: cellMicReadAux");
	case 0x3ace58f3: FUNC_LOG_ERROR("TODO: cellMicSysShareClose");
	case 0x48108a23: FUNC_LOG_ERROR("TODO: cellMicGetFormat");
	case 0x4e0b69ee: FUNC_LOG_ERROR("TODO: cellMicGetFormatRaw");
	case 0x65336418: FUNC_LOG_ERROR("TODO: cellMicRemoveNotifyEventQueue");
	case 0x6a024aa0: FUNC_LOG_ERROR("TODO: cellMicGetDeviceAttr");
	case 0x6bc46aab: FUNC_LOG_ERROR("TODO: cellMicReset");
	case 0x6cc7ae00: FUNC_LOG_ERROR("TODO: cellMicSetNotifyEventQueue2");
	case 0x72165a7f: FUNC_LOG_ERROR("TODO: cellMicReadRaw");
	case 0x7903400e: FUNC_LOG_ERROR("TODO: cellMicSetNotifyEventQueue");
	case 0x8325e02d: FUNC_LOG_ERROR("TODO: cellMicInit");
	case 0x87a08d29: FUNC_LOG_ERROR("TODO: cellMicGetFormatDsp");
	case 0x891c6291: FUNC_LOG_ERROR("TODO: cellMicSetMultiMicNotifyEventQueue");
	case 0x8d229f8e: FUNC_LOG_ERROR("TODO: cellMicClose");
	case 0xa42ac07a: FUNC_LOG_ERROR("TODO: cellMicOpenRaw");
	case 0xa52d2ae4: FUNC_LOG_ERROR("TODO: cellMicGetType");
	case 0xac5ba03a: FUNC_LOG_ERROR("TODO: cellMicGetSignalAttr");
	case 0xad049ecf: FUNC_LOG_ERROR("TODO: cellMicGetFormatEx");
	case 0xb2c16321: FUNC_LOG_ERROR("TODO: cellMicSetDeviceAttr");
	case 0xb30780eb: FUNC_LOG_ERROR("TODO: cellMicGetSignalState");
	case 0xbdfd51e2: FUNC_LOG_ERROR("TODO: cellMicSysShareStop");
	case 0xc3610dbd: FUNC_LOG_ERROR("TODO: cellMicSysShareOpen");
	case 0xc414faa5: FUNC_LOG_ERROR("TODO: cellMicReadDsp");
	case 0xc461563c: FUNC_LOG_ERROR("TODO: cellMicCommand");
	case 0xc6328caa: FUNC_LOG_ERROR("TODO: cellMicEnd");
	case 0xcac7e7d7: FUNC_LOG_ERROR("TODO: cellMicSysShareStart");
	case 0xd127cd3e: FUNC_LOG_ERROR("TODO: cellMicSysShareInit");
	case 0xdd1b59f0: FUNC_LOG_ERROR("TODO: cellMicOpen");
	case 0xdd724314: FUNC_LOG_ERROR("TODO: cellMicStart");
	case 0xddd19a89: FUNC_LOG_ERROR("TODO: cellMicStartEx");
	case 0xe839380f: FUNC_LOG_ERROR("TODO: cellMicStopEx");
	case 0xf82bbf7c: FUNC_LOG_ERROR("TODO: cellMicSysShareEnd");
	case 0xfcfaf246: FUNC_LOG_ERROR("TODO: cellMicStop");
	case 0xfda12276: FUNC_LOG_ERROR("TODO: cellMicGetFormatAux");
	case 0xfdbbe469: FUNC_LOG_ERROR("TODO: cellMicGetDeviceIdentifier");
	case 0x066bb1cf: FUNC_LOG_ERROR("TODO: cellMusicDecodeSetDecodeCommand");
	case 0x1576e4f2: FUNC_LOG_ERROR("TODO: cellMusicDecodeGetDecodeStatus2");
	case 0x25ea7ac0: FUNC_LOG_ERROR("TODO: cellMusicDecodeGetContentsId2");
	case 0x2ef701ec: FUNC_LOG_ERROR("TODO: cellMusicDecodeSetDecodeCommand2");
	case 0x491d6ba5: FUNC_LOG_ERROR("TODO: cellMusicDecodeSetSelectionContext2");
	case 0x4aef2877: FUNC_LOG_ERROR("TODO: cellMusicDecodeFinalize2");
	case 0x58ab1999: FUNC_LOG_ERROR("TODO: cellMusicDecodeGetContentsId");
	case 0x5af74c50: FUNC_LOG_ERROR("TODO: cellMusicDecodeGetDecodeStatus");
	case 0x84f154b2: FUNC_LOG_ERROR("TODO: cellMusicDecodeInitializeSystemWorkload");
	case 0xa8615dc8: FUNC_LOG_ERROR("TODO: cellMusicDecodeFinalize");
	case 0xa881b744: FUNC_LOG_ERROR("TODO: cellMusicDecodeRead");
	case 0xb2d054df: FUNC_LOG_ERROR("TODO: cellMusicDecodeRead2");
	case 0xb641168e: FUNC_LOG_ERROR("TODO: cellMusicDecodeInitialize2SystemWorkload");
	case 0xb84f5c81: FUNC_LOG_ERROR("TODO: cellMusicDecodeSetSelectionContext");
	case 0xc22563c4: FUNC_LOG_ERROR("TODO: cellMusicDecodeSelectContents2");
	case 0xd55dbc11: FUNC_LOG_ERROR("TODO: cellMusicDecodeInitialize");
	case 0xdbf70550: FUNC_LOG_ERROR("TODO: cellMusicDecodeGetSelectionContext");
	case 0xf24cb963: FUNC_LOG_ERROR("TODO: cellMusicDecodeSelectContents");
	case 0xf80e31e5: FUNC_LOG_ERROR("TODO: cellMusicDecodeInitialize2");
	case 0xf91639f9: FUNC_LOG_ERROR("TODO: cellMusicDecodeGetSelectionContext2");
	case 0x92b50ebc: FUNC_LOG_ERROR("TODO: cellMusicExportProgress");
	case 0xb202f0e8: FUNC_LOG_ERROR("TODO: cellMusicExportFromFile");
	case 0xb4c9b4f9: FUNC_LOG_ERROR("TODO: cellMusicExportInitialize");
	case 0xe0443a44: FUNC_LOG_ERROR("TODO: cellMusicExportInitialize2");
	case 0xe90effea: FUNC_LOG_ERROR("TODO: cellMusicExportFinalize");
	case 0x0b461648: FUNC_LOG_ERROR("TODO: cellMusicGetSelectionContext");
	case 0x2bdc5d6b: FUNC_LOG_ERROR("TODO: cellMusicSetSelectionContext2");
	case 0x4014c246: FUNC_LOG_ERROR("TODO: cellMusicSetVolume2");
	case 0x4c188caa: FUNC_LOG_ERROR("TODO: cellMusicGetContentsId");
	case 0x5bff31bf: FUNC_LOG_ERROR("TODO: cellMusicSetSelectionContext");
	case 0x61865281: FUNC_LOG_ERROR("TODO: cellMusicInitialize2SystemWorkload");
	case 0x648b7611: FUNC_LOG_ERROR("TODO: cellMusicGetPlaybackStatus2");
	case 0x6674de2d: FUNC_LOG_ERROR("TODO: cellMusicGetContentsId2");
	case 0x6f2104f3: FUNC_LOG_ERROR("TODO: cellMusicFinalize");
	case 0x72876546: FUNC_LOG_ERROR("TODO: cellMusicInitializeSystemWorkload");
	case 0x72ec14b5: FUNC_LOG_ERROR("TODO: cellMusicInitialize");
	case 0x7be4dc31: FUNC_LOG_ERROR("TODO: cellMusicFinalize2");
	case 0x8793ef97: FUNC_LOG_ERROR("TODO: cellMusicGetSelectionContext2");
	case 0x8aa188e3: FUNC_LOG_ERROR("TODO: cellMusicGetVolume");
	case 0x95f7d9d9: FUNC_LOG_ERROR("TODO: cellMusicGetPlaybackStatus");
	case 0x98947a6e: FUNC_LOG_ERROR("TODO: cellMusicSetPlaybackCommand2");
	case 0xa0661626: FUNC_LOG_ERROR("TODO: cellMusicSetPlaybackCommand");
	case 0xad04cddd: FUNC_LOG_ERROR("TODO: cellMusicSelectContents2");
	case 0xb2336ba7: FUNC_LOG_ERROR("TODO: cellMusicSelectContents");
	case 0xbe50b11e: FUNC_LOG_ERROR("TODO: cellMusicInitialize2");
	case 0xe74ce7bd: FUNC_LOG_ERROR("TODO: cellMusicSetVolume");
	case 0xf9073a24: FUNC_LOG_ERROR("TODO: cellMusicGetVolume2");
	case 0x04459230: FUNC_LOG_ERROR("TODO: cellNetCtlNetStartDialogLoadAsync");
	case 0x0791015f: FUNC_LOG_ERROR("TODO: cellGameUpdateCheckStartAsyncEx");
	case 0x0ce13c6b: FUNC_LOG_ERROR("TODO: cellNetCtlAddHandler");
	case 0x0f1f13d3: FUNC_LOG_ERROR("TODO: cellNetCtlNetStartDialogUnloadAsync");
	case 0x105ee2cb: FUNC_LOG_ERROR("TODO: cellNetCtlTerm");
	case 0x10dae56d: FUNC_LOG_ERROR("TODO: cellGameUpdateTerm");
	case 0x1e585b5d: FUNC_LOG_ERROR("TODO: cellNetCtlGetInfo");
	case 0x3a12865f: FUNC_LOG_ERROR("TODO: cellNetCtlGetNatInfo");
	case 0x3e359ab6: FUNC_LOG_ERROR("TODO: cellGameUpdateCheckAbort");
	case 0x558700f6: FUNC_LOG_ERROR("TODO: cellGameUpdateCheckStartWithoutDialogAsyncEx");
	case 0x71d53210: FUNC_LOG_ERROR("TODO: cellNetCtlNetStartDialogAbortAsync");
	case 0x8b3eba69: FUNC_LOG_ERROR("TODO: cellNetCtlGetState");
	case 0x901815c3: FUNC_LOG_ERROR("TODO: cellNetCtlDelHandler");
	case 0x99ab1a26: FUNC_LOG_ERROR("TODO: cellGameUpdateInit");
	case 0xa5e1fa60: FUNC_LOG_ERROR("TODO: cellGameUpdateCheckStartWithoutDialogAsync");
	case 0xbd5a59fc: FUNC_LOG_ERROR("TODO: cellNetCtlInit");
	case 0xd0a5d727: FUNC_LOG_ERROR("TODO: cellGameUpdateCheckStartAsync");
	case 0xf463981c: FUNC_LOG_ERROR("TODO: cellGameUpdateCheckFinishAsyncEx");
	case 0xffa3d791: FUNC_LOG_ERROR("TODO: cellGameUpdateCheckFinishAsync");
	case 0x09565b21: FUNC_LOG_ERROR("TODO: cellOskDialogExtInputDeviceUnlock");
	case 0x1e1b4c97: FUNC_LOG_ERROR("TODO: cellOskDialogExtRegisterKeyboardEventHookCallback");
	case 0x23a2ede6: FUNC_LOG_ERROR("TODO: cellOskDialogExtAddJapaneseOptionDictionary");
	case 0x42439db5: FUNC_LOG_ERROR("TODO: cellOskDialogExtSendFinishMessage");
	case 0x4fe14d09: FUNC_LOG_ERROR("TODO: cellOskDialogExtAddOptionDictionary");
	case 0x75370397: FUNC_LOG_ERROR("TODO: cellOskDialogExtSetInitialScale");
	case 0x7c95feb8: FUNC_LOG_ERROR("TODO: cellOskDialogExtInputDeviceLock");
	case 0x7eb292cd: FUNC_LOG_ERROR("TODO: cellOskDialogExtSetBaseColor");
	case 0x8692fcd2: FUNC_LOG_ERROR("TODO: cellOskDialogExtRegisterConfirmWordFilterCallback");
	case 0x8b60c469: FUNC_LOG_ERROR("TODO: cellOskDialogExtUpdateInputText");
	case 0xe6c43c58: FUNC_LOG_ERROR("TODO: cellOskDialogExtEnableHalfByteKana");
	case 0xe800f586: FUNC_LOG_ERROR("TODO: cellOskDialogExtRegisterForceFinishCallback");
	case 0x629ba0c0: FUNC_LOG_ERROR("TODO: cellOvisInvalidateOverlappedSegments");
	case 0x82f294b2: FUNC_LOG_ERROR("TODO: cellOvisGetOverlayTableSize");
	case 0xa876c911: FUNC_LOG_ERROR("TODO: cellOvisInitializeOverlayTable");
	case 0xce6cb776: FUNC_LOG_ERROR("TODO: cellOvisFixSpuSegments");
	case 0x01067e22: FUNC_LOG_ERROR("TODO: cellPamfStreamTypeToEsFilterId");
	case 0x03fd2caa: FUNC_LOG_ERROR("TODO: cellPamfReaderSetStreamWithTypeAndChannel");
	case 0x041cc708: FUNC_LOG_ERROR("TODO: cellPamfReaderGetStreamIndex");
	case 0x1abeb9d6: FUNC_LOG_ERROR("TODO: cellPamfEpIteratorGetEp");
	case 0x28b4e2c1: FUNC_LOG_ERROR("TODO: cellPamfReaderSetStreamWithTypeAndIndex");
	case 0x37f723f7: FUNC_LOG_ERROR("TODO: cellPamfReaderGetNumberOfStreams");
	case 0x439fba17: FUNC_LOG_ERROR("TODO: cellPamfReaderGetEpIteratorWithTimeStamp");
	case 0x44f5c9e3: FUNC_LOG_ERROR("TODO: cellPamfGetStreamOffsetAndSize");
	case 0x461534b4: FUNC_LOG_ERROR("TODO: cellPamfReaderSetStreamWithIndex");
	case 0x4de501b1: FUNC_LOG_ERROR("TODO: cellPamfReaderGetPresentationStartTime");
	case 0x50b83205: FUNC_LOG_ERROR("TODO: cellPamfEpIteratorMove");
	case 0x67fd273b: FUNC_LOG_ERROR("TODO: cellPamfReaderGetStreamInfo");
	case 0x71df326a: FUNC_LOG_ERROR("TODO: cellPamfReaderGetEsFilterId");
	case 0x90fc9a59: FUNC_LOG_ERROR("TODO: cellPamfGetHeaderSize2");
	case 0x9ab20793: FUNC_LOG_ERROR("TODO: cellPamfReaderGetStreamTypeAndChannel");
	case 0xb8436ee5: FUNC_LOG_ERROR("TODO: cellPamfReaderInitialize");
	case 0xca8181c1: FUNC_LOG_ERROR("TODO: cellPamfGetHeaderSize");
	case 0xd0230671: FUNC_LOG_ERROR("TODO: cellPamfReaderGetNumberOfSpecificStreams");
	case 0xd1a40ef4: FUNC_LOG_ERROR("TODO: cellPamfVerify");
	case 0xd9ea3457: FUNC_LOG_ERROR("TODO: cellPamfReaderGetNumberOfEp");
	case 0xdb70296c: FUNC_LOG_ERROR("TODO: cellPamfReaderGetMuxRateBound");
	case 0xe8586ec6: FUNC_LOG_ERROR("TODO: cellPamfReaderGetEpIteratorWithIndex");
	case 0xf61609d6: FUNC_LOG_ERROR("TODO: cellPamfReaderGetPresentationEndTime");
	case 0x0f424ecb: FUNC_LOG_ERROR("TODO: cellPhotoDecodeInitialize2");
	case 0x28b22e44: FUNC_LOG_ERROR("TODO: cellPhotoDecodeFromFile");
	case 0x596f0a56: FUNC_LOG_ERROR("TODO: cellPhotoDecodeInitialize");
	case 0xad7d8f38: FUNC_LOG_ERROR("TODO: cellPhotoDecodeFinalize");
	case 0x0783bce0: FUNC_LOG_ERROR("TODO: cellPhotoImport");
	case 0x1ab8df55: FUNC_LOG_ERROR("TODO: cellPhotoImport2");
	case 0x08cbd8e1: FUNC_LOG_ERROR("TODO: cellPhotoExportInitialize2");
	case 0x09ce84ac: FUNC_LOG_ERROR("TODO: cellPhotoExportFromFile");
	case 0x3f7fc0af: FUNC_LOG_ERROR("TODO: cellPhotoFinalize");
	case 0x42a32983: FUNC_LOG_ERROR("TODO: cellPhotoRegistFromFile");
	case 0x4357c77f: FUNC_LOG_ERROR("TODO: cellPhotoExportInitialize");
	case 0x55c70783: FUNC_LOG_ERROR("TODO: cellPhotoInitialize");
	case 0xde509ead: FUNC_LOG_ERROR("TODO: cellPhotoExportProgress");
	case 0xed4a0148: FUNC_LOG_ERROR("TODO: cellPhotoExportFinalize");
	case 0x0c515302: FUNC_LOG_ERROR("TODO: cellPngDecExtOpen");
	case 0x157d30c5: FUNC_LOG_ERROR("TODO: cellPngDecCreate");
	case 0x2310f155: FUNC_LOG_ERROR("TODO: cellPngDecDecodeData");
	case 0x27c921b5: FUNC_LOG_ERROR("TODO: cellPngDecGetoFFs");
	case 0x30cb334a: FUNC_LOG_ERROR("TODO: cellPngDecGetsBIT");
	case 0x35a6846c: FUNC_LOG_ERROR("TODO: cellPngDecGettIME");
	case 0x3d50016a: FUNC_LOG_ERROR("TODO: cellPngDecGetpHYs");
	case 0x48436b2d: FUNC_LOG_ERROR("TODO: cellPngDecExtCreate");
	case 0x5b3d1ff1: FUNC_LOG_ERROR("TODO: cellPngDecClose");
	case 0x609ec7d5: FUNC_LOG_ERROR("TODO: cellPngDecGetUnknownChunks");
	case 0x726fc1d0: FUNC_LOG_ERROR("TODO: cellPngDecExtDecodeData");
	case 0x7585a275: FUNC_LOG_ERROR("TODO: cellPngDecGetbKGD");
	case 0x7a062d26: FUNC_LOG_ERROR("TODO: cellPngDecGetcHRM");
	case 0x820dae1a: FUNC_LOG_ERROR("TODO: cellPngDecDestroy");
	case 0x8b33f863: FUNC_LOG_ERROR("TODO: cellPngDecExtReadHeader");
	case 0x9ccdcc95: FUNC_LOG_ERROR("TODO: cellPngDecReadHeader");
	case 0x9e9d7d42: FUNC_LOG_ERROR("TODO: cellPngDecExtSetParameter");
	case 0xa5cdf57e: FUNC_LOG_ERROR("TODO: cellPngDecGetsPLT");
	case 0xb153629c: FUNC_LOG_ERROR("TODO: cellPngDecGetgAMA");
	case 0xb40ca175: FUNC_LOG_ERROR("TODO: cellPngDecGetTextChunk");
	case 0xb4fe75e1: FUNC_LOG_ERROR("TODO: cellPngDecGetpCAL");
	case 0xb905ebb7: FUNC_LOG_ERROR("TODO: cellPngDecGethIST");
	case 0xb96fb26e: FUNC_LOG_ERROR("TODO: cellPngDecGettRNS");
	case 0xc41e1198: FUNC_LOG_ERROR("TODO: cellPngDecGetsCAL");
	case 0xd2bc5bfd: FUNC_LOG_ERROR("TODO: cellPngDecOpen");
	case 0xe163977f: FUNC_LOG_ERROR("TODO: cellPngDecGetPLTE");
	case 0xe4416e82: FUNC_LOG_ERROR("TODO: cellPngDecGetsRGB");
	case 0xe97c9bd4: FUNC_LOG_ERROR("TODO: cellPngDecSetParameter");
	case 0xf44b6c30: FUNC_LOG_ERROR("TODO: cellPngDecGetiCCP");
	case 0x117cd726: FUNC_LOG_ERROR("TODO: cellPngEncClose");
	case 0x19256dc5: FUNC_LOG_ERROR("TODO: cellPngEncOpen");
	case 0x496cfcd0: FUNC_LOG_ERROR("TODO: cellPngEncQueryAttr");
	case 0x585269bc: FUNC_LOG_ERROR("TODO: cellPngEncGetStreamInfo");
	case 0x5b546ca4: FUNC_LOG_ERROR("TODO: cellPngEncEncodePicture");
	case 0x662bd637: FUNC_LOG_ERROR("TODO: cellPngEncWaitForInput");
	case 0x6ac91de3: FUNC_LOG_ERROR("TODO: cellPngEncReset");
	case 0x90ef2963: FUNC_LOG_ERROR("TODO: cellPngEncWaitForOutput");
	case 0xc82558ce: FUNC_LOG_ERROR("TODO: cellPngEncOpenEx");
	case 0x0a373522: FUNC_LOG_ERROR("TODO: cellPrintSendBand");
	case 0x0d44f661: FUNC_LOG_ERROR("TODO: cellPrintEndPage");
	case 0x293d9e9c: FUNC_LOG_ERROR("TODO: cellPrintCancelJob");
	case 0x6802dfb5: FUNC_LOG_ERROR("TODO: cellPrintGetStatus");
	case 0x6d996018: FUNC_LOG_ERROR("TODO: cellSysutilPrintShutdown");
	case 0x6e952645: FUNC_LOG_ERROR("TODO: cellPrintGetPrintableArea");
	case 0x795b12b3: FUNC_LOG_ERROR("TODO: cellPrintStartJob");
	case 0x865acf74: FUNC_LOG_ERROR("TODO: cellPrintStartPage");
	case 0xc04a7d42: FUNC_LOG_ERROR("TODO: cellPrintEndJob");
	case 0xc9c3ef14: FUNC_LOG_ERROR("TODO: cellPrintLoadAsync");
	case 0xcf1aaefa: FUNC_LOG_ERROR("TODO: cellSysutilPrintInit");
	case 0xeb51aa38: FUNC_LOG_ERROR("TODO: cellPrintUnloadAsync");
	case 0xf0865182: FUNC_LOG_ERROR("TODO: cellPrintLoadAsync2");
	case 0xf9a53f35: FUNC_LOG_ERROR("TODO: cellPrintOpenConfig");
	case 0x39651e01: FUNC_LOG_ERROR("TODO: cellRecOpen");
	case 0x4ac76585: FUNC_LOG_ERROR("TODO: cellRecClose");
	case 0x5a8a8b0f: FUNC_LOG_ERROR("TODO: cellRecGetInfo");
	case 0x5b45439d: FUNC_LOG_ERROR("TODO: cellRecStop");
	case 0x964cd1b8: FUNC_LOG_ERROR("TODO: cellRecStart");
	case 0xdbf22bd1: FUNC_LOG_ERROR("TODO: cellRecQueryMemSize");
	case 0xf0958f73: FUNC_LOG_ERROR("TODO: cellRecSetInfo");
	case 0x533f41df: FUNC_LOG_ERROR("TODO: cellRemotePlayGetStatus");
	case 0x743918bd: FUNC_LOG_ERROR("TODO: cellRemotePlaySetComparativeVolume");
	case 0xa445cd55: FUNC_LOG_ERROR("TODO: cellRemotePlayGetPeerInfo");
	case 0xc267987b: FUNC_LOG_ERROR("TODO: cellRemotePlayGetSharedMemory");
	case 0xd29fe5e3: FUNC_LOG_ERROR("TODO: cellRemotePlayEncryptAllData");
	case 0xd6f3fc82: FUNC_LOG_ERROR("TODO: cellRemotePlayStopPeerVideoOut");
	case 0xe12c8c19: FUNC_LOG_ERROR("TODO: cellRemotePlayGetComparativeVolume");
	case 0xfb793f27: FUNC_LOG_ERROR("TODO: cellRemotePlayBreak");
	case 0x01220224: FUNC_LOG_ERROR("TODO: cellRescGcmSurface2RescSrc");
	case 0x0a2069c7: FUNC_LOG_ERROR("TODO: cellRescGetNumColorBuffers");
	case 0x0d3c22ce: FUNC_LOG_ERROR("TODO: cellRescSetWaitFlip");
	case 0x10db5b1a: FUNC_LOG_ERROR("TODO: cellRescSetDsts");
	case 0x129922a0: FUNC_LOG_ERROR("TODO: cellRescResetFlipStatus");
	case 0x19a2a967: FUNC_LOG_ERROR("TODO: cellRescSetPalInterpolateDropFlexRatio");
	case 0x1dd3c4cd: FUNC_LOG_ERROR("TODO: cellRescGetRegisterCount");
	case 0x22ae06d8: FUNC_LOG_ERROR("TODO: cellRescAdjustAspectRatio");
	case 0x23134710: FUNC_LOG_ERROR("TODO: cellRescSetDisplayMode");
	case 0x25c107e6: FUNC_LOG_ERROR("TODO: cellRescSetConvertAndFlip");
	case 0x2ea3061e: FUNC_LOG_ERROR("TODO: cellRescExit");
	case 0x2ea94661: FUNC_LOG_ERROR("TODO: cellRescSetFlipHandler");
	case 0x516ee89e: FUNC_LOG_ERROR("TODO: cellRescInit");
	case 0x5a338cdb: FUNC_LOG_ERROR("TODO: cellRescGetBufferSize");
	case 0x66f5e388: FUNC_LOG_ERROR("TODO: cellRescGetLastFlipTime");
	case 0x6cd0f95f: return cellRescSetSrc(SC_ARGS_2);//FUNC_LOG_ERROR("TODO: cellRescSetSrc");
	case 0x7af8a37f: FUNC_LOG_ERROR("TODO: cellRescSetRegisterCount");
	case 0x8107277c: return cellRescSetBufferAddress(SC_ARGS_3); //FUNC_LOG_ERROR("TODO: cellRescSetBufferAddress");
	case 0xc47c5c22: FUNC_LOG_ERROR("TODO: cellRescGetFlipStatus");
	case 0xd1ca0503: FUNC_LOG_ERROR("TODO: cellRescVideoOutResolutionId2RescBufferMode");
	case 0xd3758645: FUNC_LOG_ERROR("TODO: cellRescSetVBlankHandler");
	case 0xe0cef79e: FUNC_LOG_ERROR("TODO: cellRescCreateInterlaceTable");
	case 0x1324948a: FUNC_LOG_ERROR("TODO: cellRtcFormatRfc3339LocalTime");
	case 0x269a1882: FUNC_LOG_ERROR("TODO: cellRtcTickAddTicks");
	case 0x2cce9cf5: FUNC_LOG_ERROR("TODO: cellRtcGetCurrentClockLocalTime");
	case 0x2f010bfa: FUNC_LOG_ERROR("TODO: cellRtcTickAddMinutes");
	case 0x32c941cf: FUNC_LOG_ERROR("TODO: cellRtcGetCurrentClock");
	case 0x332a74dd: FUNC_LOG_ERROR("TODO: cellRtcTickAddYears");
	case 0x46ca7fe0: FUNC_LOG_ERROR("TODO: cellRtcConvertLocalTimeToUtc");
	case 0x5316b4a8: FUNC_LOG_ERROR("TODO: cellRtcIsLeapYear");
	case 0x5491b9d5: FUNC_LOG_ERROR("TODO: cellRtcFormatRfc2822");
	case 0x5b6a0a1d: FUNC_LOG_ERROR("TODO: cellRtcGetDaysInMonth");
	case 0x5f68c268: FUNC_LOG_ERROR("TODO: cellRtcSetWin32FileTime");
	case 0x64c63fd5: FUNC_LOG_ERROR("TODO: cellRtcTickAddWeeks");
	case 0x75744e2a: FUNC_LOG_ERROR("TODO: cellRtcTickAddDays");
	case 0x7f1086e6: FUNC_LOG_ERROR("TODO: cellRtcCheckValid");
	case 0x9598d4b3: FUNC_LOG_ERROR("TODO: cellRtcSetDosTime");
	case 0x99b13034: FUNC_LOG_ERROR("TODO: cellRtcSetTick");
	case 0x9dafc0d9: FUNC_LOG_ERROR("TODO: cellRtcGetCurrentTick");
	case 0xa07c3d2f: FUNC_LOG_ERROR("TODO: cellRtcFormatRfc2822LocalTime");
	case 0xbb543189: FUNC_LOG_ERROR("TODO: cellRtcSetTime_t");
	case 0xc2d8cf95: FUNC_LOG_ERROR("TODO: cellRtcGetDayOfWeek");
	case 0xc48d5002: FUNC_LOG_ERROR("TODO: cellRtcConvertUtcToLocalTime");
	case 0xc5bc0fac: FUNC_LOG_ERROR("TODO: cellRtcParseDateTime");
	case 0xc7bdb7eb: FUNC_LOG_ERROR("TODO: cellRtcGetTick");
	case 0xcb90c761: FUNC_LOG_ERROR("TODO: cellRtcGetTime_t");
	case 0xccce71bd: FUNC_LOG_ERROR("TODO: cellRtcTickAddSeconds");
	case 0xcf11c3d6: FUNC_LOG_ERROR("TODO: cellRtcParseRfc3339");
	case 0xd41d3bd2: FUNC_LOG_ERROR("TODO: cellRtcTickAddHours");
	case 0xd9c0b463: FUNC_LOG_ERROR("TODO: cellRtcFormatRfc3339");
	case 0xdfff32cf: FUNC_LOG_ERROR("TODO: cellRtcGetDosTime");
	case 0xe0ecbb45: FUNC_LOG_ERROR("TODO: cellRtcTickAddMonths");
	case 0xe7086f05: FUNC_LOG_ERROR("TODO: cellRtcGetWin32FileTime");
	case 0xf8509925: FUNC_LOG_ERROR("TODO: cellRtcTickAddMicroseconds");
	case 0xfb51fc61: FUNC_LOG_ERROR("TODO: cellRtcCompareTick");
	case 0x2cde989f: FUNC_LOG_ERROR("TODO: cellRudpGetSizeReadable");
	case 0x384ba777: FUNC_LOG_ERROR("TODO: cellRudpSetOption");
	case 0x48c001b0: FUNC_LOG_ERROR("TODO: cellRudpWrite");
	case 0x48d3eeac: FUNC_LOG_ERROR("TODO: cellRudpTerminate");
	case 0x54f81789: FUNC_LOG_ERROR("TODO: cellRudpSetMaxSegmentSize");
	case 0x576831ae: FUNC_LOG_ERROR("TODO: cellRudpGetRemoteInfo");
	case 0x63f63545: FUNC_LOG_ERROR("TODO: cellRudpInit");
	case 0x6bc587e9: FUNC_LOG_ERROR("TODO: cellRudpPollCreate");
	case 0x6c0cff03: FUNC_LOG_ERROR("TODO: cellRudpEnableInternalIOThread");
	case 0x6ee04954: FUNC_LOG_ERROR("TODO: cellRudpNetReceived");
	case 0x74bfad12: FUNC_LOG_ERROR("TODO: cellRudpGetContextStatus");
	case 0x7dadc739: FUNC_LOG_ERROR("TODO: cellRudpCreateContext");
	case 0x7ed95e60: FUNC_LOG_ERROR("TODO: cellRudpSetEventHandler");
	case 0x8ac398f1: FUNC_LOG_ERROR("TODO: cellRudpPollDestroy");
	case 0x92e4d899: FUNC_LOG_ERROR("TODO: cellRudpRead");
	case 0xa3db855c: FUNC_LOG_ERROR("TODO: cellRudpPollControl");
	case 0xa70737da: FUNC_LOG_ERROR("TODO: cellRudpFlush");
	case 0xa86b28e3: FUNC_LOG_ERROR("TODO: cellRudpGetSizeWritable");
	case 0xb6bcb4a1: FUNC_LOG_ERROR("TODO: cellRudpEnd");
	case 0xc1ad7ced: FUNC_LOG_ERROR("TODO: cellRudpActivate");
	case 0xc407844f: FUNC_LOG_ERROR("TODO: cellRudpInitiate");
	case 0xcd1a3f23: FUNC_LOG_ERROR("TODO: cellRudpGetStatus");
	case 0xd666931f: FUNC_LOG_ERROR("TODO: cellRudpGetLocalInfo");
	case 0xd8310700: FUNC_LOG_ERROR("TODO: cellRudpPollWait");
	case 0xee41e16a: FUNC_LOG_ERROR("TODO: cellRudpBind");
	case 0xfade48b2: FUNC_LOG_ERROR("TODO: cellRudpProcessEvents");
	case 0xfbf7e9e4: FUNC_LOG_ERROR("TODO: cellRudpGetMaxSegmentSize");
	case 0xff9d259c: FUNC_LOG_ERROR("TODO: cellRudpGetOption");
	case 0x018281a8: FUNC_LOG_ERROR("TODO: cellSailGraphicsAdapterGetFrame2");
	case 0x0247c69e: FUNC_LOG_ERROR("TODO: cellSailGraphicsAdapterGetFrame");
	case 0x025b4974: FUNC_LOG_ERROR("TODO: cellSailPlayerUnregisterSource");
	case 0x06dd4174: FUNC_LOG_ERROR("TODO: cellSailRendererAudioFinalize");
	case 0x07924359: FUNC_LOG_ERROR("TODO: cellSailPlayerCloseEsVideo");
	case 0x09de25fd: FUNC_LOG_ERROR("TODO: cellSailPlayerIsEsAudioMuted");
	case 0x0abb318b: FUNC_LOG_ERROR("TODO: cellSailDescriptorCreateDatabase");
	case 0x0c4cb439: FUNC_LOG_ERROR("TODO: cellSailFutureReset");
	case 0x0d0c2f0c: FUNC_LOG_ERROR("TODO: cellSailDescriptorSetEs");
	case 0x10298371: FUNC_LOG_ERROR("TODO: cellSailAviMovieGetHeader");
	case 0x1139a206: FUNC_LOG_ERROR("TODO: cellSailPlayerSetSoundAdapter");
	case 0x145f9b11: FUNC_LOG_ERROR("TODO: cellSailPlayerOpenEsAudio");
	case 0x15fd6a2a: FUNC_LOG_ERROR("TODO: cellSailDescriptorClose");
	case 0x17932b26: FUNC_LOG_ERROR("TODO: cellSailPlayerInitialize");
	case 0x186b98d3: FUNC_LOG_ERROR("TODO: cellSailPlayerGetRegisteredProtocols");
	case 0x1872331b: FUNC_LOG_ERROR("TODO: cellSailGraphicsAdapterPtsToTimePosition");
	case 0x18b4629d: FUNC_LOG_ERROR("TODO: cellSailPlayerFinalize");
	case 0x18bcd21b: FUNC_LOG_ERROR("TODO: cellSailPlayerSetGraphicsAdapter");
	case 0x1c983864: FUNC_LOG_ERROR("TODO: cellSailGraphicsAdapterInitialize");
	case 0x1c9d5e5a: FUNC_LOG_ERROR("TODO: cellSailSoundAdapterSetPreferredFormat");
	case 0x23654375: FUNC_LOG_ERROR("TODO: cellSailPlayerInitialize2");
	case 0x26563ddc: FUNC_LOG_ERROR("TODO: cellSailPlayerNext");
	case 0x277adf21: FUNC_LOG_ERROR("TODO: cellSailDescriptorIsAutoSelection");
	case 0x28336e89: FUNC_LOG_ERROR("TODO: cellSailDescriptorDestroyDatabase");
	case 0x2e3ccb5e: FUNC_LOG_ERROR("TODO: cellSailGraphicsAdapterSetPreferredFormat");
	case 0x325039b9: FUNC_LOG_ERROR("TODO: cellSailRendererAudioNotifyOutputEos");
	case 0x346ebba3: FUNC_LOG_ERROR("TODO: cellSailMemAllocatorInitialize");
	case 0x34ecc1b9: FUNC_LOG_ERROR("TODO: cellSailPlayerOpenStream");
	case 0x38144ecf: FUNC_LOG_ERROR("TODO: cellSailPlayerGetRepeatMode");
	case 0x3a1132ed: FUNC_LOG_ERROR("TODO: cellSailAuReceiverGet");
	case 0x3a2d806c: FUNC_LOG_ERROR("TODO: cellSailFutureGet");
	case 0x3d0d3b72: FUNC_LOG_ERROR("TODO: cellSailSoundAdapterInitialize");
	case 0x3dd9639a: FUNC_LOG_ERROR("TODO: cellSailAuReceiverInitialize");
	case 0x3df98d41: FUNC_LOG_ERROR("TODO: cellSailSourceNotifyOpenCompleted");
	case 0x3e908c56: FUNC_LOG_ERROR("TODO: cellSailAviMovieGetStreamByIndex");
	case 0x44a20e79: FUNC_LOG_ERROR("TODO: cellSailGraphicsAdapterUpdateAvSync");
	case 0x47055fea: FUNC_LOG_ERROR("TODO: cellSailRendererVideoFinalize");
	case 0x47632810: FUNC_LOG_ERROR("TODO: cellSailPlayerReplaceEventHandler");
	case 0x477501f6: FUNC_LOG_ERROR("TODO: cellSailPlayerOpenEsVideo");
	case 0x4ae979df: FUNC_LOG_ERROR("TODO: cellSailSoundAdapterPtsToTimePosition");
	case 0x4c191088: FUNC_LOG_ERROR("TODO: cellSailDescriptorGetUri");
	case 0x4cc54f8e: FUNC_LOG_ERROR("TODO: cellSailFutureInitialize");
	case 0x4fa5ad09: FUNC_LOG_ERROR("TODO: cellSailPlayerReopenEsAudio");
	case 0x51ecf361: FUNC_LOG_ERROR("TODO: cellSailFutureIsDone");
	case 0x54c53688: FUNC_LOG_ERROR("TODO: cellSailSourceNotifyInputEos");
	case 0x5783a454: FUNC_LOG_ERROR("TODO: cellSailMp4MovieGetMovieInfo");
	case 0x5f44f64f: FUNC_LOG_ERROR("TODO: cellSailMp4TrackGetTrackReference");
	case 0x5f77e8df: FUNC_LOG_ERROR("TODO: cellSailRendererVideoNotifyFrameDone");
	case 0x5f7c7a6f: FUNC_LOG_ERROR("TODO: cellSailPlayerSetParameter");
	case 0x5faf802b: FUNC_LOG_ERROR("TODO: cellSailMp4MovieGetTrackByIndex");
	case 0x640c7278: FUNC_LOG_ERROR("TODO: cellSailSourceNotifyStartCompleted");
	case 0x67b4d01f: FUNC_LOG_ERROR("TODO: cellSailRendererAudioInitialize");
	case 0x69793952: FUNC_LOG_ERROR("TODO: cellSailPlayerUnsubscribeEvent");
	case 0x6e83f5c0: FUNC_LOG_ERROR("TODO: cellSailAviMovieGetMovieInfo");
	case 0x6f0b1002: FUNC_LOG_ERROR("TODO: cellSailPlayerSubscribeEvent");
	case 0x72236ec1: FUNC_LOG_ERROR("TODO: cellSailMp4TrackGetTrackReferenceCount");
	case 0x7473970a: FUNC_LOG_ERROR("TODO: cellSailSourceNotifyStopCompleted");
	case 0x752f8585: FUNC_LOG_ERROR("TODO: cellSailPlayerGetDescriptorCount");
	case 0x75fca288: FUNC_LOG_ERROR("TODO: cellSailPlayerGetCurrentDescriptor");
	case 0x76488bb1: FUNC_LOG_ERROR("TODO: cellSailGraphicsAdapterFinalize");
	case 0x764ec2d2: FUNC_LOG_ERROR("TODO: cellSailSourceNotifyCallCompleted");
	case 0x76b1a425: FUNC_LOG_ERROR("TODO: cellSailDescriptorSetAutoSelection");
	case 0x7b6fa92e: FUNC_LOG_ERROR("TODO: cellSailPlayerReopenEsUser");
	case 0x7c8dff3b: FUNC_LOG_ERROR("TODO: cellSailPlayerAddDescriptor");
	case 0x7eb8d6b5: FUNC_LOG_ERROR("TODO: cellSailSoundAdapterGetFrame");
	case 0x85b07126: FUNC_LOG_ERROR("TODO: cellSailMp4MovieGetTrackById");
	case 0x85beffcc: FUNC_LOG_ERROR("TODO: cellSailPlayerCloseStream");
	case 0x8d1ff475: FUNC_LOG_ERROR("TODO: cellSailRendererVideoInitialize");
	case 0x91d287f6: FUNC_LOG_ERROR("TODO: cellSailPlayerSetEsAudioMuted");
	case 0x92590d52: FUNC_LOG_ERROR("TODO: cellSailDescriptorInquireCapability");
	case 0x92eaf6ca: FUNC_LOG_ERROR("TODO: cellSailPlayerSetRendererAudio");
	case 0x946ecca0: FUNC_LOG_ERROR("TODO: cellSailSourceNotifyReadCompleted");
	case 0x950d53c1: FUNC_LOG_ERROR("TODO: cellSailPlayerCancel");
	case 0x952269c9: FUNC_LOG_ERROR("TODO: cellSailPlayerGetParameter");
	case 0x954f48f8: FUNC_LOG_ERROR("TODO: cellSailRendererVideoNotifyCallCompleted");
	case 0x9553af65: FUNC_LOG_ERROR("TODO: cellSailFutureFinalize");
	case 0x95ee1695: FUNC_LOG_ERROR("TODO: cellSailSourceNotifyStreamOut");
	case 0x9897fbd1: FUNC_LOG_ERROR("TODO: cellSailPlayerRemoveDescriptor");
	case 0x9d30bdce: FUNC_LOG_ERROR("TODO: cellSailSourceInitialize");
	case 0xa37fed15: FUNC_LOG_ERROR("TODO: cellSailFutureSet");
	case 0xa48be428: FUNC_LOG_ERROR("TODO: cellSailMp4TrackGetTrackInfo");
	case 0xa849d0a7: FUNC_LOG_ERROR("TODO: cellSailPlayerOpenEsUser");
	case 0xaafa17b8: FUNC_LOG_ERROR("TODO: cellSailPlayerIsPaused");
	case 0xac9c3b1f: FUNC_LOG_ERROR("TODO: cellSailDescriptorGetCapabilities");
	case 0xaed9d6cd: FUNC_LOG_ERROR("TODO: cellSailPlayerCloseEsUser");
	case 0xb7b4ecee: FUNC_LOG_ERROR("TODO: cellSailRendererAudioNotifyCallCompleted");
	case 0xb980b76e: FUNC_LOG_ERROR("TODO: cellSailMp4MovieGetBrand");
	case 0xbd1635f4: FUNC_LOG_ERROR("TODO: cellSailDescriptorGetMediaInfo");
	case 0xbdb2251a: FUNC_LOG_ERROR("TODO: cellSailSourceSetDiagHandler");
	case 0xbdf21b0f: FUNC_LOG_ERROR("TODO: cellSailPlayerBoot");
	case 0xbedccc74: FUNC_LOG_ERROR("TODO: cellSailPlayerRegisterSource");
	case 0xbf9b8d72: FUNC_LOG_ERROR("TODO: cellSailPlayerCloseEsAudio");
	case 0xc044fab1: FUNC_LOG_ERROR("TODO: cellSailDescriptorOpen");
	case 0xc09e2f23: FUNC_LOG_ERROR("TODO: cellSailAviStreamGetMediaType");
	case 0xc2d90ec9: FUNC_LOG_ERROR("TODO: cellSailMp4MovieGetTrackByTypeAndIndex");
	case 0xc457b203: FUNC_LOG_ERROR("TODO: cellSailSourceNotifyCloseCompleted");
	case 0xcc3cca60: FUNC_LOG_ERROR("TODO: cellSailAviStreamGetHeader");
	case 0xcc987ba6: FUNC_LOG_ERROR("TODO: cellSailPlayerDumpImage");
	case 0xd1462438: FUNC_LOG_ERROR("TODO: cellSailSoundAdapterFinalize");
	case 0xd1d55a90: FUNC_LOG_ERROR("TODO: cellSailPlayerSetPaused");
	case 0xd4049de0: FUNC_LOG_ERROR("TODO: cellSailMp4MovieIsCompatibleBrand");
	case 0xd5f9a15b: FUNC_LOG_ERROR("TODO: cellSailDescriptorGetStreamType");
	case 0xd7938b8d: FUNC_LOG_ERROR("TODO: cellSailPlayerCreateDescriptor");
	case 0xdbe32ed4: FUNC_LOG_ERROR("TODO: cellSailPlayerIsEsVideoMuted");
	case 0xddebd2a5: FUNC_LOG_ERROR("TODO: cellSailAviMovieGetStreamByTypeAndIndex");
	case 0xdf5553ef: FUNC_LOG_ERROR("TODO: cellSailDescriptorClearEs");
	case 0xdff1cda2: FUNC_LOG_ERROR("TODO: cellSailRendererVideoNotifyOutputEos");
	case 0xe535b0d3: FUNC_LOG_ERROR("TODO: cellSailPlayerStart");
	case 0xeba8d4ec: FUNC_LOG_ERROR("TODO: cellSailPlayerStop");
	case 0xecf56150: FUNC_LOG_ERROR("TODO: cellSailPlayerSetRendererVideo");
	case 0xed58e3ec: FUNC_LOG_ERROR("TODO: cellSailAuReceiverFinalize");
	case 0xee724c99: FUNC_LOG_ERROR("TODO: cellSailSourceFinalize");
	case 0xee94b99b: FUNC_LOG_ERROR("TODO: cellSailDescriptorSetParameter");
	case 0xeec22809: FUNC_LOG_ERROR("TODO: cellSailSoundAdapterUpdateAvSync");
	case 0xf1446a40: FUNC_LOG_ERROR("TODO: cellSailPlayerSetEsVideoMuted");
	case 0xf25f197d: FUNC_LOG_ERROR("TODO: cellSailSoundAdapterGetFormat");
	case 0xf289f0cd: FUNC_LOG_ERROR("TODO: cellSailSourceNotifySessionError");
	case 0xf4009a94: FUNC_LOG_ERROR("TODO: cellSailSourceNotifyMediaStateChanged");
	case 0xf5747e1f: FUNC_LOG_ERROR("TODO: cellSailPlayerSetAuReceiver");
	case 0xf60a8a69: FUNC_LOG_ERROR("TODO: cellSailPlayerReopenEsVideo");
	case 0xf841a537: FUNC_LOG_ERROR("TODO: cellSailRendererAudioNotifyFrameDone");
	case 0xfc5baf8a: FUNC_LOG_ERROR("TODO: cellSailPlayerSetRepeatMode");
	case 0xfc839bd4: FUNC_LOG_ERROR("TODO: cellSailPlayerDestroyDescriptor");
	case 0xffd58aa4: FUNC_LOG_ERROR("TODO: cellSailGraphicsAdapterGetFormat");
	case 0x0a3ea2a9: FUNC_LOG_ERROR("TODO: cellSailRecorderSetParameter");
	case 0x10c81457: FUNC_LOG_ERROR("TODO: cellSailRecorderOpenStream");
	case 0x1422a425: FUNC_LOG_ERROR("TODO: cellSailProfileSetEsVideoParameter");
	case 0x18ecc741: FUNC_LOG_ERROR("TODO: cellSailRecorderStop");
	case 0x376c3926: FUNC_LOG_ERROR("TODO: cellSailRecorderDestroyProfile");
	case 0x37aad85f: FUNC_LOG_ERROR("TODO: cellSailRecorderDumpImage");
	case 0x3c775cea: FUNC_LOG_ERROR("TODO: cellSailFeederAudioNotifyFrameOut");
	case 0x3deae857: FUNC_LOG_ERROR("TODO: cellSailRecorderSetFeederAudio");
	case 0x455c4709: FUNC_LOG_ERROR("TODO: cellSailRecorderDestroyVideoConverter");
	case 0x4830faf8: FUNC_LOG_ERROR("TODO: cellSailRecorderStart");
	case 0x49476a3d: FUNC_LOG_ERROR("TODO: cellSailRecorderCreateVideoConverter");
	case 0x4fec43a9: FUNC_LOG_ERROR("TODO: cellSailRecorderSetFeederVideo");
	case 0x50affdc1: FUNC_LOG_ERROR("TODO: cellSailRecorderCreateProfile");
	case 0x57415dd3: FUNC_LOG_ERROR("TODO: cellSailFeederVideoInitialize");
	case 0x7a52bf69: FUNC_LOG_ERROR("TODO: cellSailRecorderInitialize");
	case 0x81bfeae8: FUNC_LOG_ERROR("TODO: cellSailFeederVideoFinalize");
	case 0x855da8c6: FUNC_LOG_ERROR("TODO: cellSailVideoConverterProcess");
	case 0x86cae679: FUNC_LOG_ERROR("TODO: cellSailFeederVideoNotifySessionError");
	case 0x899d1587: FUNC_LOG_ERROR("TODO: cellSailFeederAudioFinalize");
	case 0x999c0dc5: FUNC_LOG_ERROR("TODO: cellSailFeederAudioNotifySessionEnd");
	case 0xaf310ae6: FUNC_LOG_ERROR("TODO: cellSailFeederAudioNotifySessionError");
	case 0xb3d30b0d: FUNC_LOG_ERROR("TODO: cellSailVideoConverterCanProcess");
	case 0xbd591197: FUNC_LOG_ERROR("TODO: cellSailFeederAudioInitialize");
	case 0xbff6e8d3: FUNC_LOG_ERROR("TODO: cellSailFeederVideoNotifySessionEnd");
	case 0xc2e2f30d: FUNC_LOG_ERROR("TODO: cellSailFeederAudioNotifyCallCompleted");
	case 0xc4617ddc: FUNC_LOG_ERROR("TODO: cellSailRecorderBoot");
	case 0xd37fb694: FUNC_LOG_ERROR("TODO: cellSailRecorderCancel");
	case 0xd84daeb9: FUNC_LOG_ERROR("TODO: cellSailFeederVideoNotifyCallCompleted");
	case 0xe14cae97: FUNC_LOG_ERROR("TODO: cellSailProfileSetEsAudioParameter");
	case 0xe15679fe: FUNC_LOG_ERROR("TODO: cellSailVideoConverterGetResult");
	case 0xe16de678: FUNC_LOG_ERROR("TODO: cellSailVideoConverterCanGetResult");
	case 0xe3f56f62: FUNC_LOG_ERROR("TODO: cellSailRecorderCloseStream");
	case 0xe5e0572a: FUNC_LOG_ERROR("TODO: cellSailFeederVideoNotifyFrameOut");
	case 0xe8d86c43: FUNC_LOG_ERROR("TODO: cellSailProfileSetStreamParameter");
	case 0xf57d74e3: FUNC_LOG_ERROR("TODO: cellSailRecorderFinalize");
	case 0xff20157b: FUNC_LOG_ERROR("TODO: cellSailRecorderGetParameter");
	case 0x04c06fc2: FUNC_LOG_ERROR("TODO: cellSaveDataGetListItem");
	case 0x273d116a: FUNC_LOG_ERROR("TODO: cellSaveDataUserListExport");
	case 0x27cb8bc2: FUNC_LOG_ERROR("TODO: cellSaveDataListDelete");
	case 0x39d6ee43: FUNC_LOG_ERROR("TODO: cellSaveDataUserListImport");
	case 0x46a2d878: FUNC_LOG_ERROR("TODO: cellSaveDataFixedExport");
	case 0x491cc554: FUNC_LOG_ERROR("TODO: cellSaveDataListExport");
	case 0x52541151: FUNC_LOG_ERROR("TODO: cellSaveDataFixedImport");
	case 0x529231b0: FUNC_LOG_ERROR("TODO: cellSaveDataUserFixedImport");
	case 0x6b4e0de6: FUNC_LOG_ERROR("TODO: cellSaveDataListImport");
	case 0x7048a9ba: FUNC_LOG_ERROR("TODO: cellSaveDataUserListDelete");
	case 0x95ae2cde: FUNC_LOG_ERROR("TODO: cellSaveDataUserFixedExport");
	case 0xf6482036: FUNC_LOG_ERROR("TODO: cellSaveDataUserGetListItem");
	case 0x7a9c2243: FUNC_LOG_ERROR("TODO: cellScreenShotSetOverlayImage");
	case 0x9e33ab8f: FUNC_LOG_ERROR("TODO: cellScreenShotEnable");
	case 0xd3ad63e4: FUNC_LOG_ERROR("TODO: cellScreenShotSetParameter");
	case 0xfc6f4e74: FUNC_LOG_ERROR("TODO: cellScreenShotDisable");
	case 0x025ce169: FUNC_LOG_ERROR("TODO: cellSearchGetMusicSelectionContext");
	case 0x0591826f: FUNC_LOG_ERROR("TODO: cellSearchStartContentSearch");
	case 0x0a4c8295: FUNC_LOG_ERROR("TODO: cellSearchStartListSearch");
	case 0x13524faa: FUNC_LOG_ERROR("TODO: cellSearchStartSceneSearch");
	case 0x35cda406: FUNC_LOG_ERROR("TODO: cellSearchGetContentInfoDeveloperData");
	case 0x37b5ba0c: FUNC_LOG_ERROR("TODO: cellSearchGetContentInfoPathMovieThumb");
	case 0x3b210319: FUNC_LOG_ERROR("TODO: cellSearchGetContentInfoByOffset");
	case 0x540d9068: FUNC_LOG_ERROR("TODO: cellSearchGetOffsetByContentId");
	case 0x64fb0b76: FUNC_LOG_ERROR("TODO: cellSearchStartContentSearchInList");
	case 0x774033d6: FUNC_LOG_ERROR("TODO: cellSearchEnd");
	case 0x8fe376a6: FUNC_LOG_ERROR("TODO: cellSearchCancel");
	case 0x94e21701: FUNC_LOG_ERROR("TODO: cellSearchGetContentIdByOffset");
	case 0x9663a44b: FUNC_LOG_ERROR("TODO: cellSearchGetContentInfoByContentId");
	case 0xbfab7616: FUNC_LOG_ERROR("TODO: cellSearchFinalize");
	case 0xc0ed0522: FUNC_LOG_ERROR("TODO: cellSearchStartSceneSearchInVideo");
	case 0xc81ccf8a: FUNC_LOG_ERROR("TODO: cellSearchInitialize");
	case 0xd7a7a433: FUNC_LOG_ERROR("TODO: cellSearchGetContentInfoGameComment");
	case 0xe73cb0d2: FUNC_LOG_ERROR("TODO: cellSearchPrepareFile");
	case 0xed20e079: FUNC_LOG_ERROR("TODO: cellSearchGetMusicSelectionContextOfSingleTrack");
	case 0xffb28491: FUNC_LOG_ERROR("TODO: cellSearchGetContentInfoPath");
	case 0x2452679f: FUNC_LOG_ERROR("TODO: cellKeySheapMutexDelete");
	case 0x3478e1e6: FUNC_LOG_ERROR("TODO: cellKeySheapMutexNew");
	case 0x37968718: FUNC_LOG_ERROR("TODO: cellSheapQueryMax");
	case 0x4a5b9659: FUNC_LOG_ERROR("TODO: cellKeySheapBufferNew");
	case 0x4b1383fb: FUNC_LOG_ERROR("TODO: cellSheapAllocate");
	case 0x5c5994bd: FUNC_LOG_ERROR("TODO: cellSheapFree");
	case 0x69a5861d: FUNC_LOG_ERROR("TODO: cellKeySheapSemaphoreNew");
	case 0x73a45cf8: FUNC_LOG_ERROR("TODO: cellKeySheapSemaphoreDelete");
	case 0x79a6abd0: FUNC_LOG_ERROR("TODO: cellKeySheapQueueDelete");
	case 0x7fa23275: FUNC_LOG_ERROR("TODO: cellSheapQueryFree");
	case 0x987e260e: FUNC_LOG_ERROR("TODO: cellKeySheapQueueNew");
	case 0xa1b25841: FUNC_LOG_ERROR("TODO: cellKeySheapInitialize");
	case 0xbbb47cd8: FUNC_LOG_ERROR("TODO: cellSheapInitialize");
	case 0xe6b37362: FUNC_LOG_ERROR("TODO: cellKeySheapBufferDelete");
	case 0xe897c835: FUNC_LOG_ERROR("TODO: cellKeySheapBarrierNew");
	case 0xed136702: FUNC_LOG_ERROR("TODO: cellKeySheapRwmDelete");
	case 0xf01ac471: FUNC_LOG_ERROR("TODO: cellKeySheapRwmNew");
	case 0xf6f5fbca: FUNC_LOG_ERROR("TODO: cellKeySheapBarrierDelete");
	case 0x3fbcf1d6: FUNC_LOG_ERROR("TODO: cellSpudllHandleConfigSetDefaultValues");
	case 0xcccd3257: FUNC_LOG_ERROR("TODO: cellSpudllGetImageSize");
	case 0x00af2519: FUNC_LOG_ERROR("TODO: cellSpursJobGuardReset");
	case 0x011ee38b: FUNC_LOG_ERROR("TODO: _cellSpursLFQueueInitialize");
	case 0x039d70b7: FUNC_LOG_ERROR("TODO: cellSpursQueueDetachLv2EventQueue");
	case 0x07529113: FUNC_LOG_ERROR("TODO: cellSpursAttributeSetNamePrefix");
	case 0x082bfb09: FUNC_LOG_ERROR("TODO: _cellSpursQueueInitialize");
	case 0x0eb4bc38: FUNC_LOG_ERROR("TODO: cellSpursWorkloadAttributeSetShutdownCompletionEventHook");
	case 0x1051d134: FUNC_LOG_ERROR("TODO: cellSpursAttributeEnableSpuPrintfIfAvailable");
	case 0x13ae18f3: FUNC_LOG_ERROR("TODO: cellSpursTaskExitCodeGet");
	case 0x161da6a7: FUNC_LOG_ERROR("TODO: cellSpursJobChainGetError");
	case 0x16394a4e: FUNC_LOG_ERROR("TODO: _cellSpursTasksetAttributeInitialize");
	case 0x1656d49f: FUNC_LOG_ERROR("TODO: cellSpursLFQueueAttachLv2EventQueue");
	case 0x17001000: FUNC_LOG_ERROR("TODO: cellSpursAddUrgentCommand");
	case 0x182d9890: FUNC_LOG_ERROR("TODO: cellSpursRequestIdleSpu");
	case 0x1d2bca4b: FUNC_LOG_ERROR("TODO: cellSpursSendWorkloadSignal");
	case 0x1d344406: FUNC_LOG_ERROR("TODO: cellSpursTaskGetLoadableSegmentPattern");
	case 0x1d46fedf: FUNC_LOG_ERROR("TODO: cellSpursCreateTaskWithAttribute");
	case 0x1ebcf459: FUNC_LOG_ERROR("TODO: cellSpursDestroyTaskset2");
	case 0x1f402f8f: FUNC_LOG_ERROR("TODO: cellSpursGetInfo");
	case 0x2093252b: FUNC_LOG_ERROR("TODO: cellSpursQueueGetTasksetAddress");
	case 0x22aab31d: FUNC_LOG_ERROR("TODO: cellSpursEventFlagDetachLv2EventQueue");
	case 0x247414d0: FUNC_LOG_ERROR("TODO: cellSpursQueueClear");
	case 0x2cfccb99: FUNC_LOG_ERROR("TODO: cellSpursJobChainAttributeSetJobTypeMemoryCheck");
	case 0x2ddbcc0a: FUNC_LOG_ERROR("TODO: _cellSpursWorkloadFlagReceiver2");
	case 0x2edcff92: FUNC_LOG_ERROR("TODO: cellSpursTasksetSetExceptionEventHandler");
	case 0x303c19cd: FUNC_LOG_ERROR("TODO: cellSpursCreateJobChainWithAttribute");
	case 0x30aa96c4: FUNC_LOG_ERROR("TODO: cellSpursInitializeWithAttribute2");
	case 0x32b94add: FUNC_LOG_ERROR("TODO: cellSpursEnableExceptionEventHandler");
	case 0x34552fa6: FUNC_LOG_ERROR("TODO: cellSpursTaskExitCodeInitialize");
	case 0x3548f483: FUNC_LOG_ERROR("TODO: _cellSpursJobChainAttributeInitialize");
	case 0x35dae22b: FUNC_LOG_ERROR("TODO: _cellSpursLFQueuePopBody");
	case 0x35f02287: FUNC_LOG_ERROR("TODO: cellSpursQueueDepth");
	case 0x369fe03d: FUNC_LOG_ERROR("TODO: cellSpursQueueGetEntrySize");
	case 0x373523d4: FUNC_LOG_ERROR("TODO: cellSpursEventFlagWait");
	case 0x39c173fb: FUNC_LOG_ERROR("TODO: cellSpursGetSpuThreadGroupId");
	case 0x494613c7: FUNC_LOG_ERROR("TODO: cellSpursJobChainGetSpursAddress");
	case 0x49a3426d: FUNC_LOG_ERROR("TODO: cellSpursReadyCountSwap");
	case 0x4a5eab63: FUNC_LOG_ERROR("TODO: cellSpursWorkloadAttributeSetName");
	case 0x4a6465e3: FUNC_LOG_ERROR("TODO: cellSpursCreateTaskset2");
	case 0x4ac7bae4: FUNC_LOG_ERROR("TODO: cellSpursEventFlagClear");
	case 0x4c75deb8: FUNC_LOG_ERROR("TODO: cellSpursUnsetExceptionEventHandler");
	case 0x4cce88a9: FUNC_LOG_ERROR("TODO: cellSpursLookUpTasksetAddress");
	case 0x4ceb9694: FUNC_LOG_ERROR("TODO: cellSpursGetJobChainInfo");
	case 0x4d1e9373: FUNC_LOG_ERROR("TODO: cellSpursEventFlagGetClearMode");
	case 0x4de203e2: FUNC_LOG_ERROR("TODO: cellSpursSetPreemptionVictimHints");
	case 0x4e153e3e: FUNC_LOG_ERROR("TODO: cellSpursGetWorkloadInfo");
	case 0x4e66d483: FUNC_LOG_ERROR("TODO: cellSpursDetachLv2EventQueue");
	case 0x5202e53b: FUNC_LOG_ERROR("TODO: cellSpursJobChainSetExceptionEventHandler");
	case 0x52cc6c82: FUNC_LOG_ERROR("TODO: cellSpursCreateTaskset");
	case 0x54876603: FUNC_LOG_ERROR("TODO: cellSpursQueueSize");
	case 0x568b2352: FUNC_LOG_ERROR("TODO: cellSpursSemaphoreGetTasksetAddress");
	case 0x569674e3: FUNC_LOG_ERROR("TODO: cellSpursTraceInitialize");
	case 0x57e4dec3: FUNC_LOG_ERROR("TODO: cellSpursRemoveWorkload");
	case 0x58d58fcf: FUNC_LOG_ERROR("TODO: cellSpursTasksetGetSpursAddress");
	case 0x5ef96465: FUNC_LOG_ERROR("TODO: _cellSpursEventFlagInitialize");
	case 0x5fd43fe4: FUNC_LOG_ERROR("TODO: cellSpursWaitForWorkloadShutdown");
	case 0x60eb2dec: FUNC_LOG_ERROR("TODO: cellSpursCreateJobChain");
	case 0x652b70e2: FUNC_LOG_ERROR("TODO: cellSpursTasksetAttributeSetName");
	case 0x68aaeba9: FUNC_LOG_ERROR("TODO: cellSpursJobGuardInitialize");
	case 0x69726aa2: FUNC_LOG_ERROR("TODO: cellSpursAddWorkload");
	case 0x6aa76999: FUNC_LOG_ERROR("TODO: cellSpursJobChainUnsetExceptionEventHandler");
	case 0x6c960f6d: FUNC_LOG_ERROR("TODO: cellSpursGetSpuThreadId");
	case 0x6d2d9339: FUNC_LOG_ERROR("TODO: cellSpursEventFlagTryWait");
	case 0x6fcdf6e3: FUNC_LOG_ERROR("TODO: cellSpursGetSpuGuid");
	case 0x738e40e6: FUNC_LOG_ERROR("TODO: cellSpursShutdownJobChain");
	case 0x73e06f91: FUNC_LOG_ERROR("TODO: cellSpursLFQueueDetachLv2EventQueue");
	case 0x7517724a: FUNC_LOG_ERROR("TODO: cellSpursSetGlobalExceptionEventHandler");
	case 0x75211196: FUNC_LOG_ERROR("TODO: cellSpursReadyCountAdd");
	case 0x77cdac0c: FUNC_LOG_ERROR("TODO: _cellSpursSemaphoreInitialize");
	case 0x7b9cbb74: FUNC_LOG_ERROR("TODO: cellSpursTraceFinalize");
	case 0x7cb33c2e: FUNC_LOG_ERROR("TODO: cellSpursTaskGetReadOnlyAreaPattern");
	case 0x7e4ea023: FUNC_LOG_ERROR("TODO: cellSpursWakeUp");
	case 0x7fdf4fef: FUNC_LOG_ERROR("TODO: cellSpursBarrierInitialize");
	case 0x80a29e27: FUNC_LOG_ERROR("TODO: cellSpursSetPriorities");
	case 0x82275c1c: FUNC_LOG_ERROR("TODO: cellSpursAttributeSetMemoryContainerForSpuThread");
	case 0x838fa4f0: FUNC_LOG_ERROR("TODO: cellSpursTryJoinTask2");
	case 0x84d2f6d5: FUNC_LOG_ERROR("TODO: cellSpursSetMaxContention");
	case 0x861237f8: FUNC_LOG_ERROR("TODO: cellSpursUnsetGlobalExceptionEventHandler");
	case 0x86c864a2: FUNC_LOG_ERROR("TODO: cellSpursGetJobChainId");
	case 0x87630976: FUNC_LOG_ERROR("TODO: cellSpursEventFlagAttachLv2EventQueue");
	case 0x890f9e5a: FUNC_LOG_ERROR("TODO: cellSpursEventFlagGetDirection");
	case 0x8a85674d: FUNC_LOG_ERROR("TODO: _cellSpursLFQueuePushBody");
	case 0x8adadf65: FUNC_LOG_ERROR("TODO: _cellSpursTaskAttribute2Initialize");
	case 0x8f122ef8: FUNC_LOG_ERROR("TODO: cellSpursTasksetAttributeSetTasksetSize");
	case 0x8fdf50b2: FUNC_LOG_ERROR("TODO: cellSpursAddUrgentCall");
	case 0x9034e538: FUNC_LOG_ERROR("TODO: cellSpursTaskGetContextSaveAreaSize");
	case 0x91066667: FUNC_LOG_ERROR("TODO: cellSpursQueuePopBody");
	case 0x9197915f: FUNC_LOG_ERROR("TODO: cellSpursTaskGenerateLsPattern");
	case 0x92cff6ed: FUNC_LOG_ERROR("TODO: cellSpursQueuePushBody");
	case 0x94034c95: FUNC_LOG_ERROR("TODO: cellSpursTasksetUnsetExceptionEventHandler");
	case 0x947efb0b: FUNC_LOG_ERROR("TODO: cellSpursEventFlagGetTasksetAddress");
	case 0x95180230: FUNC_LOG_ERROR("TODO: _cellSpursAttributeInitialize");
	case 0x97a2f6c8: FUNC_LOG_ERROR("TODO: cellSpursJobHeaderSetJobbin2Param");
	case 0x98d5b343: FUNC_LOG_ERROR("TODO: cellSpursShutdownWorkload");
	case 0x9aeb5432: FUNC_LOG_ERROR("TODO: cellSpursBarrierGetTasksetAddress");
	case 0x9dcbcb5d: FUNC_LOG_ERROR("TODO: cellSpursAttributeEnableSystemWorkload");
	case 0x9f72add3: FUNC_LOG_ERROR("TODO: cellSpursJoinTaskset");
	case 0x9fcb567b: FUNC_LOG_ERROR("TODO: cellSpursGetTasksetInfo");
	case 0x9fef70c2: FUNC_LOG_ERROR("TODO: cellSpursJobChainAttributeSetName");
	case 0xa121a224: FUNC_LOG_ERROR("TODO: cellSpursTaskAttributeSetExitCodeContainer");
	case 0xa73bf47e: FUNC_LOG_ERROR("TODO: _cellSpursWorkloadFlagReceiver");
	case 0xa789e631: FUNC_LOG_ERROR("TODO: cellSpursShutdownTaskset");
	case 0xa7a94892: FUNC_LOG_ERROR("TODO: cellSpursJoinTask2");
	case 0xa7c066de: FUNC_LOG_ERROR("TODO: cellSpursJoinJobChain");
	case 0xa7f9e716: FUNC_LOG_ERROR("TODO: cellSpursGetWorkloadData");
	case 0xa839a4d9: FUNC_LOG_ERROR("TODO: cellSpursAttributeSetSpuThreadGroupType");
	case 0xaa6269a8: FUNC_LOG_ERROR("TODO: cellSpursInitializeWithAttribute");
	case 0xacfc8dbc: FUNC_LOG_ERROR("TODO: cellSpursInitialize");
	case 0xb792ca1a: FUNC_LOG_ERROR("TODO: cellSpursLFQueueGetTasksetAddress");
	case 0xb8474eff: FUNC_LOG_ERROR("TODO: _cellSpursTaskAttributeInitialize");
	case 0xb9bc6207: FUNC_LOG_ERROR("TODO: cellSpursAttachLv2EventQueue");
	case 0xbb68d76e: FUNC_LOG_ERROR("TODO: cellSpursJobChainAttributeSetHaltOnError");
	case 0xbeb600ac: FUNC_LOG_ERROR("TODO: cellSpursCreateTask");
	case 0xbfea60fa: FUNC_LOG_ERROR("TODO: cellSpursKickJobChain");
	case 0xc0158d8b: FUNC_LOG_ERROR("TODO: cellSpursAddWorkloadWithAttribute");
	case 0xc10931cb: FUNC_LOG_ERROR("TODO: cellSpursCreateTasksetWithAttribute");
	case 0xc2acdf43: FUNC_LOG_ERROR("TODO: _cellSpursTasksetAttribute2Initialize");
	case 0xc56defb5: FUNC_LOG_ERROR("TODO: cellSpursGetNumSpuThread");
	case 0xc765b995: FUNC_LOG_ERROR("TODO: cellSpursGetWorkloadFlag");
	case 0xca4c4600: FUNC_LOG_ERROR("TODO: cellSpursFinalize");
	case 0xce853fbf: FUNC_LOG_ERROR("TODO: cellSpursTraceStart");
	case 0xd2e23fa9: FUNC_LOG_ERROR("TODO: cellSpursSetExceptionEventHandler");
	case 0xd5d0b256: FUNC_LOG_ERROR("TODO: cellSpursJobGuardNotify");
	case 0xd86380d8: FUNC_LOG_ERROR("TODO: cellSpursGetJobPipelineInfo");
	case 0xdca13593: FUNC_LOG_ERROR("TODO: cellSpursTasksetAttributeEnableClearLS");
	case 0xddc81b5a: FUNC_LOG_ERROR("TODO: cellSpursTraceStop");
	case 0xe0a6dbe4: FUNC_LOG_ERROR("TODO: _cellSpursSendSignal");
	case 0xe14ca62d: FUNC_LOG_ERROR("TODO: cellSpursCreateTask2");
	case 0xe4944a1c: FUNC_LOG_ERROR("TODO: cellSpursCreateTask2WithBinInfo");
	case 0xe5443be7: FUNC_LOG_ERROR("TODO: cellSpursQueueAttachLv2EventQueue");
	case 0xe717ac73: FUNC_LOG_ERROR("TODO: cellSpursTaskExitCodeTryGet");
	case 0xe7b0e69a: FUNC_LOG_ERROR("TODO: cellSpursJobSetMaxGrab");
	case 0xe7dd87e1: FUNC_LOG_ERROR("TODO: cellSpursGetTasksetId");
	case 0xec68442c: FUNC_LOG_ERROR("TODO: cellSpursQueueGetDirection");
	case 0xefeb2679: FUNC_LOG_ERROR("TODO: _cellSpursWorkloadAttributeInitialize");
	case 0xf1d3552d: FUNC_LOG_ERROR("TODO: cellSpursReadyCountCompareAndSwap");
	case 0xf31731bb: FUNC_LOG_ERROR("TODO: cellSpursRunJobChain");
	case 0xf5507729: FUNC_LOG_ERROR("TODO: cellSpursEventFlagSet");
	case 0xf843818d: FUNC_LOG_ERROR("TODO: cellSpursReadyCountStore");
	case 0x01bbf2e0: FUNC_LOG_ERROR("TODO: cellSpursJobQueueGetSpurs");
	case 0x0582338a: FUNC_LOG_ERROR("TODO: cellSpursJobQueueAttributeSetDoBusyWaiting");
	case 0x0d69929e: FUNC_LOG_ERROR("TODO: _cellSpursJobQueueAllocateJobDescriptorBody");
	case 0x0f03f712: FUNC_LOG_ERROR("TODO: cellSpursJobQueueAttributeSetSubmitWithEntryLock");
	case 0x13671514: FUNC_LOG_ERROR("TODO: cellSpursJobQueueSetWaitingMode");
	case 0x15934401: FUNC_LOG_ERROR("TODO: cellSpursJobQueueGetSuspendedJobSize");
	case 0x1686957e: FUNC_LOG_ERROR("TODO: cellSpursJobQueueAttributeSetMaxSizeJobDescriptor");
	case 0x1917359d: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePortCopyPushJobBody");
	case 0x1b6eea7e: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePortPushJobListBody");
	case 0x1da890c7: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePushAndReleaseJobBody");
	case 0x26fa81b4: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePortFinalize");
	case 0x29c2acc5: FUNC_LOG_ERROR("TODO: cellSpursJobQueueClose");
	case 0x2e775550: FUNC_LOG_ERROR("TODO: cellSpursJobQueueGetError");
	case 0x36d0a53c: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePushJob2Body");
	case 0x3d1294fc: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePortInitialize");
	case 0x435bff07: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePort2GetJobQueue");
	case 0x43ddab4f: FUNC_LOG_ERROR("TODO: cellSpursJobQueueAttributeInitialize");
	case 0x46c3fb5a: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePortCopyPushBody");
	case 0x4e1a17a6: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePortPushBody");
	case 0x5659da82: FUNC_LOG_ERROR("TODO: cellSpursJobQueueGetMaxSizeJobDescriptor");
	case 0x5fb9b05d: FUNC_LOG_ERROR("TODO: cellSpursJobQueueAttributeSetMaxGrab");
	case 0x634b1502: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePortSync");
	case 0x677027af: FUNC_LOG_ERROR("TODO: cellSpursJobQueueSemaphoreInitialize");
	case 0x6c93ea18: FUNC_LOG_ERROR("TODO: cellSpursJobQueueSemaphoreAcquire");
	case 0x701fd8a9: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePushSync");
	case 0x742cec0d: FUNC_LOG_ERROR("TODO: cellSpursJobQueueAttributeSetIsJobTypeMemoryCheck");
	case 0x80a0264c: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePortTrySync");
	case 0x840c5239: FUNC_LOG_ERROR("TODO: cellSpursJobQueueGetHandleCount");
	case 0x85cd04cd: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePortPushJobBody");
	case 0x8c97a96c: FUNC_LOG_ERROR("TODO: cellSpursShutdownJobQueue");
	case 0x8ce4cffa: FUNC_LOG_ERROR("TODO: cellSpursJoinJobQueue");
	case 0x90c88f84: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePortGetJobQueue");
	case 0x90e392cf: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePortPushJobBody2");
	case 0x915455b3: FUNC_LOG_ERROR("TODO: cellSpursJobQueueSendSignal");
	case 0x93248b92: FUNC_LOG_ERROR("TODO: cellSpursJobQueueUnsetExceptionEventHandler");
	case 0x934abb00: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePort2AllocateJobDescriptor");
	case 0x9396be1d: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePortPushSync");
	case 0x97409f67: FUNC_LOG_ERROR("TODO: cellSpursJobQueueSemaphoreTryAcquire");
	case 0x98203e3c: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePushJobBody2");
	case 0x983be7fc: FUNC_LOG_ERROR("TODO: _cellSpursCreateJobQueueWithJobDescriptorPool");
	case 0x99316997: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePushBody");
	case 0x9c300489: FUNC_LOG_ERROR("TODO: cellSpursJobQueueSetExceptionEventHandler");
	case 0xaf1c7a1d: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePushJobListBody");
	case 0xb53436e7: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePort2PushJobListBody");
	case 0xbd1c5d6b: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePortPushFlush");
	case 0xbfea28ab: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePort2PushFlush");
	case 0xc343ee10: FUNC_LOG_ERROR("TODO: cellSpursGetJobQueueId");
	case 0xc39173a4: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePort2CopyPushJobBody");
	case 0xc4843b74: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePushJobBody");
	case 0xc485d207: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePort2Destroy");
	case 0xcf89f218: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePort2PushJobBody");
	case 0xdf0120c2: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePushFlush");
	case 0xe1731df3: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePort2PushAndReleaseJobBody");
	case 0xe70f874e: FUNC_LOG_ERROR("TODO: cellSpursJobQueueAttributeSetGrabParameters");
	case 0xef66c4b7: FUNC_LOG_ERROR("TODO: _cellSpursJobQueuePortCopyPushJobBody2");
	case 0xf11fe0f1: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePort2Create");
	case 0xf244e799: FUNC_LOG_ERROR("TODO: _cellSpursCreateJobQueue");
	case 0xf5de6363: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePortInitializeWithDescriptorBuffer");
	case 0xfacb3ced: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePort2Sync");
	case 0xfc526b72: FUNC_LOG_ERROR("TODO: cellSpursJobQueuePort2PushSync");
	case 0xff03cc79: FUNC_LOG_ERROR("TODO: cellSpursJobQueueAttributeSetIsHaltOnError");
	case 0xff7a7bd2: FUNC_LOG_ERROR("TODO: cellSpursJobQueueOpen");
	case 0x006c4900: FUNC_LOG_ERROR("TODO: cellSslCertGetNameEntryInfo");
	case 0x033c4905: FUNC_LOG_ERROR("TODO: cellSslCertGetRsaPublicKeyExponent");
	case 0x1650aea4: FUNC_LOG_ERROR("TODO: cellSslEnd");
	case 0x218b64da: FUNC_LOG_ERROR("TODO: cellSslCertGetNotAfter");
	case 0x31d9ba8d: FUNC_LOG_ERROR("TODO: cellSslCertGetNotBefore");
	case 0x32c61bdf: FUNC_LOG_ERROR("TODO: cellSslCertGetSubjectName");
	case 0x571afaca: FUNC_LOG_ERROR("TODO: cellSslCertificateLoader");
	case 0x5e9253ca: FUNC_LOG_ERROR("TODO: cellSslCertGetMd5Fingerprint");
	case 0x766d3ca1: FUNC_LOG_ERROR("TODO: cellSslCertGetNameEntryCount");
	case 0x7b689ebc: FUNC_LOG_ERROR("TODO: cellSslCertGetSerialNumber");
	case 0x8e505175: FUNC_LOG_ERROR("TODO: cellSslCertGetRsaPublicKeyModulus");
	case 0xae6eb491: FUNC_LOG_ERROR("TODO: cellSslCertGetIssuerName");
	case 0xf8206492: FUNC_LOG_ERROR("TODO: cellSslCertGetPublicKey");
	case 0xfb02c9d2: FUNC_LOG_ERROR("TODO: cellSslInit");
	case 0x5468d6b0: FUNC_LOG_ERROR("TODO: cellSubDisplayAudioOutNonBlocking");
	case 0x551d80a5: FUNC_LOG_ERROR("TODO: cellSubDisplayEnd");
	case 0x6595ce22: FUNC_LOG_ERROR("TODO: cellSubDisplayGetRequiredMemory");
	case 0x6d85ddb3: FUNC_LOG_ERROR("TODO: cellSubDisplayStop");
	case 0x8a264d71: FUNC_LOG_ERROR("TODO: cellSubDisplayGetPeerNum");
	case 0x938ac642: FUNC_LOG_ERROR("TODO: cellSubDisplayGetVideoBuffer");
	case 0xa5bccb47: FUNC_LOG_ERROR("TODO: cellSubDisplayStart");
	case 0xaee1e0c2: FUNC_LOG_ERROR("TODO: cellSubDisplayAudioOutBlocking");
	case 0xe2485f79: FUNC_LOG_ERROR("TODO: cellSubDisplayGetPeerList");
	case 0xf9a7e8a5: FUNC_LOG_ERROR("TODO: cellSubDisplayInit");
	case 0x07254fda: FUNC_LOG_ERROR("TODO: cellSyncBarrierInitialize");
	case 0x0c7cb9f7: FUNC_LOG_ERROR("TODO: cellSyncLFQueueGetEntrySize");
	case 0x167ea63e: FUNC_LOG_ERROR("TODO: cellSyncLFQueueSize");
	case 0x1bb675c2: FUNC_LOG_ERROR("TODO: cellSyncMutexLock");
	case 0x268edd6d: FUNC_LOG_ERROR("TODO: cellSyncBarrierTryNotify");
	case 0x2af0c515: FUNC_LOG_ERROR("TODO: cellSyncLFQueueClear");
	case 0x35bbdad2: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueCompletePushPointer2");
	case 0x35f21355: FUNC_LOG_ERROR("TODO: cellSyncBarrierWait");
	case 0x3929948d: FUNC_LOG_ERROR("TODO: cellSyncQueueInitialize");
	case 0x46356fe0: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueGetPopPointer2");
	case 0x48154c9b: FUNC_LOG_ERROR("TODO: cellSyncQueuePeek");
	case 0x4da349b2: FUNC_LOG_ERROR("TODO: cellSyncQueueSize");
	case 0x4da6d7e0: FUNC_LOG_ERROR("TODO: cellSyncQueuePop");
	case 0x4e88c68d: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueCompletePushPointer");
	case 0x54fc2032: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueAttachLv2EventQueue");
	case 0x5ae841e5: FUNC_LOG_ERROR("TODO: cellSyncQueuePush");
	case 0x68af923c: FUNC_LOG_ERROR("TODO: cellSyncQueueTryPeek");
	case 0x6bb4ef9d: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueGetPushPointer2");
	case 0x6c272124: FUNC_LOG_ERROR("TODO: cellSyncBarrierTryWait");
	case 0x705985cd: FUNC_LOG_ERROR("TODO: cellSyncQueueTryPush");
	case 0x74c37666: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueGetPopPointer");
	case 0x7a51deee: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueCompletePopPointer2");
	case 0x811d148e: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueDetachLv2EventQueue");
	case 0x91f2b7b0: FUNC_LOG_ERROR("TODO: cellSyncMutexUnlock");
	case 0xa5362e73: FUNC_LOG_ERROR("TODO: cellSyncQueueClear");
	case 0xa58df87f: FUNC_LOG_ERROR("TODO: cellSyncQueueTryPop");
	case 0xa6669751: FUNC_LOG_ERROR("TODO: cellSyncRwmTryRead");
	case 0xa9072dee: FUNC_LOG_ERROR("TODO: cellSyncMutexInitialize");
	case 0xaa355278: FUNC_LOG_ERROR("TODO: cellSyncLFQueueInitialize");
	case 0xaff7627a: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueGetSignalAddress");
	case 0xba5961ca: FUNC_LOG_ERROR("TODO: _cellSyncLFQueuePushBody");
	case 0xba5bee48: FUNC_LOG_ERROR("TODO: cellSyncRwmTryWrite");
	case 0xcece771f: FUNC_LOG_ERROR("TODO: cellSyncRwmRead");
	case 0xd06918c4: FUNC_LOG_ERROR("TODO: cellSyncMutexTryLock");
	case 0xd59aa307: FUNC_LOG_ERROR("TODO: cellSyncLFQueueGetDirection");
	case 0xe18c273c: FUNC_LOG_ERROR("TODO: cellSyncLFQueueDepth");
	case 0xe1bc7add: FUNC_LOG_ERROR("TODO: _cellSyncLFQueuePopBody");
	case 0xe9bf2110: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueGetPushPointer");
	case 0xed773f5f: FUNC_LOG_ERROR("TODO: cellSyncRwmWrite");
	case 0xf06a6415: FUNC_LOG_ERROR("TODO: cellSyncBarrierNotify");
	case 0xfc48b03f: FUNC_LOG_ERROR("TODO: cellSyncRwmInitialize");
	case 0xfe74e8e7: FUNC_LOG_ERROR("TODO: _cellSyncLFQueueCompletePopPointer");
	case 0x0080fe88: FUNC_LOG_ERROR("TODO: cellSync2MutexUnlock");
	case 0x0c2983ac: FUNC_LOG_ERROR("TODO: cellSync2SemaphoreRelease");
	case 0x0c9a0ea9: FUNC_LOG_ERROR("TODO: cellSync2QueueTryPop");
	case 0x12f0a27d: FUNC_LOG_ERROR("TODO: cellSync2QueueGetSize");
	case 0x164843a7: FUNC_LOG_ERROR("TODO: cellSync2SemaphoreFinalize");
	case 0x27f2d61c: FUNC_LOG_ERROR("TODO: cellSync2MutexFinalize");
	case 0x2d77fe17: FUNC_LOG_ERROR("TODO: _cellSync2SemaphoreAttributeInitialize");
	case 0x4e2ee031: FUNC_LOG_ERROR("TODO: cellSync2SemaphoreGetCount");
	case 0x55836e73: FUNC_LOG_ERROR("TODO: _cellSync2MutexAttributeInitialize");
	case 0x58be9a0f: FUNC_LOG_ERROR("TODO: cellSync2CondInitialize");
	case 0x5b1e4d7a: FUNC_LOG_ERROR("TODO: cellSync2CondEstimateBufferSize");
	case 0x5e00d433: FUNC_LOG_ERROR("TODO: _cellSync2QueueAttributeInitialize");
	case 0x5e4b0f87: FUNC_LOG_ERROR("TODO: cellSync2SemaphoreTryAcquire");
	case 0x63062249: FUNC_LOG_ERROR("TODO: cellSync2CondFinalize");
	case 0x6af85cdf: FUNC_LOG_ERROR("TODO: cellSync2QueueFinalize");
	case 0x74c2780f: FUNC_LOG_ERROR("TODO: cellSync2SemaphoreEstimateBufferSize");
	case 0x7d967d91: FUNC_LOG_ERROR("TODO: cellSync2QueuePush");
	case 0x7fd479fe: FUNC_LOG_ERROR("TODO: cellSync2QueueTryPush");
	case 0x871af804: FUNC_LOG_ERROR("TODO: cellSync2CondSignal");
	case 0x8aae07c2: FUNC_LOG_ERROR("TODO: cellSync2CondSignalAll");
	case 0xa400d82e: FUNC_LOG_ERROR("TODO: cellSync2MutexLock");
	case 0xa69c749c: FUNC_LOG_ERROR("TODO: cellSync2MutexTryLock");
	case 0xbc96d751: FUNC_LOG_ERROR("TODO: cellSync2CondWait");
	case 0xc08cc0f9: FUNC_LOG_ERROR("TODO: cellSync2QueueEstimateBufferSize");
	case 0xc5dee254: FUNC_LOG_ERROR("TODO: cellSync2SemaphoreInitialize");
	case 0xd1b0d146: FUNC_LOG_ERROR("TODO: cellSync2SemaphoreAcquire");
	case 0xd51bfae7: FUNC_LOG_ERROR("TODO: cellSync2MutexEstimateBufferSize");
	case 0xd83ab0c9: FUNC_LOG_ERROR("TODO: cellSync2QueuePop");
	case 0xdf3c532a: FUNC_LOG_ERROR("TODO: _cellSync2CondAttributeInitialize");
	case 0xeb81a467: FUNC_LOG_ERROR("TODO: cellSync2MutexInitialize");
	case 0xf0e1471c: FUNC_LOG_ERROR("TODO: cellSync2QueueGetDepth");
	case 0xf125e044: FUNC_LOG_ERROR("TODO: cellSync2QueueInitialize");
	case 0x08db2adf: FUNC_LOG_ERROR("TODO: cellSysconfBtGetDeviceList");
	case 0x112a5ee9: FUNC_LOG_ERROR("TODO: cellSysmoduleUnloadModule");
	case 0x1ef115ef: FUNC_LOG_ERROR("TODO: cellSysmoduleGetImagesize");
	case 0x32267a31: FUNC_LOG_ERROR("TODO: cellSysmoduleLoadModule");
	case 0x3c92be09: FUNC_LOG_ERROR("TODO: cellSysmoduleFetchImage");
	case 0x5a59e258: FUNC_LOG_ERROR("TODO: cellSysmoduleIsLoaded");
	case 0x63ff6ff9: FUNC_LOG_ERROR("TODO: cellSysmoduleInitialize");
	case 0x96c07adf: FUNC_LOG_ERROR("TODO: cellSysmoduleFinalize");
	case 0xa193143c: FUNC_LOG_ERROR("TODO: cellSysmoduleSetMemcontainer");
	case 0x018a1381: FUNC_LOG_ERROR("TODO: cellSysutilAvcSetLayoutMode");
	case 0x01f04d94: FUNC_LOG_ERROR("TODO: cellSysutilGamePowerOff_I");
	case 0x02ff3c1b: return cellSysutilUnregisterCallback(SC_ARGS_1); //FUNC_LOG_ERROR("TODO: cellSysutilUnregisterCallback");
	case 0x073b89d5: FUNC_LOG_ERROR("TODO: cellSysutilAvcGetSpeakerVolumeLevel");
	case 0x08269f37: FUNC_LOG_ERROR("TODO: cellSysutilAvcGetShowStatus");
	case 0x0bae8772: return cellVideoOutConfigure(SC_ARGS_4); //FUNC_LOG_ERROR("TODO: cellVideoOutConfigure");
	case 0x0c316b87: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigGetHeapSize2");
	case 0x0e091c36: FUNC_LOG_ERROR("TODO: cellSaveDataUserListAutoSave");
	case 0x0f03cfb0: FUNC_LOG_ERROR("TODO: cellSaveDataUserListSave");
	case 0x0f8a3b6b: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetMimeSet");
	case 0x10cabeff: FUNC_LOG_ERROR("TODO: cellWebBrowserGetUsrdataOnGameExit");
	case 0x15b0b0cd: return cellVideoOutGetConfiguration(SC_ARGS_3); //FUNC_LOG_ERROR("TODO: cellVideoOutGetConfiguration");
	case 0x15df71ed: FUNC_LOG_ERROR("TODO: cellSysutilAvcLoadAsync");
	case 0x17dbe8b3: FUNC_LOG_ERROR("TODO: cellSysutilAvcJoinRequest");
	case 0x189a74da: return cellSysutilCheckCallback(); //FUNC_LOG_ERROR("TODO: cellSysutilCheckCallback");
	case 0x1a91874b: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetFullScreen2");
	case 0x1d99c3ee: FUNC_LOG_ERROR("TODO: cellOskDialogGetInputText");
	case 0x1dfbfdd6: FUNC_LOG_ERROR("TODO: cellSaveDataListLoad2");
	case 0x1dfcce99: FUNC_LOG_ERROR("TODO: cellSysutilGameDataExit");
	case 0x1e7bff94: FUNC_LOG_ERROR("TODO: cellSysCacheMount");
	case 0x1e930eef: FUNC_LOG_ERROR("TODO: cellVideoOutGetDeviceInfo");
	case 0x1f6629e4: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetErrorHook2");
	case 0x20543730: FUNC_LOG_ERROR("TODO: cellMsgDialogClose");
	case 0x21425307: FUNC_LOG_ERROR("TODO: cellSaveDataListAutoLoad");
	case 0x21fc0c71: FUNC_LOG_ERROR("TODO: cellGameUnregisterDiscChangeCallback");
	case 0x220894e3: FUNC_LOG_ERROR("TODO: cellSysutilEnableBgmPlayback");
	case 0x24644561: FUNC_LOG_ERROR("TODO: cellWebBrowserWakeupWithGameExit");
	case 0x248bd1d8: FUNC_LOG_ERROR("TODO: cellSaveDataUserListAutoLoad");
	case 0x27ac51e4: FUNC_LOG_ERROR("TODO: cellStorageDataImportMove");
	case 0x2a8eada2: FUNC_LOG_ERROR("TODO: cellSaveDataFixedLoad2");
	case 0x2a95d8bc: FUNC_LOG_ERROR("TODO: cellSysutilGameExit_I");
	case 0x2aae9ef5: FUNC_LOG_ERROR("TODO: cellSaveDataFixedSave2");
	case 0x2beac488: FUNC_LOG_ERROR("TODO: cellAudioOutGetSoundAvailability2");
	case 0x2dbc92c7: FUNC_LOG_ERROR("TODO: cellSysutilAvcShowPanel");
	case 0x2de0d663: FUNC_LOG_ERROR("TODO: cellSaveDataListSave2");
	case 0x30d3d12b: FUNC_LOG_ERROR("TODO: cellSysutilGameReboot_I");
	case 0x3261a9c8: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetDisableTabs");
	case 0x35beade0: FUNC_LOG_ERROR("TODO: cellOskDialogGetSize");
	case 0x39dd8425: FUNC_LOG_ERROR("TODO: cellSaveDataUserListLoad");
	case 0x3d1e1931: FUNC_LOG_ERROR("TODO: cellOskDialogUnloadAsync");
	case 0x3dbd2314: FUNC_LOG_ERROR("TODO: cellSaveDataListSave");
	case 0x3e22cb4b: FUNC_LOG_ERROR("TODO: cellMsgDialogOpenErrorCode");
	case 0x4056c932: FUNC_LOG_ERROR("TODO: cellSysutilAvcSetVoiceMuting");
	case 0x40b34847: FUNC_LOG_ERROR("TODO: cellSaveDataUserFixedSave");
	case 0x40e895d3: FUNC_LOG_ERROR("TODO: cellSysutilGetSystemParamInt");
	case 0x41bc2ca1: FUNC_LOG_ERROR("TODO: cellSaveDataFixedSave");
	case 0x41f20828: FUNC_LOG_ERROR("TODO: cellOskDialogDisableDimmer");
	case 0x4692ab35: FUNC_LOG_ERROR("TODO: cellAudioOutConfigure");
	case 0x46a0285d: FUNC_LOG_ERROR("TODO: cellWebBrowserDeactivate");
	case 0x4b6e8560: FUNC_LOG_ERROR("TODO: cellWebBrowserCreateRenderWithRect2");
	case 0x4bdec82a: FUNC_LOG_ERROR("TODO: cellHddGameCheck2");
	case 0x4dd03a4e: FUNC_LOG_ERROR("TODO: cellSaveDataListAutoSave");
	case 0x50183b44: FUNC_LOG_ERROR("TODO: cellSaveDataFixedLoad");
	case 0x523a96c4: FUNC_LOG_ERROR("TODO: cellGameDataSetSystemVer");
	case 0x52aac4fa: FUNC_LOG_ERROR("TODO: cellSaveDataUserAutoSave");
	case 0x52d9457a: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetFullVersion2");
	case 0x53e39df3: FUNC_LOG_ERROR("TODO: cellOskDialogSetSeparateWindowOption");
	case 0x55e425c3: FUNC_LOG_ERROR("TODO: cellVideoOutGetConvertCursorColorInfo");
	case 0x58c89c4a: FUNC_LOG_ERROR("TODO: cellWebBrowserEstimate");
	case 0x5e91bc26: FUNC_LOG_ERROR("TODO: cellSysutilAvcEnumPlayers");
	case 0x5ee3bc26: FUNC_LOG_ERROR("TODO: cellSysutilAvcGetVoiceMuting");
	case 0x60a4daab: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetVersion");
	case 0x6144f033: FUNC_LOG_ERROR("TODO: cellWebComponentCreateAsync");
	case 0x619b1427: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetTabCount2");
	case 0x62b0f803: FUNC_LOG_ERROR("TODO: cellMsgDialogAbort");
	case 0x68bc4ff3: FUNC_LOG_ERROR("TODO: cellAudioOutRegisterCallback");
	case 0x6c1082aa: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigWithVer");
	case 0x6c673f78: FUNC_LOG_ERROR("TODO: cellSysutilAvcUnloadAsync");
	case 0x6cfd856f: FUNC_LOG_ERROR("TODO: cellSysutilGetBgmPlaybackStatus2");
	case 0x6d087930: FUNC_LOG_ERROR("TODO: cellWebBrowserEstimate2");
	case 0x6d7444e6: FUNC_LOG_ERROR("TODO: cellWebBrowserActivate");
	case 0x6dfff31d: FUNC_LOG_ERROR("TODO: cellWebBrowserSetSystemCallbackUsrdata");
	case 0x6e7264ed: FUNC_LOG_ERROR("TODO: cellSaveDataUserFixedLoad");
	case 0x71acb8d3: FUNC_LOG_ERROR("TODO: cellSysutilAvcSetVideoMuting");
	case 0x744c1544: FUNC_LOG_ERROR("TODO: cellSysCacheClear");
	case 0x749c9b5f: FUNC_LOG_ERROR("TODO: cellWebBrowserInitialize");
	case 0x75bbb672: return cellVideoOutGetNumberOfDevice(SC_ARGS_1); //FUNC_LOG_ERROR("TODO: cellVideoOutGetNumberOfDevice");
	case 0x7603d3db: return cellMsgDialogOpen2(SC_ARGS_5); //FUNC_LOG_ERROR("TODO: cellMsgDialogOpen2");
	case 0x7663e368: FUNC_LOG_ERROR("TODO: cellAudioOutGetDeviceInfo");
	case 0x76948bfc: FUNC_LOG_ERROR("TODO: cellSysconfAbort");
	case 0x76fc8fb1: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetHeapSize");
	case 0x7871bed4: FUNC_LOG_ERROR("TODO: cellVideoOutUnregisterCallback");
	case 0x7bc2c8a8: FUNC_LOG_ERROR("TODO: cellMsgDialogProgressBarReset");
	case 0x7d94ca36: FUNC_LOG_ERROR("TODO: cellSysutilAvcGetVideoMuting");
	case 0x7f21c918: FUNC_LOG_ERROR("TODO: cellOskDialogAddSupportLanguage");
	case 0x7f881be1: FUNC_LOG_ERROR("TODO: cellWebBrowserCreate");
	case 0x7f896a1f: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetCustomExit");
	case 0x7fb3c6a5: FUNC_LOG_ERROR("TODO: cellWebBrowserConfig2");
	case 0x7fcfc915: FUNC_LOG_ERROR("TODO: cellOskDialogLoadAsync");
	case 0x83668b8e: FUNC_LOG_ERROR("TODO: cellWebBrowserConfig");
	case 0x887572d5: return cellVideoOutGetState(SC_ARGS_3);//FUNC_LOG_ERROR("TODO: cellVideoOutGetState");
	case 0x8a4cb646: FUNC_LOG_ERROR("TODO: cellWebBrowserCreateWithConfig");
	case 0x8a5dbb58: FUNC_LOG_ERROR("TODO: cellWebComponentCreate");
	case 0x8b7ed64b: FUNC_LOG_ERROR("TODO: cellSaveDataAutoSave2");
	case 0x8b8a2f48: FUNC_LOG_ERROR("TODO: cellSaveDataUserFixedDelete");
	case 0x8e8bc444: FUNC_LOG_ERROR("TODO: cellVideoOutRegisterCallback");
	case 0x9117df20: FUNC_LOG_ERROR("TODO: cellHddGameCheck");
	case 0x918288fb: FUNC_LOG_ERROR("TODO: cellStorageDataImport");
	case 0x938013a0: FUNC_LOG_ERROR("TODO: cellSysutilGetSystemParamString");
	case 0x93c523c6: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetNotifyHook2");
	case 0x93ced48d: FUNC_LOG_ERROR("TODO: cellWebBrowserShutdown");
	case 0x94862702: FUNC_LOG_ERROR("TODO: cellMsgDialogProgressBarInc");
	case 0x9949bf82: FUNC_LOG_ERROR("TODO: cellGameDataExitBroken");
	case 0x9997e6b6: FUNC_LOG_ERROR("TODO: cellSysutilGameDataAssignVmc");
	case 0x9c9fe6a4: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetFunction");
	case 0x9ca9ffa7: FUNC_LOG_ERROR("TODO: cellHddGameSetSystemVer");
	case 0x9d6af72a: FUNC_LOG_ERROR("TODO: cellMsgDialogProgressBarSetMsg");
	case 0x9d98afa0: return cellSysutilRegisterCallback(SC_ARGS_3); //FUNC_LOG_ERROR("TODO: cellSysutilRegisterCallback");
	case 0x9dfdad46: FUNC_LOG_ERROR("TODO: cellAudioOutUnregisterCallback");
	case 0x9fb97b10: FUNC_LOG_ERROR("TODO: cellWebBrowserNavigate2");
	case 0xa11552f6: FUNC_LOG_ERROR("TODO: cellSysutilGetBgmPlaybackStatus");
	case 0xa322db75: return cellVideoOutGetResolutionAvailability(SC_ARGS_4); //FUNC_LOG_ERROR("TODO: cellVideoOutGetResolutionAvailability");
	case 0xa36335a5: FUNC_LOG_ERROR("TODO: cellSysutilDisableBgmPlaybackEx");
	case 0xa4dd11cc: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigGetHeapSize");
	case 0xa4ed7dfe: FUNC_LOG_ERROR("TODO: cellSaveDataDelete");
	case 0xa58943f8: FUNC_LOG_ERROR("TODO: cellWebBrowserCreateWithRect2");
	case 0xa5f12145: FUNC_LOG_ERROR("TODO: cellWebBrowserCreate2");
	case 0xa9a439e0: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetUnknownMIMETypeHook2");
	case 0xa9b0c1d9: FUNC_LOG_ERROR("TODO: cellGameDataGetSizeKB");
	case 0xa9b62ac8: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetViewRect2");
	case 0xabc3cd2c: FUNC_LOG_ERROR("TODO: cellStorageDataExport");
	case 0xac16777e: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetStatusHook2");
	case 0xac58ad2b: FUNC_LOG_ERROR("TODO: cellSysutilEnableBgmPlaybackEx");
	case 0xafd605b3: FUNC_LOG_ERROR("TODO: cellHddGameExitBroken");
	case 0xaffdadc0: FUNC_LOG_ERROR("TODO: cellSysutilAvcSetSpeakerVolumeLevel");
	case 0xb2b6cdd0: FUNC_LOG_ERROR("TODO: cellSysconfOpen");
	case 0xb53b3d42: FUNC_LOG_ERROR("TODO: cellWebBrowserCreateWithConfigFull");
	case 0xb53c54fa: FUNC_LOG_ERROR("TODO: cellOskDialogSetKeyLayoutOption");
	case 0xb6d84526: FUNC_LOG_ERROR("TODO: cellOskDialogAbort");
	case 0xb72bc4e6: FUNC_LOG_ERROR("TODO: cellDiscGameGetBootDiscInfo");
	case 0xbccd70dd: FUNC_LOG_ERROR("TODO: cellSysutilAvcCancelJoinRequest");
	case 0xbed85cb8: FUNC_LOG_ERROR("TODO: cellWebBrowserDestroy");
	case 0xc01b4e7c: FUNC_LOG_ERROR("TODO: cellAudioOutGetSoundAvailability");
	case 0xc22c79b5: FUNC_LOG_ERROR("TODO: cellSaveDataAutoLoad");
	case 0xc427890c: FUNC_LOG_ERROR("TODO: cellOskDialogSetInitialKeyLayout");
	case 0xc8971db5: FUNC_LOG_ERROR("TODO: cellWebBrowserSetLocalContentsAdditionalTitleID");
	case 0xc9645c41: FUNC_LOG_ERROR("TODO: cellGameDataCheckCreate2");
	case 0xc96e89e9: FUNC_LOG_ERROR("TODO: cellAudioOutSetCopyControl");
	case 0xcdc6aefd: FUNC_LOG_ERROR("TODO: cellSaveDataUserAutoLoad");
	case 0xced17573: FUNC_LOG_ERROR("TODO: cellSaveDataFixedDelete");
	case 0xcfdd8e87: FUNC_LOG_ERROR("TODO: cellSysutilDisableBgmPlayback");
	case 0xcfdf24bb: FUNC_LOG_ERROR("TODO: cellVideoOutDebugSetMonitorType");
	case 0xd3790a86: FUNC_LOG_ERROR("TODO: cellOskDialogSetDeviceMask");
	case 0xd7a617f5: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetViewCondition2");
	case 0xd9ea5709: FUNC_LOG_ERROR("TODO: cellSysutilAvcHidePanel");
	case 0xdce51399: FUNC_LOG_ERROR("TODO: cellWebComponentDestroy");
	case 0xdfdd302e: FUNC_LOG_ERROR("TODO: cellDiscGameRegisterDiscChangeCallback");
	case 0xe22ed55d: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetFunction2");
	case 0xe558748d: return cellVideoOutGetResolution(SC_ARGS_2); //FUNC_LOG_ERROR("TODO: cellVideoOutGetResolution");
	case 0xe5e2b09d: FUNC_LOG_ERROR("TODO: cellAudioOutGetNumberOfDevice");
	case 0xe7951dee: FUNC_LOG_ERROR("TODO: cellGameDataCheckCreate");
	case 0xe7fa820b: FUNC_LOG_ERROR("TODO: cellSaveDataEnableOverlay");
	case 0xe8dee79c: FUNC_LOG_ERROR("TODO: cellWebBrowserDestroy2");
	case 0xeb9d78d8: FUNC_LOG_ERROR("TODO: cellSysutilAvcGetLayoutMode");
	case 0xeca938ca: FUNC_LOG_ERROR("TODO: cellSysutilAvcSetAttribute");
	case 0xed5d96af: FUNC_LOG_ERROR("TODO: cellAudioOutGetConfiguration");
	case 0xedadd797: FUNC_LOG_ERROR("TODO: cellSaveDataDelete2");
	case 0xedc34e1a: FUNC_LOG_ERROR("TODO: cellDiscGameUnregisterDiscChangeCallback");
	case 0xee7528f3: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetRequestHook2");
	case 0xef5a353d: FUNC_LOG_ERROR("TODO: cellSaveDataListLoad");
	case 0xf0ec3ccc: FUNC_LOG_ERROR("TODO: cellOskDialogSetLayoutMode");
	case 0xf1a443e7: FUNC_LOG_ERROR("TODO: cellWebBrowserCreateRender2");
	case 0xf2c4a425: FUNC_LOG_ERROR("TODO: cellSysutilAvcByeRequest");
	case 0xf3b4b43e: FUNC_LOG_ERROR("TODO: cellOskDialogSetInitialInputDevice");
	case 0xf3dbf5a7: FUNC_LOG_ERROR("TODO: cellSysutilSetBgmPlaybackExtraParam");
	case 0xf481967f: FUNC_LOG_ERROR("TODO: cellSysutilAvcGetAttribute");
	case 0xf4aa8b27: FUNC_LOG_ERROR("TODO: cellSysutilAvcCancelByeRequest");
	case 0xf4e3caa0: FUNC_LOG_ERROR("TODO: cellAudioOutGetState");
	case 0xf8115d69: FUNC_LOG_ERROR("TODO: cellGameRegisterDiscChangeCallback");
	case 0xf81eca25: FUNC_LOG_ERROR("TODO: cellMsgDialogOpen");
	case 0xf82e2ef7: FUNC_LOG_ERROR("TODO: cellHddGameGetSizeKB");
	case 0xf8a175ec: FUNC_LOG_ERROR("TODO: cellSaveDataAutoSave");
	case 0xfbd5c856: FUNC_LOG_ERROR("TODO: cellSaveDataAutoLoad2");
	case 0xfe669845: FUNC_LOG_ERROR("TODO: cellWebBrowserConfigSetHeapSize2");
	case 0x3343824c: FUNC_LOG_ERROR("TODO: cellSysutilApOn");
	case 0x90c2bb19: FUNC_LOG_ERROR("TODO: cellSysutilApOff");
	case 0x9e67e0dd: FUNC_LOG_ERROR("TODO: cellSysutilApGetRequiredMemSize");
	case 0x02c5417a: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetPlayerInfo");
	case 0x02dc41ee: FUNC_LOG_ERROR("TODO: cellSysutilAvc2JoinChat");
	case 0x04e1e1e4: FUNC_LOG_ERROR("TODO: cellSysutilAvc2StopStreaming");
	case 0x07236c83: FUNC_LOG_ERROR("TODO: cellSysutilAvc2ChangeVideoResolution");
	case 0x0b45cd84: FUNC_LOG_ERROR("TODO: cellSysutilAvc2ShowScreen");
	case 0x0f5a2afb: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetVideoMuting");
	case 0x103d6b46: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetWindowAttribute");
	case 0x11f071cb: FUNC_LOG_ERROR("TODO: cellSysutilAvc2StopStreaming2");
	case 0x14937714: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetVoiceMuting");
	case 0x16ff9ba0: FUNC_LOG_ERROR("TODO: cellSysutilAvc2StartVoiceDetection");
	case 0x17481336: FUNC_LOG_ERROR("TODO: cellSysutilAvc2UnloadAsync");
	case 0x178982d9: FUNC_LOG_ERROR("TODO: cellSysutilAvc2StopVoiceDetection");
	case 0x1be2b4e0: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetAttribute");
	case 0x1d73ab8c: FUNC_LOG_ERROR("TODO: cellSysutilAvc2LoadAsync");
	case 0x207621a8: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetSpeakerVolumeLevel");
	case 0x225142bd: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetWindowString");
	case 0x2f280883: FUNC_LOG_ERROR("TODO: cellSysutilAvc2EstimateMemoryContainerSize");
	case 0x2fc0ab58: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetVideoMuting");
	case 0x31fc8b92: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetPlayerVoiceMuting");
	case 0x3447668a: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetStreamingTarget");
	case 0x38f33624: FUNC_LOG_ERROR("TODO: cellSysutilAvc2Unload");
	case 0x3a37e7f1: FUNC_LOG_ERROR("TODO: cellSysutilAvc2DestroyWindow");
	case 0x3c8c827c: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetWindowPosition");
	case 0x3ef4f668: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetSpeakerVolumeLevel");
	case 0x4c4b9665: FUNC_LOG_ERROR("TODO: cellSysutilAvc2IsCameraAttached");
	case 0x55d7bbfd: FUNC_LOG_ERROR("TODO: cellSysutilAvc2MicRead");
	case 0x5f3811f8: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetPlayerVoiceMuting");
	case 0x712d51d6: FUNC_LOG_ERROR("TODO: cellSysutilAvc2JoinChatRequest");
	case 0x74d22119: FUNC_LOG_ERROR("TODO: cellSysutilAvc2StartStreaming");
	case 0x7a69ecc1: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetWindowAttribute");
	case 0x82ced772: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetWindowShowStatus");
	case 0x89456724: FUNC_LOG_ERROR("TODO: cellSysutilAvc2InitParam");
	case 0x8a40a618: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetWindowSize");
	case 0x8c2f5be3: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetStreamPriority");
	case 0x97b2da6a: FUNC_LOG_ERROR("TODO: cellSysutilAvc2LeaveChatRequest");
	case 0xa26aa437: FUNC_LOG_ERROR("TODO: cellSysutilAvc2IsMicAttached");
	case 0xa8dc0efa: FUNC_LOG_ERROR("TODO: cellSysutilAvc2CreateWindow");
	case 0xa9f5b75c: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetSpeakerMuting");
	case 0xac170042: FUNC_LOG_ERROR("TODO: cellSysutilAvc2ShowWindow");
	case 0xaee75751: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetWindowSize");
	case 0xb81b9777: FUNC_LOG_ERROR("TODO: cellSysutilAvc2EnumPlayers");
	case 0xb856b63f: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetWindowString");
	case 0xbf022284: FUNC_LOG_ERROR("TODO: cellSysutilAvc2LeaveChat");
	case 0xc35ed665: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetSpeakerMuting");
	case 0xc6c93d62: FUNC_LOG_ERROR("TODO: cellSysutilAvc2Load");
	case 0xccf0aeff: FUNC_LOG_ERROR("TODO: cellSysutilAvc2SetAttribute");
	case 0xce6780c9: FUNC_LOG_ERROR("TODO: cellSysutilAvc2UnloadAsync2");
	case 0xd42657dd: FUNC_LOG_ERROR("TODO: cellSysutilAvc2StartStreaming2");
	case 0xd7d6272f: FUNC_LOG_ERROR("TODO: cellSysutilAvc2HideScreen");
	case 0xde6afc37: FUNC_LOG_ERROR("TODO: cellSysutilAvc2HideWindow");
	case 0xdf2ed367: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetVoiceMuting");
	case 0xe40e3dfc: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetScreenShowStatus");
	case 0xf3b5ff77: FUNC_LOG_ERROR("TODO: cellSysutilAvc2Unload2");
	case 0xfc2873a9: FUNC_LOG_ERROR("TODO: cellSysutilAvc2GetWindowPosition");
	case 0x1b6e8cd2: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtSetWindowRotation");
	case 0x22a36b23: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtGetWindowPosition");
	case 0x22ca0929: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtSetHideNamePlate");
	case 0x245ff230: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtSetWindowPosition");
	case 0x28f0dc04: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtGetWindowSize");
	case 0x2d9a1997: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtGetWindowShowStatus");
	case 0x326fab55: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtGetNamePlateShowStatus");
	case 0x332ee22c: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtSetWindowAlpha");
	case 0x40bc33c8: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtSetWindowSize");
	case 0x4466c0e2: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtShowPanelEx");
	case 0x51ccbe09: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtLoadAsyncEx");
	case 0x5a763d0e: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtSetShowNamePlate");
	case 0x5ba98e47: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtStopVoiceDetection");
	case 0x61b1cb18: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtShowWindow");
	case 0x683fe299: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtHidePanelEx");
	case 0x739c2f63: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtHideWindow");
	case 0x8ed310e5: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtGetWindowRotation");
	case 0xaed82c21: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtGetWindowAlpha");
	case 0xc851a4c0: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtStartVoiceDetection");
	case 0xcbe0c10a: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtGetSurfacePointer");
	case 0xd8685383: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtInitOptionParam");
	case 0xe8b1c18d: FUNC_LOG_ERROR("TODO: cellSysutilAvcExtSetWindowZorder");
	case 0x0bddef7d: FUNC_LOG_ERROR("TODO: cellAudioOutUnregisterDevice");
	case 0x18d0ada6: FUNC_LOG_ERROR("TODO: cellAudioOutGetDeviceInfo2");
	case 0x1cfa1a11: FUNC_LOG_ERROR("TODO: cellVideoOutSetXVColor");
	case 0x269ffedd: FUNC_LOG_ERROR("TODO: cellVideoOutSetupDisplay");
	case 0x3d5730ce: FUNC_LOG_ERROR("TODO: cellAudioInGetDeviceInfo");
	case 0x4ec8c141: FUNC_LOG_ERROR("TODO: cellVideoOutConvertCursorColor");
	case 0x655a0364: FUNC_LOG_ERROR("TODO: cellVideoOutGetGamma");
	case 0x65bf9ea3: FUNC_LOG_ERROR("TODO: cellAudioInGetAvailableDeviceInfo");
	case 0xc3273d9b: FUNC_LOG_ERROR("TODO: cellAudioOutGetAvailableDeviceInfo");
	case 0xc7020f62: FUNC_LOG_ERROR("TODO: cellVideoOutSetGamma");
	case 0xc7087631: FUNC_LOG_ERROR("TODO: cellAudioOutRegisterDevice");
	case 0xe4645af8: FUNC_LOG_ERROR("TODO: cellAudioOutSetDeviceMode");
	case 0xeb6c50fb: FUNC_LOG_ERROR("TODO: cellAudioInSetDeviceMode");
	case 0xeb6fcff1: FUNC_LOG_ERROR("TODO: cellAudioInRegisterDevice");
	case 0xfa6bcc17: FUNC_LOG_ERROR("TODO: cellAudioInUnregisterDevice");
	case 0xfaa275a4: FUNC_LOG_ERROR("TODO: cellVideoOutGetScreenSize");
	case 0x571dc686: FUNC_LOG_ERROR("TODO: cellSysutilGetLicenseArea");
	case 0x074dbb39: FUNC_LOG_ERROR("TODO: cellUsbdAllocateMemory");
	case 0x0f411262: FUNC_LOG_ERROR("TODO: cellUsbdInterruptTransfer");
	case 0x254289ac: FUNC_LOG_ERROR("TODO: cellUsbdOpenPipe");
	case 0x2fb08e1e: FUNC_LOG_ERROR("TODO: cellUsbdScanStaticDescriptor");
	case 0x359befba: FUNC_LOG_ERROR("TODO: cellUsbdRegisterLdd");
	case 0x35f22ac3: FUNC_LOG_ERROR("TODO: cellUsbdEnd");
	case 0x4e456e81: FUNC_LOG_ERROR("TODO: cellUsbdFreeMemory");
	case 0x5c832bd7: FUNC_LOG_ERROR("TODO: cellUsbdSetThreadPriority2");
	case 0x5de3af36: FUNC_LOG_ERROR("TODO: cellUsbdGetPrivateData");
	case 0x63bfdb97: FUNC_LOG_ERROR("TODO: cellUsbdSetPrivateData");
	case 0x64951ac7: FUNC_LOG_ERROR("TODO: cellUsbdUnregisterLdd");
	case 0x7a1b6eab: FUNC_LOG_ERROR("TODO: cellUsbdHSIsochronousTransfer");
	case 0x7fe92c54: FUNC_LOG_ERROR("TODO: cellUsbdRegisterExtraLdd");
	case 0x90460081: FUNC_LOG_ERROR("TODO: cellUsbdUnregisterExtraLdd");
	case 0x9763e962: FUNC_LOG_ERROR("TODO: cellUsbdClosePipe");
	case 0x97cf128e: FUNC_LOG_ERROR("TODO: cellUsbdControlTransfer");
	case 0xac77eb78: FUNC_LOG_ERROR("TODO: cellUsbdBulkTransfer");
	case 0xbd554bcb: FUNC_LOG_ERROR("TODO: cellUsbdRegisterExtraLdd2");
	case 0xbdbd2428: FUNC_LOG_ERROR("TODO: cellUsbdGetDeviceSpeed");
	case 0xc24af1d7: FUNC_LOG_ERROR("TODO: cellUsbdSetThreadPriority");
	case 0xd0e766fe: FUNC_LOG_ERROR("TODO: cellUsbdInit");
	case 0xd5263dea: FUNC_LOG_ERROR("TODO: cellUsbdGetThreadPriority");
	case 0xdb819e03: FUNC_LOG_ERROR("TODO: cellUsbdGetDeviceLocation");
	case 0xde58c4c2: FUNC_LOG_ERROR("TODO: cellUsbdIsochronousTransfer");
	case 0x01a4cde0: FUNC_LOG_ERROR("TODO: cellUsbPspcmPollBindAsync");
	case 0x02955295: FUNC_LOG_ERROR("TODO: cellUsbPspcmRecvAsync");
	case 0x0f7b3b6d: FUNC_LOG_ERROR("TODO: cellUsbPspcmEnd");
	case 0x17f42197: FUNC_LOG_ERROR("TODO: cellUsbPspcmBindAsync");
	case 0x3caddf6c: FUNC_LOG_ERROR("TODO: cellUsbPspcmWaitSendAsync");
	case 0x3f22403e: FUNC_LOG_ERROR("TODO: cellUsbPspcmPollResetAsync");
	case 0x461dc8cc: FUNC_LOG_ERROR("TODO: cellUsbPspcmWaitRecvAsync");
	case 0x4abe830e: FUNC_LOG_ERROR("TODO: cellUsbPspcmWaitBindAsync");
	case 0x4af23efa: FUNC_LOG_ERROR("TODO: cellUsbPspcmSendAsync");
	case 0x4ef182dd: FUNC_LOG_ERROR("TODO: cellUsbPspcmResetAsync");
	case 0x657fcd36: FUNC_LOG_ERROR("TODO: cellUsbPspcmInit");
	case 0x7277d7c3: FUNC_LOG_ERROR("TODO: cellUsbPspcmSend");
	case 0x7b249315: FUNC_LOG_ERROR("TODO: cellUsbPspcmPollRecvAsync");
	case 0x7f0a3eaf: FUNC_LOG_ERROR("TODO: cellUsbPspcmPollSendAsync");
	case 0x7ff72b42: FUNC_LOG_ERROR("TODO: cellUsbPspcmUnregister");
	case 0x816799dd: FUNC_LOG_ERROR("TODO: cellUsbPspcmPollData");
	case 0x97670a90: FUNC_LOG_ERROR("TODO: cellUsbPspcmGetAddr");
	case 0xa4a5ddb4: FUNC_LOG_ERROR("TODO: cellUsbPspcmCancelBind");
	case 0xabe090e3: FUNC_LOG_ERROR("TODO: cellUsbPspcmBind");
	case 0xdb864d11: FUNC_LOG_ERROR("TODO: cellUsbPspcmWaitData");
	case 0xe3fbf64d: FUNC_LOG_ERROR("TODO: cellUsbPspcmRegister");
	case 0xe68a65ac: FUNC_LOG_ERROR("TODO: cellUsbPspcmReset");
	case 0xe76e79ab: FUNC_LOG_ERROR("TODO: cellUsbPspcmCancelWaitData");
	case 0xe840f449: FUNC_LOG_ERROR("TODO: cellUsbPspcmWaitResetAsync");
	case 0xf20df7fc: FUNC_LOG_ERROR("TODO: cellUsbPspcmCalcPoolSize");
	case 0xf9883d3b: FUNC_LOG_ERROR("TODO: cellUsbPspcmRecv");
	case 0xfa07d320: FUNC_LOG_ERROR("TODO: cellUsbPspcmClose");
	case 0x2b761140: FUNC_LOG_ERROR("TODO: cellUserInfoGetStat");
	case 0x3097cc1c: FUNC_LOG_ERROR("TODO: cellUserInfoSelectUser_ListType");
	case 0x55123a25: FUNC_LOG_ERROR("TODO: cellUserInfoSelectUser_SetList");
	case 0xb3516536: FUNC_LOG_ERROR("TODO: cellUserInfoEnableOverlay");
	case 0xc55e338b: FUNC_LOG_ERROR("TODO: cellUserInfoGetList");
	case 0x1bb79ff4: FUNC_LOG_ERROR("TODO: cellVideoExportProgress");
	case 0x2f457571: FUNC_LOG_ERROR("TODO: cellVideoExportInitialize2");
	case 0x6a24cc70: FUNC_LOG_ERROR("TODO: cellVideoExportInitialize");
	case 0x81296524: FUNC_LOG_ERROR("TODO: cellVideoExportFromFile");
	case 0xc15be817: FUNC_LOG_ERROR("TODO: cellVideoExportFinalize");
	case 0x122e0d0f: FUNC_LOG_ERROR("TODO: cellVideoUploadInitialize");
	case 0x0a563878: FUNC_LOG_ERROR("TODO: cellVoiceStart");
	case 0x18d3df30: FUNC_LOG_ERROR("TODO: cellVoiceDisconnectIPortFromOPort");
	case 0x20bafe31: FUNC_LOG_ERROR("TODO: cellVoiceDebugTopology");
	case 0x2a01013e: FUNC_LOG_ERROR("TODO: cellVoiceCreateNotifyEventQueue");
	case 0x2de54871: FUNC_LOG_ERROR("TODO: cellVoiceCreatePort");
	case 0x2f24fea3: FUNC_LOG_ERROR("TODO: cellVoiceUpdatePort");
	case 0x30f0b5ab: FUNC_LOG_ERROR("TODO: cellVoiceWriteToIPortEx");
	case 0x35d84910: FUNC_LOG_ERROR("TODO: cellVoiceSetNotifyEventQueue");
	case 0x36472c57: FUNC_LOG_ERROR("TODO: cellVoiceReadFromOPort");
	case 0x3dad26e7: FUNC_LOG_ERROR("TODO: cellVoiceWriteToIPort");
	case 0x474609e2: FUNC_LOG_ERROR("TODO: cellVoiceGetMuteFlag");
	case 0x54ac3519: FUNC_LOG_ERROR("TODO: cellVoiceGetPortInfo");
	case 0x762dc193: FUNC_LOG_ERROR("TODO: cellVoiceGetVolume");
	case 0x7bf17b15: FUNC_LOG_ERROR("TODO: cellVoiceResumePort");
	case 0x7e60adc6: FUNC_LOG_ERROR("TODO: cellVoiceSetBitRate");
	case 0x7f3963f7: FUNC_LOG_ERROR("TODO: cellVoiceResumePortAll");
	case 0x87c71b06: FUNC_LOG_ERROR("TODO: cellVoicePausePort");
	case 0x94d51f92: FUNC_LOG_ERROR("TODO: cellVoiceStartEx");
	case 0x9d0f4af1: FUNC_LOG_ERROR("TODO: cellVoiceSetPortAttr");
	case 0x9f70c475: FUNC_LOG_ERROR("TODO: cellVoiceDeletePort");
	case 0xae6a21d5: FUNC_LOG_ERROR("TODO: cellVoiceConnectIPortToOPort");
	case 0xb1a2c38f: FUNC_LOG_ERROR("TODO: cellVoiceInitEx");
	case 0xbef53a2b: FUNC_LOG_ERROR("TODO: cellVoiceGetBitRate");
	case 0xc7cf1182: FUNC_LOG_ERROR("TODO: cellVoiceInit");
	case 0xd14e784d: FUNC_LOG_ERROR("TODO: cellVoicePausePortAll");
	case 0xd3a84be1: FUNC_LOG_ERROR("TODO: cellVoiceStop");
	case 0xd4d80ea5: FUNC_LOG_ERROR("TODO: cellVoiceSetMuteFlagAll");
	case 0xd5ae37d8: FUNC_LOG_ERROR("TODO: cellVoiceSetVolume");
	case 0xd6811aa7: FUNC_LOG_ERROR("TODO: cellVoiceGetSignalState");
	case 0xdd000886: FUNC_LOG_ERROR("TODO: cellVoiceRemoveNotifyEventQueue");
	case 0xdde35a0c: FUNC_LOG_ERROR("TODO: cellVoiceSetMuteFlag");
	case 0xe0e1ae12: FUNC_LOG_ERROR("TODO: cellVoiceEnd");
	case 0xf629ed67: FUNC_LOG_ERROR("TODO: cellVoiceGetPortAttr");
	case 0xff0fa43a: FUNC_LOG_ERROR("TODO: cellVoiceResetPort");
	case 0x10ef39f6: FUNC_LOG_ERROR("TODO: cellVpostClose");
	case 0x40524325: FUNC_LOG_ERROR("TODO: cellVpostOpenEx");
	case 0x95e788c3: FUNC_LOG_ERROR("TODO: cellVpostQueryAttr");
	case 0xabb8cc3d: FUNC_LOG_ERROR("TODO: cellVpostExec");
	case 0xcd33f3e2: FUNC_LOG_ERROR("TODO: cellVpostOpen");
	case 0x02eb41bb: FUNC_LOG_ERROR("TODO: cellGemGetEnvironmentLightingColor");
	case 0x0ecd2261: FUNC_LOG_ERROR("TODO: cellGemUpdateStart");
	case 0x13ea7c64: FUNC_LOG_ERROR("TODO: cellGemInit");
	case 0x18ea899a: FUNC_LOG_ERROR("TODO: cellGemGetTrackerHue");
	case 0x1a13d010: FUNC_LOG_ERROR("TODO: cellGemConvertVideoFinish");
	case 0x1a2518a2: FUNC_LOG_ERROR("TODO: cellGemEnableMagnetometer");
	case 0x1b30cc22: FUNC_LOG_ERROR("TODO: cellGemGetRGB");
	case 0x1f6328d8: FUNC_LOG_ERROR("TODO: cellGemWriteExternalPort");
	case 0x2d2c2764: FUNC_LOG_ERROR("TODO: cellGemGetAllTrackableHues");
	case 0x2e0a170d: FUNC_LOG_ERROR("TODO: cellGemGetMemorySize");
	case 0x41ae9c31: FUNC_LOG_ERROR("TODO: cellGemUpdateFinish");
	case 0x4219de31: FUNC_LOG_ERROR("TODO: cellGemEnableCameraPitchAngleCorrection");
	case 0x49609306: FUNC_LOG_ERROR("TODO: cellGemSetRumble");
	case 0x6441d38d: FUNC_LOG_ERROR("TODO: cellGemGetState");
	case 0x6a5b7048: FUNC_LOG_ERROR("TODO: cellGemGetAccelerometerPositionInDevice");
	case 0x6db6b007: FUNC_LOG_ERROR("TODO: cellGemGetRumble");
	case 0x6dce048c: FUNC_LOG_ERROR("TODO: cellGemConvertVideoStart");
	case 0x6fc4c791: FUNC_LOG_ERROR("TODO: cellGemFilterState");
	case 0x77e08704: FUNC_LOG_ERROR("TODO: cellGemSetYaw");
	case 0x8befac67: FUNC_LOG_ERROR("TODO: cellGemGetCameraState");
	case 0x928ac5f8: FUNC_LOG_ERROR("TODO: cellGemTrackHues");
	case 0x92cc4b34: FUNC_LOG_ERROR("TODO: cellGemGetImageState");
	case 0x9b9714a4: FUNC_LOG_ERROR("TODO: cellGemClearStatusFlags");
	case 0x9e1dff96: FUNC_LOG_ERROR("TODO: cellGemGetInfo");
	case 0xa03ef587: FUNC_LOG_ERROR("TODO: cellGemPrepareCamera");
	case 0xafa99ead: FUNC_LOG_ERROR("TODO: cellGemCalibrate");
	case 0xb8ef56a6: FUNC_LOG_ERROR("TODO: cellGemGetHuePixels");
	case 0xc07896f9: FUNC_LOG_ERROR("TODO: cellGemPrepareVideoConvert");
	case 0xc7622586: FUNC_LOG_ERROR("TODO: cellGemHSVtoRGB");
	case 0xce6d7791: FUNC_LOG_ERROR("TODO: cellGemForceRGB");
	case 0xd37b127a: FUNC_LOG_ERROR("TODO: cellGemGetInertialState");
	case 0xde54e2fc: FUNC_LOG_ERROR("TODO: cellGemReset");
	case 0xe1f85a80: FUNC_LOG_ERROR("TODO: cellGemEnd");
	case 0xe3e4f0d6: FUNC_LOG_ERROR("TODO: cellGemInvalidateCalibration");
	case 0xfb5887f9: FUNC_LOG_ERROR("TODO: cellGemIsTrackableHue");
	case 0xfee33481: FUNC_LOG_ERROR("TODO: cellGemGetStatusFlags");
	case 0x40ad67eb: FUNC_LOG_ERROR("TODO: cellMediatorCreateContext");
	case 0x4aecea24: FUNC_LOG_ERROR("TODO: cellMediatorGetSignatureLength");
	case 0x4d249136: FUNC_LOG_ERROR("TODO: cellMediatorGetUserInfo");
	case 0x5d4431f0: FUNC_LOG_ERROR("TODO: cellMediatorFlushCache");
	case 0x6b8f5cb9: FUNC_LOG_ERROR("TODO: cellMediatorSign");
	case 0x85dc6981: FUNC_LOG_ERROR("TODO: cellMediatorPostReports");
	case 0x9d11991d: FUNC_LOG_ERROR("TODO: cellMediatorGetProviderUrl");
	case 0xa14c6000: FUNC_LOG_ERROR("TODO: cellMediatorReliablePostReports");
	case 0xc324f60c: FUNC_LOG_ERROR("TODO: cellMediatorCloseContext");
	case 0xf7e4a50a: FUNC_LOG_ERROR("TODO: cellMediatorGetStatus");
	case 0x0053e2d8: FUNC_LOG_ERROR("TODO: cellVdecOpenEx");
	case 0x16698e83: FUNC_LOG_ERROR("TODO: cellVdecClose");
	case 0x17c702b9: FUNC_LOG_ERROR("TODO: cellVdecGetPicItem");
	case 0x2bf4ddd2: FUNC_LOG_ERROR("TODO: cellVdecDecodeAu");
	case 0x807c861a: FUNC_LOG_ERROR("TODO: cellVdecGetPicture");
	case 0x824433f0: FUNC_LOG_ERROR("TODO: cellVdecEndSeq");
	case 0xb6bbcd5d: FUNC_LOG_ERROR("TODO: cellVdecOpen");
	case 0xc757c2aa: FUNC_LOG_ERROR("TODO: cellVdecStartSeq");
	case 0xc982a84a: FUNC_LOG_ERROR("TODO: cellVdecQueryAttrEx");
	case 0xe13ef6fc: FUNC_LOG_ERROR("TODO: cellVdecSetFrameRate");
	case 0xff6f6ebe: FUNC_LOG_ERROR("TODO: cellVdecQueryAttr");
	case 0x000e53cc: FUNC_LOG_ERROR("TODO: sceNpManagerSubSignout");
	case 0x01cd9cfd: FUNC_LOG_ERROR("TODO: sceNpCommerceGetChildProductSkuInfo");
	case 0x01fbbc9b: FUNC_LOG_ERROR("TODO: sceNpBasicSendMessageGui");
	case 0x03c741a7: FUNC_LOG_ERROR("TODO: sceNpMatchingGetResult");
	case 0x04372385: FUNC_LOG_ERROR("TODO: sceNpBasicGetFriendListEntry");
	case 0x04ca5e6a: FUNC_LOG_ERROR("TODO: sceNpScoreRecordGameData");
	case 0x0561448b: FUNC_LOG_ERROR("TODO: sceNpCommerceGetDataFlagAbort");
	case 0x05af1cb8: FUNC_LOG_ERROR("TODO: sceNpBasicGetMatchingInvitationEntry");
	case 0x05d65dff: FUNC_LOG_ERROR("TODO: sceNpScoreGetRankingByNpId");
	case 0x0968aa36: FUNC_LOG_ERROR("TODO: sceNpManagerGetTicket");
	case 0x14497465: FUNC_LOG_ERROR("TODO: sceNpMatchingQuickMatchGUI");
	case 0x155de760: FUNC_LOG_ERROR("TODO: sceNpSignalingGetConnectionInfo");
	case 0x166dcc11: FUNC_LOG_ERROR("TODO: sceNpLookupNpId");
	case 0x1672170e: FUNC_LOG_ERROR("TODO: sceNpScoreRecordScore");
	case 0x168a3117: FUNC_LOG_ERROR("TODO: sceNpBasicAddPlayersHistory");
	case 0x168fcece: FUNC_LOG_ERROR("TODO: sceNpManagerGetAccountAge");
	case 0x16f88a6f: FUNC_LOG_ERROR("TODO: sceNpManagerGetPsHandle");
	case 0x1a2704f7: FUNC_LOG_ERROR("TODO: sceNpScoreWaitAsync");
	case 0x1a3fcb69: FUNC_LOG_ERROR("TODO: sceNpCommerceGetSkuUserData");
	case 0x1ae8a549: FUNC_LOG_ERROR("TODO: sceNpBasicAddBlockListEntry");
	case 0x1fdb3ec2: FUNC_LOG_ERROR("TODO: sceNpLookupUserProfileWithAvatarSizeAsync");
	case 0x21206642: FUNC_LOG_ERROR("TODO: sceNpScoreGetRankingByRangeAsync");
	case 0x227f8763: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansRankingByClanIdAsync");
	case 0x259113b8: FUNC_LOG_ERROR("TODO: sceNpScoreDestroyTitleCtx");
	case 0x260caedd: FUNC_LOG_ERROR("TODO: sceNpBasicGetFriendPresenceByNpId2");
	case 0x2687a127: FUNC_LOG_ERROR("TODO: sceNpSignalingGetCtxOpt");
	case 0x26b3bc94: FUNC_LOG_ERROR("TODO: sceNpMatchingGetResultGUI");
	case 0x26f33146: FUNC_LOG_ERROR("TODO: sceNpCommerceGetProductCategoryStart");
	case 0x2706eaa1: FUNC_LOG_ERROR("TODO: sceNpScoreSetPlayerCharacterId");
	case 0x276c72b2: FUNC_LOG_ERROR("TODO: sceNpSignalingSetCtxOpt");
	case 0x27c69eba: FUNC_LOG_ERROR("TODO: sceNpBasicAddFriend");
	case 0x29dd45dc: FUNC_LOG_ERROR("TODO: sceNpScoreSetTimeout");
	case 0x2a76895a: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansRankingByClanId");
	case 0x2ad7837d: FUNC_LOG_ERROR("TODO: sceNpMatchingAcceptInvitationGUI");
	case 0x2be41ece: FUNC_LOG_ERROR("TODO: sceNpCommerceGetNumOfChildCategory");
	case 0x2cd2a1af: FUNC_LOG_ERROR("TODO: sceNpScoreSanitizeCommentAsync");
	case 0x2e1c5068: FUNC_LOG_ERROR("TODO: sceNpMatchingDestroyCtx");
	case 0x2ecd48ed: FUNC_LOG_ERROR("TODO: sceNpDrmVerifyUpgradeLicense");
	case 0x2f2c6b3e: FUNC_LOG_ERROR("TODO: sceNpProfileAbortGui");
	case 0x2fccbfe0: FUNC_LOG_ERROR("TODO: sceNpLookupUserProfileWithAvatarSize");
	case 0x30d1cbde: FUNC_LOG_ERROR("TODO: sceNpBasicGetMessageEntry");
	case 0x32200389: FUNC_LOG_ERROR("TODO: sceNpManagerGetMyLanguages");
	case 0x32c78a6a: FUNC_LOG_ERROR("TODO: sceNpBasicGetFriendPresenceByIndex");
	case 0x32cf311f: FUNC_LOG_ERROR("TODO: sceNpScoreInit");
	case 0x32febb4c: FUNC_LOG_ERROR("TODO: sceNpMatchingSearchJoinRoomGUI");
	case 0x34cc0ca4: FUNC_LOG_ERROR("TODO: sceNpMatchingKickRoomMember");
	case 0x34ce82a0: FUNC_LOG_ERROR("TODO: sceNpSignalingGetConnectionFromPeerAddress");
	case 0x359642a6: FUNC_LOG_ERROR("TODO: sceNpCommerceGetCategoryDescription");
	case 0x36d0c2c5: FUNC_LOG_ERROR("TODO: sceNpManagerGetAvatarUrl");
	case 0x39a69619: FUNC_LOG_ERROR("TODO: sceNpCommerceGetSkuId");
	case 0x3b02418d: FUNC_LOG_ERROR("TODO: sceNpScoreGetGameData");
	case 0x3cc8588a: FUNC_LOG_ERROR("TODO: sceNpMatchingCreateRoomGUI");
	case 0x3d1760dc: FUNC_LOG_ERROR("TODO: sceNpLookupAbortTransaction");
	case 0x3db7914d: FUNC_LOG_ERROR("TODO: sceNpScoreGetRankingByNpIdAsync");
	case 0x3f0808aa: FUNC_LOG_ERROR("TODO: sceNpBasicSetPresence");
	case 0x3f195b3a: FUNC_LOG_ERROR("TODO: sceNpCommerceGetProductCategoryResult");
	case 0x4026eac5: FUNC_LOG_ERROR("TODO: sceNpBasicRegisterContextSensitiveHandler");
	case 0x41ffd4f2: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansMembersRankingByNpIdPcId");
	case 0x433fcb30: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansMembersRankingByNpIdPcIdAsync");
	case 0x43b989f5: FUNC_LOG_ERROR("TODO: sceNpBasicSendMessageAttachment");
	case 0x442381f7: FUNC_LOG_ERROR("TODO: sceNpManagerSubSignin");
	case 0x45f8f3aa: FUNC_LOG_ERROR("TODO: sceNpCustomMenuRegisterActions");
	case 0x474b7b13: FUNC_LOG_ERROR("TODO: sceNpMatchingJoinRoomGUI");
	case 0x481ce0e8: FUNC_LOG_ERROR("TODO: sceNpBasicAbortGui");
	case 0x4885aa18: FUNC_LOG_ERROR("TODO: sceNpTerm");
	case 0x4a18a89e: FUNC_LOG_ERROR("TODO: sceNpMatchingSetRoomInfoNoLimit");
	case 0x4b9efb7a: FUNC_LOG_ERROR("TODO: sceNpManagerGetCachedInfo");
	case 0x4d5e0670: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansMembersRankingByRangeAsync");
	case 0x4d9c615d: FUNC_LOG_ERROR("TODO: sceNpBasicGetClanMessageEntry");
	case 0x50b86d94: FUNC_LOG_ERROR("TODO: sceNpSignalingAddExtendedHandler");
	case 0x52a6b523: FUNC_LOG_ERROR("TODO: sceNpManagerUnregisterCallback");
	case 0x58fa4fcd: FUNC_LOG_ERROR("TODO: sceNpManagerGetTicketParam");
	case 0x5d543bbe: FUNC_LOG_ERROR("TODO: sceNpBasicGetMessageAttachmentEntry");
	case 0x5de61626: FUNC_LOG_ERROR("TODO: sceNpLookupDestroyTitleCtx");
	case 0x5e117ed5: FUNC_LOG_ERROR("TODO: sceNpLookupTitleStorageAsync");
	case 0x5e849303: FUNC_LOG_ERROR("TODO: sceNpBasicSetPresenceDetails2");
	case 0x5f2d9257: FUNC_LOG_ERROR("TODO: sceNpLookupInit");
	case 0x60440c73: FUNC_LOG_ERROR("TODO: sceNpManagerSubSigninAbortGui");
	case 0x60897c38: FUNC_LOG_ERROR("TODO: sceNpSignalingActivateConnection");
	case 0x6356082e: FUNC_LOG_ERROR("TODO: sceNpSignalingCreateCtx");
	case 0x6453b27b: FUNC_LOG_ERROR("TODO: sceNpBasicGetFriendPresenceByIndex2");
	case 0x64a704cc: FUNC_LOG_ERROR("TODO: sceNpBasicRecvMessageAttachmentLoad");
	case 0x64dbb89d: FUNC_LOG_ERROR("TODO: sceNpSignalingCancelPeerNetInfo");
	case 0x674bb9ff: FUNC_LOG_ERROR("TODO: sceNpCommerceGetProductCategoryAbort");
	case 0x691f429d: FUNC_LOG_ERROR("TODO: sceNpMatchingGetRoomInfo");
	case 0x6cb81eb2: FUNC_LOG_ERROR("TODO: sceNpCommerceDestroyProductCategory");
	case 0x6d4adc3b: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansMembersRankingByRange");
	case 0x6e2ab18b: FUNC_LOG_ERROR("TODO: sceNpCommerceGetCategoryName");
	case 0x6ee62ed2: FUNC_LOG_ERROR("TODO: sceNpManagerGetContentRatingFlag");
	case 0x6f5e8143: FUNC_LOG_ERROR("TODO: sceNpScoreCreateTransactionCtx");
	case 0x6f8fd267: FUNC_LOG_ERROR("TODO: sceNpMatchingSetRoomInfo");
	case 0x71e5af7e: FUNC_LOG_ERROR("TODO: sceNpLookupSetTimeout");
	case 0x7208dc08: FUNC_LOG_ERROR("TODO: sceNpCommerceGetNumOfChildProductSku");
	case 0x73931bd0: FUNC_LOG_ERROR("TODO: sceNpBasicGetBlockListEntryCount");
	case 0x73a2e36b: FUNC_LOG_ERROR("TODO: sceNpMatchingGetRoomMemberListLocal");
	case 0x741fbf24: FUNC_LOG_ERROR("TODO: sceNpScoreGetClanMemberGameData");
	case 0x7508112e: FUNC_LOG_ERROR("TODO: sceNpLookupPollAsync");
	case 0x75eb50cb: FUNC_LOG_ERROR("TODO: sceNpSignalingGetPeerNetInfo");
	case 0x78d7f9ad: FUNC_LOG_ERROR("TODO: sceNpCommerceGetSkuPrice");
	case 0x79225aa3: FUNC_LOG_ERROR("TODO: sceNpCommerceGetCurrencyCode");
	case 0x7b7e9137: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansRankingByRangeAsync");
	case 0x7be47e61: FUNC_LOG_ERROR("TODO: sceNpScoreCensorCommentAsync");
	case 0x7deb244c: FUNC_LOG_ERROR("TODO: sceNpScoreCensorComment");
	case 0x7e2fef28: FUNC_LOG_ERROR("TODO: sceNpManagerRequestTicket");
	case 0x806960ab: FUNC_LOG_ERROR("TODO: sceNpBasicRecvMessageCustom");
	case 0x816c6a5f: FUNC_LOG_ERROR("TODO: _sceNpSysutilClientFree");
	case 0x8297f1ec: FUNC_LOG_ERROR("TODO: sceNpManagerRequestTicket2");
	case 0x8440537c: FUNC_LOG_ERROR("TODO: sceNpLookupTerm");
	case 0x860b1756: FUNC_LOG_ERROR("TODO: sceNpLookupTitleSmallStorageAsync");
	case 0x8b7bbd73: FUNC_LOG_ERROR("TODO: sceNpMatchingSendInvitationGUI");
	case 0x8d1d096c: FUNC_LOG_ERROR("TODO: sceNpCommerceInitProductCategory");
	case 0x8d4518a0: FUNC_LOG_ERROR("TODO: sceNpCommerceSetDataFlagFinish");
	case 0x9153bdf4: FUNC_LOG_ERROR("TODO: sceNpBasicGetMessageAttachmentEntryCount");
	case 0x9281e87a: FUNC_LOG_ERROR("TODO: sceNpCommerceGetDataFlagFinish");
	case 0x936df4aa: FUNC_LOG_ERROR("TODO: sceNpCommerceGetProductId");
	case 0x9452f4f8: FUNC_LOG_ERROR("TODO: sceNpCommerceGetCategoryImageURL");
	case 0x9458f464: FUNC_LOG_ERROR("TODO: sceNpCustomMenuRegisterExceptionList");
	case 0x95c7bba3: FUNC_LOG_ERROR("TODO: sceNpSignalingTerminateConnection");
	case 0x9851f805: FUNC_LOG_ERROR("TODO: sceNpScoreTerm");
	case 0x99ac9952: FUNC_LOG_ERROR("TODO: sceNpCommerceSetDataFlagStart");
	case 0x9ad7fbd1: FUNC_LOG_ERROR("TODO: sceNpSignalingGetLocalNetInfo");
	case 0x9ee9f97e: FUNC_LOG_ERROR("TODO: sceNpLookupTitleStorage");
	case 0xa15f35fe: FUNC_LOG_ERROR("TODO: sceNpBasicGetPlayersHistoryEntryCount");
	case 0xa1709abd: FUNC_LOG_ERROR("TODO: sceNpManagerGetEntitlementById");
	case 0xa284bd1d: FUNC_LOG_ERROR("TODO: sceNpMatchingSetRoomSearchFlag");
	case 0xa7a090e5: FUNC_LOG_ERROR("TODO: sceNpScorePollAsync");
	case 0xa7bff757: FUNC_LOG_ERROR("TODO: sceNpManagerGetStatus");
	case 0xa85a4951: FUNC_LOG_ERROR("TODO: sceNpCommerceGetSkuDescription");
	case 0xa8afa7d4: FUNC_LOG_ERROR("TODO: sceNpBasicGetCustomInvitationEntryCount");
	case 0xa8cf8451: FUNC_LOG_ERROR("TODO: sceNpSignalingDestroyCtx");
	case 0xaa16695f: FUNC_LOG_ERROR("TODO: sceNpDrmProcessExitSpawn");
	case 0xac66568c: FUNC_LOG_ERROR("TODO: sceNpMatchingCreateCtx");
	case 0xacb9ee8e: FUNC_LOG_ERROR("TODO: sceNpBasicUnregisterHandler");
	case 0xad218faf: FUNC_LOG_ERROR("TODO: sceNpDrmIsAvailable");
	case 0xaee8cf71: FUNC_LOG_ERROR("TODO: sceNpCommerceGetCategoryId");
	case 0xaf3eba5a: FUNC_LOG_ERROR("TODO: sceNpCommerceDoCheckoutFinishAsync");
	case 0xaf505def: FUNC_LOG_ERROR("TODO: sceNpBasicGetMatchingInvitationEntryCount");
	case 0xaf57d9c9: FUNC_LOG_ERROR("TODO: sceNpCommerceGetCurrencyDecimals");
	case 0xafef640d: FUNC_LOG_ERROR("TODO: sceNpBasicGetFriendListEntryCount");
	case 0xb020684e: FUNC_LOG_ERROR("TODO: sceNpMatchingGetRoomInfoNoLimit");
	case 0xb082003b: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansRankingByRange");
	case 0xb1c02d66: FUNC_LOG_ERROR("TODO: sceNpCommerceGetCurrencyInfo");
	case 0xb1e0718b: FUNC_LOG_ERROR("TODO: sceNpManagerGetAccountRegion");
	case 0xb5cb2d56: FUNC_LOG_ERROR("TODO: sceNpBasicRecvMessageAttachment");
	case 0xb6017827: FUNC_LOG_ERROR("TODO: sceNpLookupAvatarImage");
	case 0xb66d1c46: FUNC_LOG_ERROR("TODO: sceNpManagerGetEntitlementIdList");
	case 0xb9f93bbb: FUNC_LOG_ERROR("TODO: sceNpScoreCreateTitleCtx");
	case 0xba65de6d: FUNC_LOG_ERROR("TODO: sceNpCommerceGetChildCategoryInfo");
	case 0xbab91fc9: FUNC_LOG_ERROR("TODO: sceNpBasicGetPlayersHistoryEntry");
	case 0xbcc09fe7: FUNC_LOG_ERROR("TODO: sceNpBasicRegisterHandler");
	case 0xbcdbb2ab: FUNC_LOG_ERROR("TODO: sceNpBasicAddPlayersHistoryAsync");
	case 0xbd28fdbf: FUNC_LOG_ERROR("TODO: sceNpInit");
	case 0xbdc07fd5: FUNC_LOG_ERROR("TODO: sceNpManagerGetNetworkTime");
	case 0xbe07c708: FUNC_LOG_ERROR("TODO: sceNpManagerGetOnlineId");
	case 0xbe0e3ee2: FUNC_LOG_ERROR("TODO: sceNpDrmVerifyUpgradeLicense2");
	case 0xbe81c71c: FUNC_LOG_ERROR("TODO: sceNpBasicSetPresenceDetails");
	case 0xbef887e5: FUNC_LOG_ERROR("TODO: sceNpScoreGetClanMemberGameDataAsync");
	case 0xbf607ec6: FUNC_LOG_ERROR("TODO: sceNpBasicGetClanMessageEntryCount");
	case 0xbf9eea93: FUNC_LOG_ERROR("TODO: sceNpLookupAvatarImageAsync");
	case 0xc3a991ee: FUNC_LOG_ERROR("TODO: sceNpScoreGetRankingByNpIdPcId");
	case 0xc4b6cd8f: FUNC_LOG_ERROR("TODO: sceNpScoreGetRankingByNpIdPcIdAsync");
	case 0xc5f4cf82: FUNC_LOG_ERROR("TODO: sceNpScoreDestroyTransactionCtx");
	case 0xca0a2d04: FUNC_LOG_ERROR("TODO: sceNpSignalingGetConnectionStatus");
	case 0xca39c4b2: FUNC_LOG_ERROR("TODO: sceNpLookupTitleSmallStorage");
	case 0xccbe2e69: FUNC_LOG_ERROR("TODO: sceNpCommerceGetSkuImageURL");
	case 0xce81c7f0: FUNC_LOG_ERROR("TODO: sceNpLookupCreateTitleCtx");
	case 0xceeebc7a: FUNC_LOG_ERROR("TODO: sceNpProfileCallGui");
	case 0xcf51864b: FUNC_LOG_ERROR("TODO: sceNpDrmGetTimelimit");
	case 0xcfd469e4: FUNC_LOG_ERROR("TODO: sceNpCommerceGetProductCategoryFinish");
	case 0xd03cea35: FUNC_LOG_ERROR("TODO: sceNpCommerceGetDataFlagState");
	case 0xd053f113: FUNC_LOG_ERROR("TODO: sceNpBasicGetCustomInvitationEntry");
	case 0xd0958814: FUNC_LOG_ERROR("TODO: sceNpSignalingGetPeerNetInfoResult");
	case 0xd12e40ae: FUNC_LOG_ERROR("TODO: sceNpLookupNpIdAsync");
	case 0xd208f91d: FUNC_LOG_ERROR("TODO: sceNpUtilCmpNpId");
	case 0xd20d7798: FUNC_LOG_ERROR("TODO: sceNpMatchingKickRoomMemberWithOpt");
	case 0xd737fd2d: FUNC_LOG_ERROR("TODO: sceNpLookupWaitAsync");
	case 0xd7fb1fa6: FUNC_LOG_ERROR("TODO: sceNpFriendlistCustom");
	case 0xdae2d351: FUNC_LOG_ERROR("TODO: sceNpMatchingGrantOwnership");
	case 0xdb2e4dc2: FUNC_LOG_ERROR("TODO: sceNpScoreGetGameDataAsync");
	case 0xdbdb909f: FUNC_LOG_ERROR("TODO: sceNpCommerceGetDataFlagStart");
	case 0xddce7d15: FUNC_LOG_ERROR("TODO: sceNpScoreGetBoardInfoAsync");
	case 0xded17c26: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansMembersRankingByNpId");
	case 0xdfd63b62: FUNC_LOG_ERROR("TODO: sceNpLookupUserProfile");
	case 0xe035f7d6: FUNC_LOG_ERROR("TODO: sceNpBasicGetEvent");
	case 0xe1c9f675: FUNC_LOG_ERROR("TODO: sceNpBasicMarkMessageAsUsed");
	case 0xe24eea19: FUNC_LOG_ERROR("TODO: sceNpMatchingGetRoomListLimitGUI");
	case 0xe2877bea: FUNC_LOG_ERROR("TODO: sceNpCommerceDestroyCtx");
	case 0xe36c660e: FUNC_LOG_ERROR("TODO: sceNpCommerceDoCheckoutStartAsync");
	case 0xe6c8f3f9: FUNC_LOG_ERROR("TODO: sceNpDrmProcessExitSpawn2");
	case 0xe7dcd3b4: FUNC_LOG_ERROR("TODO: sceNpManagerRegisterCallback");
	case 0xe853d388: FUNC_LOG_ERROR("TODO: sceNpSignalingGetConnectionFromNpId");
	case 0xe8a67160: FUNC_LOG_ERROR("TODO: sceNpScoreGetClansMembersRankingByNpIdAsync");
	case 0xea2e9ffc: FUNC_LOG_ERROR("TODO: sceNpLookupCreateTransactionCtx");
	case 0xeb5f2544: FUNC_LOG_ERROR("TODO: sceNpCommerceGetProductName");
	case 0xeb7a3d84: FUNC_LOG_ERROR("TODO: sceNpManagerGetChatRestrictionFlag");
	case 0xeb9df054: FUNC_LOG_ERROR("TODO: sceNpCommerceGetCategoryInfo");
	case 0xec0a1fbf: FUNC_LOG_ERROR("TODO: sceNpBasicSendMessage");
	case 0xecd503de: FUNC_LOG_ERROR("TODO: sceNpBasicGetMessageEntryCount");
	case 0xee0cc40c: FUNC_LOG_ERROR("TODO: _sceNpSysutilClientMalloc");
	case 0xee530059: FUNC_LOG_ERROR("TODO: sceNpCommerceGetSkuName");
	case 0xee5b20d9: FUNC_LOG_ERROR("TODO: sceNpScoreAbortTransaction");
	case 0xee64cf8e: FUNC_LOG_ERROR("TODO: sceNpMatchingGetRoomSearchFlag");
	case 0xf042b14f: FUNC_LOG_ERROR("TODO: sceNpDrmIsAvailable2");
	case 0xf0a9182b: FUNC_LOG_ERROR("TODO: sceNpFriendlist");
	case 0xf0b1e399: FUNC_LOG_ERROR("TODO: sceNpScoreRecordScoreAsync");
	case 0xf1b77918: FUNC_LOG_ERROR("TODO: sceNpScoreSanitizeComment");
	case 0xf283c143: FUNC_LOG_ERROR("TODO: sceNpDrmExecuteGamePurchase");
	case 0xf2b3338a: FUNC_LOG_ERROR("TODO: sceNpBasicGetBlockListEntry");
	case 0xf42c0df8: FUNC_LOG_ERROR("TODO: sceNpManagerGetOnlineName");
	case 0xf4e0f607: FUNC_LOG_ERROR("TODO: sceNpScoreGetBoardInfo");
	case 0xf59e1da8: FUNC_LOG_ERROR("TODO: sceNpFriendlistAbortGui");
	case 0xf5ff5f31: FUNC_LOG_ERROR("TODO: sceNpUtilCmpNpIdInOrder");
	case 0xf76847c2: FUNC_LOG_ERROR("TODO: sceNpScoreRecordGameDataAsync");
	case 0xf806c54c: FUNC_LOG_ERROR("TODO: sceNpMatchingLeaveRoom");
	case 0xf9732ac8: FUNC_LOG_ERROR("TODO: sceNpCustomMenuActionSetActivation");
	case 0xfb87cf5e: FUNC_LOG_ERROR("TODO: sceNpLookupDestroyTransactionCtx");
	case 0xfbc82301: FUNC_LOG_ERROR("TODO: sceNpScoreGetRankingByRange");
	case 0xfcac355a: FUNC_LOG_ERROR("TODO: sceNpCommerceCreateCtx");
	case 0xfd0eb5ae: FUNC_LOG_ERROR("TODO: sceNpSignalingDeactivateConnection");
	case 0xfd39ae13: FUNC_LOG_ERROR("TODO: sceNpBasicGetFriendPresenceByNpId");
	case 0xfe37a7f4: FUNC_LOG_ERROR("TODO: sceNpManagerGetNpId");
	case 0xff0a2378: FUNC_LOG_ERROR("TODO: sceNpLookupUserProfileAsync");
	case 0x01379fd7: FUNC_LOG_ERROR("TODO: sceNpMatching2DestroyContext");
	case 0x02065e3d: FUNC_LOG_ERROR("TODO: sceNpMatching2LeaveLobby");
	case 0x03a2f42a: FUNC_LOG_ERROR("TODO: sceNpMatching2RegisterLobbyMessageCallback");
	case 0x05bf2fbd: FUNC_LOG_ERROR("TODO: sceNpMatching2GetWorldInfoList");
	case 0x0884fc95: FUNC_LOG_ERROR("TODO: sceNpMatching2RegisterLobbyEventCallback");
	case 0x0b2218a3: FUNC_LOG_ERROR("TODO: sceNpMatching2GetLobbyMemberDataInternalList");
	case 0x0d22867f: FUNC_LOG_ERROR("TODO: sceNpMatching2SearchRoom");
	case 0x0ebe4c6b: FUNC_LOG_ERROR("TODO: sceNpMatching2SignalingGetConnectionStatus");
	case 0x1022e6d6: FUNC_LOG_ERROR("TODO: sceNpMatching2SetUserInfo");
	case 0x12034412: FUNC_LOG_ERROR("TODO: sceNpMatching2GetClanLobbyId");
	case 0x129663d0: FUNC_LOG_ERROR("TODO: sceNpMatching2GetLobbyMemberDataInternal");
	case 0x12d0b0f9: FUNC_LOG_ERROR("TODO: sceNpMatching2ContextStart");
	case 0x16b3e5a4: FUNC_LOG_ERROR("TODO: sceNpMatching2CreateServerContext");
	case 0x196a06f9: FUNC_LOG_ERROR("TODO: sceNpMatching2GetMemoryInfo");
	case 0x1f372697: FUNC_LOG_ERROR("TODO: sceNpMatching2LeaveRoom");
	case 0x215b0d75: FUNC_LOG_ERROR("TODO: sceNpMatching2SetRoomDataExternal");
	case 0x23009d07: FUNC_LOG_ERROR("TODO: sceNpMatching2Term2");
	case 0x26ae9ff8: FUNC_LOG_ERROR("TODO: sceNpMatching2SignalingGetConnectionInfo");
	case 0x28cad8b3: FUNC_LOG_ERROR("TODO: sceNpMatching2SendRoomMessage");
	case 0x29e78389: FUNC_LOG_ERROR("TODO: sceNpMatching2JoinLobby");
	case 0x2c5b7fc9: FUNC_LOG_ERROR("TODO: sceNpMatching2GetRoomMemberDataExternalList");
	case 0x2ed909dc: FUNC_LOG_ERROR("TODO: sceNpMatching2AbortRequest");
	case 0x2fe0da7d: FUNC_LOG_ERROR("TODO: sceNpMatching2Term");
	case 0x3457c0db: FUNC_LOG_ERROR("TODO: sceNpMatching2GetServerInfo");
	case 0x3c00c9d4: FUNC_LOG_ERROR("TODO: sceNpMatching2GetEventData");
	case 0x3cc27344: FUNC_LOG_ERROR("TODO: sceNpMatching2GetRoomSlotInfoLocal");
	case 0x3f3bd413: FUNC_LOG_ERROR("TODO: sceNpMatching2SendLobbyChatMessage");
	case 0x3f62c759: FUNC_LOG_ERROR("TODO: sceNpMatching2Init");
	case 0x41251f74: FUNC_LOG_ERROR("TODO: sceNp2Init");
	case 0x430ce063: FUNC_LOG_ERROR("TODO: sceNpMatching2AbortContextStart");
	case 0x490124fd: FUNC_LOG_ERROR("TODO: sceNpMatching2GetRoomMemberIdListLocal");
	case 0x5721e711: FUNC_LOG_ERROR("TODO: sceNpMatching2JoinRoom");
	case 0x58a04247: FUNC_LOG_ERROR("TODO: sceNpMatching2GetRoomMemberDataInternalLocal");
	case 0x62d446ac: FUNC_LOG_ERROR("TODO: sceNpMatching2GetCbQueueInfo");
	case 0x66f19527: FUNC_LOG_ERROR("TODO: sceNpMatching2KickoutRoomMember");
	case 0x6ba4c668: FUNC_LOG_ERROR("TODO: sceNpMatching2ContextStartAsync");
	case 0x6fcd84c1: FUNC_LOG_ERROR("TODO: sceNpMatching2SetSignalingOptParam");
	case 0x748029a2: FUNC_LOG_ERROR("TODO: sceNpMatching2RegisterContextCallback");
	case 0x7bf6e152: FUNC_LOG_ERROR("TODO: sceNpMatching2SendRoomChatMessage");
	case 0x817d1090: FUNC_LOG_ERROR("TODO: sceNpMatching2SetRoomDataInternal");
	case 0x8b209ca2: FUNC_LOG_ERROR("TODO: sceNpMatching2GetRoomDataInternal");
	case 0x8d3f8d49: FUNC_LOG_ERROR("TODO: sceNpMatching2SignalingGetPingInfo");
	case 0x8e5cfe9f: FUNC_LOG_ERROR("TODO: sceNpMatching2GetServerIdListLocal");
	case 0x8e930999: FUNC_LOG_ERROR("TODO: sceNpUtilBuildCdnUrl");
	case 0x9344d41f: FUNC_LOG_ERROR("TODO: sceNpMatching2GrantRoomOwner");
	case 0x9cbce3f2: FUNC_LOG_ERROR("TODO: sceNpMatching2CreateContext");
	case 0xa2b01449: FUNC_LOG_ERROR("TODO: sceNpMatching2GetSignalingOptParamLocal");
	case 0xa9e6103e: FUNC_LOG_ERROR("TODO: sceNpMatching2RegisterSignalingCallback");
	case 0xaa6c2c43: FUNC_LOG_ERROR("TODO: sceNpMatching2ClearEventData");
	case 0xaadb7c12: FUNC_LOG_ERROR("TODO: sceNp2Term");
	case 0xac98b03a: FUNC_LOG_ERROR("TODO: sceNpMatching2GetUserInfoList");
	case 0xb0c51412: FUNC_LOG_ERROR("TODO: sceNpMatching2GetRoomMemberDataInternal");
	case 0xb851aacf: FUNC_LOG_ERROR("TODO: sceNpMatching2SetRoomMemberDataInternal");
	case 0xba578d19: FUNC_LOG_ERROR("TODO: sceNpMatching2JoinProhibitiveRoom");
	case 0xbf014813: FUNC_LOG_ERROR("TODO: sceNpMatching2SignalingSetCtxOpt");
	case 0xc6b63b7e: FUNC_LOG_ERROR("TODO: sceNpMatching2DeleteServerContext");
	case 0xdb87b088: FUNC_LOG_ERROR("TODO: sceNpMatching2SetDefaultRequestOptParam");
	case 0xdcb6b27d: FUNC_LOG_ERROR("TODO: sceNpMatching2RegisterRoomEventCallback");
	case 0xde6d308b: FUNC_LOG_ERROR("TODO: sceNpMatching2GetRoomPasswordLocal");
	case 0xe4ac32ca: FUNC_LOG_ERROR("TODO: sceNpMatching2GetRoomDataExternalList");
	case 0xe7a3bc7a: FUNC_LOG_ERROR("TODO: sceNpMatching2CreateJoinRoom");
	case 0xe9946648: FUNC_LOG_ERROR("TODO: sceNpMatching2SignalingGetCtxOpt");
	case 0xefbd9357: FUNC_LOG_ERROR("TODO: sceNpMatching2GetLobbyInfoList");
	case 0xeffe5a16: FUNC_LOG_ERROR("TODO: sceNpMatching2GetLobbyMemberIdListLocal");
	case 0xefff8779: FUNC_LOG_ERROR("TODO: sceNpMatching2SendLobbyInvitation");
	case 0xf43c647a: FUNC_LOG_ERROR("TODO: sceNpMatching2ContextStop");
	case 0xf4babd3f: FUNC_LOG_ERROR("TODO: sceNpMatching2Init2");
	case 0xfa0583c6: FUNC_LOG_ERROR("TODO: sceNpMatching2SetLobbyMemberDataInternal");
	case 0xfee11e72: FUNC_LOG_ERROR("TODO: sceNpMatching2RegisterRoomMessageCallback");
	case 0x095e12c6: FUNC_LOG_ERROR("TODO: sceNpClansSendInvitationResponse");
	case 0x09f9e1a9: FUNC_LOG_ERROR("TODO: sceNpClansUpdateClanInfo");
	case 0x0df25834: FUNC_LOG_ERROR("TODO: sceNpClansRetrieveChallenges");
	case 0x1221a1bf: FUNC_LOG_ERROR("TODO: sceNpClansSearchByProfile");
	case 0x20472da0: FUNC_LOG_ERROR("TODO: sceNpClansGetMemberInfo");
	case 0x299ccc9b: FUNC_LOG_ERROR("TODO: sceNpClansCancelMembershipRequest");
	case 0x38dadf1f: FUNC_LOG_ERROR("TODO: sceNpClansGetAutoAcceptStatus");
	case 0x42332cb7: FUNC_LOG_ERROR("TODO: sceNpClansTerm");
	case 0x4826f6d5: FUNC_LOG_ERROR("TODO: sceNpClansDisbandClan");
	case 0x487de998: FUNC_LOG_ERROR("TODO: sceNpClansGetClanInfo");
	case 0x4d06aef7: FUNC_LOG_ERROR("TODO: sceNpClansAddBlacklistEntry");
	case 0x560f717b: FUNC_LOG_ERROR("TODO: sceNpClansLeaveClan");
	case 0x56bc5a7c: FUNC_LOG_ERROR("TODO: sceNpClansGetBlacklist");
	case 0x59743b2b: FUNC_LOG_ERROR("TODO: sceNpClansSendMembershipRequest");
	case 0x5bff9da1: FUNC_LOG_ERROR("TODO: sceNpClansRemoveBlacklistEntry");
	case 0x5da94854: FUNC_LOG_ERROR("TODO: sceNpClansUpdateAutoAcceptStatus");
	case 0x672399a8: FUNC_LOG_ERROR("TODO: sceNpClansGetClanListByNpId");
	case 0x726dffd5: FUNC_LOG_ERROR("TODO: sceNpClansCancelInvitation");
	case 0x727aa7f8: FUNC_LOG_ERROR("TODO: sceNpClansRetrieveAnnouncements");
	case 0x83d65529: FUNC_LOG_ERROR("TODO: sceNpClansPostChallenge");
	case 0x856ff5c0: FUNC_LOG_ERROR("TODO: sceNpClansGetMemberList");
	case 0x8e785b97: FUNC_LOG_ERROR("TODO: sceNpClansRetrievePostedChallenges");
	case 0x942dbdc4: FUNC_LOG_ERROR("TODO: sceNpClansSendMembershipResponse");
	case 0x9a72232d: FUNC_LOG_ERROR("TODO: sceNpClansCreateRequest");
	case 0x9b820047: FUNC_LOG_ERROR("TODO: sceNpClansInit");
	case 0x9cac2085: FUNC_LOG_ERROR("TODO: sceNpClansChangeMemberRole");
	case 0xa6a31a38: FUNC_LOG_ERROR("TODO: sceNpClansCreateClan");
	case 0xaa7912b5: FUNC_LOG_ERROR("TODO: sceNpClansKickMember");
	case 0xace0cfba: FUNC_LOG_ERROR("TODO: sceNpClansSearchByName");
	case 0xada45b84: FUNC_LOG_ERROR("TODO: sceNpClansPostAnnouncement");
	case 0xbc05ef31: FUNC_LOG_ERROR("TODO: sceNpClansSendInvitation");
	case 0xca4181b4: FUNC_LOG_ERROR("TODO: sceNpClansGetClanList");
	case 0xce6dc0f0: FUNC_LOG_ERROR("TODO: sceNpClansRemoveChallenge");
	case 0xd3346dc4: FUNC_LOG_ERROR("TODO: sceNpClansRemovePostedChallenge");
	case 0xd6551cd1: FUNC_LOG_ERROR("TODO: sceNpClansDestroyRequest");
	case 0xdbf300ca: FUNC_LOG_ERROR("TODO: sceNpClansJoinClan");
	case 0xe2590f60: FUNC_LOG_ERROR("TODO: sceNpClansRemoveAnnouncement");
	case 0xe82969e2: FUNC_LOG_ERROR("TODO: sceNpClansAbortRequest");
	case 0xf4a2d52b: FUNC_LOG_ERROR("TODO: sceNpClansUpdateMemberInfo");
	case 0x104551a6: FUNC_LOG_ERROR("TODO: sceNpCommerce2DoCheckoutStartAsync");
	case 0x146618df: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetProductInfoListGetResult");
	case 0x150fdca3: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetContentRatingDescriptor");
	case 0x1fa1b312: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetStoreBrowseUserdata");
	case 0x2a910f05: FUNC_LOG_ERROR("TODO: sceNpCommerce2DestroyReq");
	case 0x3539d233: FUNC_LOG_ERROR("TODO: sceNpCommerce2Init");
	case 0x371a2edd: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetCategoryContentsStart");
	case 0x3d627d81: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetBGDLAvailability");
	case 0x410d42be: FUNC_LOG_ERROR("TODO: sceNpCommerce2DoDlListFinishAsync");
	case 0x4d4a094c: FUNC_LOG_ERROR("TODO: sceNpCommerce2Term");
	case 0x62023e98: FUNC_LOG_ERROR("TODO: sceNpCommerce2CreateSessionAbort");
	case 0x6ca9efd4: FUNC_LOG_ERROR("TODO: sceNpCommerce2DoDlListStartAsync");
	case 0x6f67ea80: FUNC_LOG_ERROR("TODO: sceNpCommerce2DestroyCtx");
	case 0x7370d8d0: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetCategoryContentsCreateReq");
	case 0x8df0057f: FUNC_LOG_ERROR("TODO: sceNpCommerce2AbortReq");
	case 0x8f46325b: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetProductInfoStart");
	case 0x91f8843d: FUNC_LOG_ERROR("TODO: sceNpCommerce2CreateSessionFinish");
	case 0x972ab46c: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetContentInfo");
	case 0x9825a0fc: FUNC_LOG_ERROR("TODO: sceNpCommerce2DoProductBrowseStartAsync");
	case 0x9cde07cc: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetProductInfoListStart");
	case 0x9d9cb96b: FUNC_LOG_ERROR("TODO: sceNpCommerce2DestroyGetCategoryContentsResult");
	case 0xa5a863fe: FUNC_LOG_ERROR("TODO: sceNpCommerce2SetBGDLAvailability");
	case 0xa975ebb4: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetProductInfoCreateReq");
	case 0xa9f945b3: FUNC_LOG_ERROR("TODO: sceNpCommerce2DoProductCodeFinishAsync");
	case 0xac78c1f3: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetContentRatingInfoFromCategoryInfo");
	case 0xb23e3bd1: FUNC_LOG_ERROR("TODO: sceNpCommerce2DoProductBrowseFinishAsync");
	case 0xbd49eab2: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetCategoryInfo");
	case 0xbf5f58ea: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetProductInfoGetResult");
	case 0xca0ea996: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetCategoryContentsGetResult");
	case 0xcc18cd2c: FUNC_LOG_ERROR("TODO: sceNpCommerce2CreateSessionStart");
	case 0xd43a130e: FUNC_LOG_ERROR("TODO: sceNpCommerce2DoCheckoutFinishAsync");
	case 0xd8a473a3: FUNC_LOG_ERROR("TODO: sceNpCommerce2InitGetCategoryContentsResult");
	case 0xd9956ce7: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetGameProductInfoFromGetProductInfoListResult");
	case 0xd9fdcec2: FUNC_LOG_ERROR("TODO: sceNpCommerce2CreateCtx");
	case 0xda8e322d: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetPrice");
	case 0xdb19194c: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetGameSkuInfoFromGameProductInfo");
	case 0xde7ab33d: FUNC_LOG_ERROR("TODO: sceNpCommerce2DoProductCodeStartAsync");
	case 0xe0f90e44: FUNC_LOG_ERROR("TODO: sceNpCommerce2InitGetProductInfoListResult");
	case 0xe1e7b5ac: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetProductInfoListCreateReq");
	case 0xe51a4944: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetGameProductInfoFromContentInfo");
	case 0xec324c8f: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetContentRatingInfoFromGameProductInfo");
	case 0xeef51be0: FUNC_LOG_ERROR("TODO: sceNpCommerce2ExecuteStoreBrowse");
	case 0xef645654: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetGameProductInfo");
	case 0xef8eafcd: FUNC_LOG_ERROR("TODO: sceNpCommerce2DestroyGetProductInfoResult");
	case 0xf6139b58: FUNC_LOG_ERROR("TODO: sceNpCommerce2DestroyGetProductInfoListResult");
	case 0xf798f5e3: FUNC_LOG_ERROR("TODO: sceNpCommerce2InitGetProductInfoResult");
	case 0xfc216890: FUNC_LOG_ERROR("TODO: sceNpCommerce2GetCategoryInfoFromContentInfo");
	case 0x079f0e87: FUNC_LOG_ERROR("TODO: sceNpTrophyGetGameProgress");
	case 0x1197b52c: FUNC_LOG_ERROR("TODO: sceNpTrophyRegisterContext");
	case 0x1c25470d: FUNC_LOG_ERROR("TODO: sceNpTrophyCreateHandle");
	case 0x27deda93: FUNC_LOG_ERROR("TODO: sceNpTrophySetSoundLevel");
	case 0x370136fe: FUNC_LOG_ERROR("TODO: sceNpTrophyGetRequiredDiskSpace");
	case 0x3741ecc7: FUNC_LOG_ERROR("TODO: sceNpTrophyDestroyContext");
	case 0x39567781: FUNC_LOG_ERROR("TODO: sceNpTrophyInit");
	case 0x48bd97c7: FUNC_LOG_ERROR("TODO: sceNpTrophyAbortHandle");
	case 0x49d18217: FUNC_LOG_ERROR("TODO: sceNpTrophyGetGameInfo");
	case 0x623cd2dc: FUNC_LOG_ERROR("TODO: sceNpTrophyDestroyHandle");
	case 0x8ceedd21: FUNC_LOG_ERROR("TODO: sceNpTrophyUnlockTrophy");
	case 0xa7fabf4d: FUNC_LOG_ERROR("TODO: sceNpTrophyTerm");
	case 0xb3ac3478: FUNC_LOG_ERROR("TODO: sceNpTrophyGetTrophyUnlockState");
	case 0xbaedf689: FUNC_LOG_ERROR("TODO: sceNpTrophyGetTrophyIcon");
	case 0xe3bf9a28: FUNC_LOG_ERROR("TODO: sceNpTrophyCreateContext");
	case 0xfce6d30a: FUNC_LOG_ERROR("TODO: sceNpTrophyGetTrophyInfo");
	case 0xff299e03: FUNC_LOG_ERROR("TODO: sceNpTrophyGetGameIcon");
	case 0x01711e81: FUNC_LOG_ERROR("TODO: sceNpTusDeleteMultiSlotDataVUser");
	case 0x0423e622: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiSlotVariable");
	case 0x065b610d: FUNC_LOG_ERROR("TODO: sceNpTusSetMultiSlotVariableAsync");
	case 0x0835deb2: FUNC_LOG_ERROR("TODO: sceNpTusSetDataVUser");
	case 0x0d15043b: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiUserVariable");
	case 0x17db7aa7: FUNC_LOG_ERROR("TODO: sceNpTusTryAndSetVariableVUserAsync");
	case 0x1904435e: FUNC_LOG_ERROR("TODO: sceNpTusCreateTransactionCtx");
	case 0x19bce18c: FUNC_LOG_ERROR("TODO: sceNpTusPollAsync");
	case 0x1fa5c87d: FUNC_LOG_ERROR("TODO: sceNpTusAddAndGetVariableAsync");
	case 0x225aed26: FUNC_LOG_ERROR("TODO: sceNpTusTerm");
	case 0x2357ba9e: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiSlotVariableVUser");
	case 0x2ab21ea9: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiSlotDataStatusVUserAsync");
	case 0x2d1b9f1a: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiUserDataStatusVUser");
	case 0x2e162a62: FUNC_LOG_ERROR("TODO: sceNpTusDestroyTitleCtx");
	case 0x3175af23: FUNC_LOG_ERROR("TODO: sceNpTusDeleteMultiSlotDataAsync");
	case 0x325c6284: FUNC_LOG_ERROR("TODO: sceNpTusAbortTransaction");
	case 0x348dbcb4: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiUserDataStatus");
	case 0x3602bc80: FUNC_LOG_ERROR("TODO: sceNpTusTryAndSetVariableVUser");
	case 0x368fec59: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiUserDataStatusVUserAsync");
	case 0x38f364b0: FUNC_LOG_ERROR("TODO: sceNpTusGetDataVUserAsync");
	case 0x44eca8b4: FUNC_LOG_ERROR("TODO: sceNpTusDestroyTransactionCtx");
	case 0x47e9424a: FUNC_LOG_ERROR("TODO: sceNpTusTryAndSetVariable");
	case 0x5175abb9: FUNC_LOG_ERROR("TODO: sceNpTusGetDataAsync");
	case 0x59432970: FUNC_LOG_ERROR("TODO: sceNpTusSetTimeout");
	case 0x651fd79f: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiSlotDataStatusAsync");
	case 0x6c511024: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiUserVariableVUser");
	case 0x7caf58ee: FUNC_LOG_ERROR("TODO: sceNpTusCreateTitleCtx");
	case 0x7d5f0f0e: FUNC_LOG_ERROR("TODO: sceNpTusSetData");
	case 0x8ddd0d85: FUNC_LOG_ERROR("TODO: sceNpTusGetData");
	case 0x8f87a06b: FUNC_LOG_ERROR("TODO: sceNpTusInit");
	case 0x94989003: FUNC_LOG_ERROR("TODO: sceNpTusAddAndGetVariable");
	case 0x9549d22c: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiUserVariableVUserAsync");
	case 0x96a06212: FUNC_LOG_ERROR("TODO: sceNpTusSetMultiSlotVariableVUserAsync");
	case 0x9cc0cf44: FUNC_LOG_ERROR("TODO: sceNpTusSetDataVUserAsync");
	case 0xa3abfadb: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiSlotDataStatusVUser");
	case 0xa7993bf3: FUNC_LOG_ERROR("TODO: sceNpTusAddAndGetVariableVUserAsync");
	case 0xae4e590e: FUNC_LOG_ERROR("TODO: sceNpTusGetDataVUser");
	case 0xaf985783: FUNC_LOG_ERROR("TODO: sceNpTusDeleteMultiSlotVariable");
	case 0xb8e8ff22: FUNC_LOG_ERROR("TODO: sceNpTusWaitAsync");
	case 0xbb2877f2: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiSlotVariableAsync");
	case 0xbbb244b7: FUNC_LOG_ERROR("TODO: sceNpTusTryAndSetVariableAsync");
	case 0xc2e18da8: FUNC_LOG_ERROR("TODO: sceNpTusDeleteMultiSlotVariableVUserAsync");
	case 0xc4e51fbf: FUNC_LOG_ERROR("TODO: sceNpTusDeleteMultiSlotVariableVUser");
	case 0xc66ba67e: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiUserDataStatusAsync");
	case 0xc815b219: FUNC_LOG_ERROR("TODO: sceNpTusDeleteMultiSlotDataVUserAsync");
	case 0xc848d425: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiSlotDataStatus");
	case 0xcc7a31cd: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiUserVariableAsync");
	case 0xcc86a8f6: FUNC_LOG_ERROR("TODO: sceNpTusSetMultiSlotVariable");
	case 0xe0719847: FUNC_LOG_ERROR("TODO: sceNpTusDeleteMultiSlotData");
	case 0xe847341f: FUNC_LOG_ERROR("TODO: sceNpTusSetDataAsync");
	case 0xf5363608: FUNC_LOG_ERROR("TODO: sceNpTusDeleteMultiSlotVariableAsync");
	case 0xf60be06f: FUNC_LOG_ERROR("TODO: sceNpTusAddAndGetVariableVUser");
	case 0xf819be91: FUNC_LOG_ERROR("TODO: sceNpTusSetMultiSlotVariableVUser");
	case 0xfc7d346e: FUNC_LOG_ERROR("TODO: sceNpTusGetMultiSlotVariableVUserAsync");
	case 0x432b3cbf: FUNC_LOG_ERROR("TODO: sceNpUtilBandwidthTestShutdown");
	case 0xc2ced2b7: FUNC_LOG_ERROR("TODO: sceNpUtilBandwidthTestInitStart");
	case 0xc880f37d: FUNC_LOG_ERROR("TODO: sceNpUtilBandwidthTestGetStatus");
	case 0xc99ee313: FUNC_LOG_ERROR("TODO: sceNpUtilBandwidthTestAbort");
	case 0x02671310: FUNC_LOG_ERROR("TODO: cellFsSetDefaultContainer");
	case 0x0d5b4a14: FUNC_LOG_ERROR("TODO: cellFsReadWithOffset");
	case 0x0e2939e5: FUNC_LOG_ERROR("TODO: cellFsFtruncate");
	case 0x103b8632: FUNC_LOG_ERROR("TODO: cellFsAllocateFileAreaWithInitialData");
	case 0x190912f6: FUNC_LOG_ERROR("TODO: cellFsStReadGetCurrentAddr");
	case 0x1a108ab7: FUNC_LOG_ERROR("TODO: cellFsGetBlockSize");
	case 0x1ea02e2f: FUNC_LOG_ERROR("TODO: cellFsArcadeHddSerialNumber");
	case 0x2664c8ae: FUNC_LOG_ERROR("TODO: cellFsStReadInit");
	case 0x27800c6b: FUNC_LOG_ERROR("TODO: cellFsStRead");
	case 0x2796fdf3: return cellFsRmdir(SC_ARGS_1);//FUNC_LOG_ERROR("TODO: cellFsRmdir");
	case 0x2cb51f0d: return cellFsClose(SC_ARGS_1);//FUNC_LOG_ERROR("TODO: cellFsClose");
	case 0x2cf1296b: FUNC_LOG_ERROR("TODO: cellFsAllocateFileAreaByFdWithoutZeroFill");
	case 0x3140f6e1: FUNC_LOG_ERROR("TODO: cellFsSetIoBuffer");
	case 0x3394f037: FUNC_LOG_ERROR("TODO: cellFsAllocateFileAreaByFdWithInitialData");
	case 0x3a1c8393: FUNC_LOG_ERROR("TODO: cellFsTruncate2");
	case 0x3f61245c: return cellFsOpendir(SC_ARGS_2);//FUNC_LOG_ERROR("TODO: cellFsOpendir");
	case 0x4cef342e: FUNC_LOG_ERROR("TODO: cellFsAioWrite");
	case 0x4d5ff8e2: return cellFsRead(SC_ARGS_4);//FUNC_LOG_ERROR("TODO: cellFsRead");
	case 0x5c74903d: return cellFsReaddir(SC_ARGS_3);//FUNC_LOG_ERROR("TODO: cellFsReaddir");
	case 0x606f9f42: FUNC_LOG_ERROR("TODO: cellFsChangeFileSizeWithoutAllocation");
	case 0x6d3bb15b: FUNC_LOG_ERROR("TODO: cellFsSdataOpenByFd");
	case 0x718bf5f8: return cellFsOpen(SC_ARGS_5);//FUNC_LOG_ERROR("TODO: cellFsOpen");
	case 0x75f16dc5: FUNC_LOG_ERROR("TODO: cellFsSetIoBufferFromDefaultContainer");
	case 0x7a0329a1: FUNC_LOG_ERROR("TODO: cellFsAllocateFileAreaWithoutZeroFill");
	case 0x7de6dced: return cellFsStat(SC_ARGS_2); //FUNC_LOG_ERROR("TODO: cellFsStat");
	case 0x7f13fc8c: FUNC_LOG_ERROR("TODO: cellFsAioCancel");
	case 0x7f4677a8: FUNC_LOG_ERROR("TODO: cellFsUnlink");
	case 0x81f33783: FUNC_LOG_ERROR("TODO: cellFsStReadPutCurrentAddr");
	case 0x866f6aec: FUNC_LOG_ERROR("TODO: cellFsStReadWaitCallback");
	case 0x8cb722d5: FUNC_LOG_ERROR("TODO: cellFsWriteWithOffset");
	case 0x8df28ff9: FUNC_LOG_ERROR("TODO: cellFsStReadStart");
	case 0x8f71c5b2: FUNC_LOG_ERROR("TODO: cellFsStReadWait");
	case 0x91a1beaa: FUNC_LOG_ERROR("TODO: cellFsSetDiscReadRetrySetting");
	case 0x967a162b: FUNC_LOG_ERROR("TODO: cellFsFsync");
	case 0x99406d0b: FUNC_LOG_ERROR("TODO: cellFsChmod");
	case 0x9b882495: FUNC_LOG_ERROR("TODO: cellFsGetDirectoryEntries");
	case 0x9f951810: FUNC_LOG_ERROR("TODO: cellFsAioFinish");
	case 0xa01ee33a: FUNC_LOG_ERROR("TODO: cellFsRegisterConversionCallback");
	case 0xa397d042: return cellFsLseek(SC_ARGS_4);//FUNC_LOG_ERROR("TODO: cellFsLseek");
	case 0xaa3b4bcd: FUNC_LOG_ERROR("TODO: cellFsGetFreeSize");
	case 0xb1840b53: FUNC_LOG_ERROR("TODO: cellFsSdataOpen");
	case 0xb3afee8b: FUNC_LOG_ERROR("TODO: cellFsStReadGetRingBuf");
	case 0xba901fe6: return cellFsMkdir(SC_ARGS_2);//FUNC_LOG_ERROR("TODO: cellFsMkdir");
	case 0xbd273a88: FUNC_LOG_ERROR("TODO: cellFsStReadGetRegid");
	case 0xbef554a4: FUNC_LOG_ERROR("TODO: cellFsUtime");
	case 0xc1c507e7: FUNC_LOG_ERROR("TODO: cellFsAioRead");
	case 0xc9dc3ac5: FUNC_LOG_ERROR("TODO: cellFsTruncate");
	case 0xcb588dba: FUNC_LOG_ERROR("TODO: cellFsFGetBlockSize");
	case 0xcf34969c: FUNC_LOG_ERROR("TODO: cellFsStReadGetStatus");
	case 0xd73938df: FUNC_LOG_ERROR("TODO: cellFsStReadFinish");
	case 0xdb869f20: FUNC_LOG_ERROR("TODO: cellFsAioInit");
	case 0xe15939c3: FUNC_LOG_ERROR("TODO: cellFsChangeFileSizeByFdWithoutAllocation");
	case 0xecdcf2ab: return cellFsWrite(SC_ARGS_4);//FUNC_LOG_ERROR("TODO: cellFsWrite");
	case 0xef3efa34: return cellFsFstat(SC_ARGS_2);//FUNC_LOG_ERROR("TODO: cellFsFstat");
	case 0xf12eecc8: return cellFsRename(SC_ARGS_2);//FUNC_LOG_ERROR("TODO: cellFsRename");
	case 0xf8e5d9a0: FUNC_LOG_ERROR("TODO: cellFsStReadStop");
	case 0xf94baa80: FUNC_LOG_ERROR("TODO: cellFsUnregisterL10nCallbacks");
	case 0xff42dcc3: return cellFsClosedir(SC_ARGS_1);//FUNC_LOG_ERROR("TODO: cellFsClosedir");
	case 0x068fcbc6: FUNC_LOG_ERROR("TODO: sys_config_start");
	case 0x0d5f2c14: FUNC_LOG_ERROR("TODO: cellPadClearBuf");
	case 0x0e2dfaad: FUNC_LOG_ERROR("TODO: cellPadInfoPressMode");
	case 0x1cf98800: return cellPadInit(SC_ARGS_1);//FUNC_LOG_ERROR("TODO: cellPadInit");
	case 0x1f71ecbe: FUNC_LOG_ERROR("TODO: cellKbGetConfiguration");
	case 0x2073b7f6: FUNC_LOG_ERROR("TODO: cellKbClearBuf");
	case 0x20a97ba2: FUNC_LOG_ERROR("TODO: cellPadLddRegisterController");
	case 0x21a62e9b: FUNC_LOG_ERROR("TODO: cellMouseGetTabletDataList");
	case 0x2d16da4f: FUNC_LOG_ERROR("TODO: cellMouseSetTabletMode");
	case 0x2f1774d5: FUNC_LOG_ERROR("TODO: cellKbGetInfo");
	case 0x3138e632: FUNC_LOG_ERROR("TODO: cellMouseGetData");
	case 0x3aaad464: FUNC_LOG_ERROR("TODO: cellPadGetInfo");
	case 0x3ef66b95: FUNC_LOG_ERROR("TODO: cellMouseClearBuf");
	case 0x3f72c56e: FUNC_LOG_ERROR("TODO: cellKbSetLEDStatus");
	case 0x3f797dff: FUNC_LOG_ERROR("TODO: cellPadGetRawData");
	case 0x433f6ec0: FUNC_LOG_ERROR("TODO: cellKbInit");
	case 0x4ab1fa77: FUNC_LOG_ERROR("TODO: cellKbCnvRawCode");
	case 0x4cc9b68d: FUNC_LOG_ERROR("TODO: cellPadPeriphGetInfo");
	case 0x4d0b3b1f: FUNC_LOG_ERROR("TODO: cellMouseInfoTabletMode");
	case 0x4d9b75d5: return cellPadEnd();//FUNC_LOG_ERROR("TODO: cellPadEnd");
	case 0x578e3c98: return cellPadSetPortSetting(SC_ARGS_2);//FUNC_LOG_ERROR("TODO: cellPadSetPortSetting");
	case 0x5baf30fb: FUNC_LOG_ERROR("TODO: cellMouseGetInfo");
	case 0x5f81900c: FUNC_LOG_ERROR("TODO: sys_config_unregister_service");
	case 0x6ae10596: FUNC_LOG_ERROR("TODO: sys_config_add_service_listener");
	case 0x6bc09c61: return cellPadGetDataExtra(SC_ARGS_3);//FUNC_LOG_ERROR("TODO: cellPadGetDataExtra");
	case 0x6bd131f0: FUNC_LOG_ERROR("TODO: cellMouseGetDataList");
	case 0x6d367953: FUNC_LOG_ERROR("TODO: sys_config_stop");
	case 0x78200559: FUNC_LOG_ERROR("TODO: cellPadInfoSensorMode");
	case 0x78f058a2: FUNC_LOG_ERROR("TODO: sys_config_register_service");
	case 0x7c5d5fc1: FUNC_LOG_ERROR("TODO: cellPadDbgPeriphRegisterDevice");
	case 0x8a00f264: FUNC_LOG_ERROR("TODO: cellPadPeriphGetData");
	case 0x8b72cda1: return cellPadGetData(SC_ARGS_2);//FUNC_LOG_ERROR("TODO: cellPadGetData");
	case 0x8b8231e5: FUNC_LOG_ERROR("TODO: cellPadLddGetPortNo");
	case 0x94b98e39: FUNC_LOG_ERROR("TODO: cellPadDbgLddSetDataInsertMode");
	case 0xa328cc35: FUNC_LOG_ERROR("TODO: cellMouseGetRawData");
	case 0xa5f85e4d: FUNC_LOG_ERROR("TODO: cellKbSetCodeType");
	case 0xa703a51d: return cellPadGetInfo2(SC_ARGS_1);//FUNC_LOG_ERROR("TODO: cellPadGetInfo2");
	case 0xa74396e5: FUNC_LOG_ERROR("TODO: cellPadDbgLddRegisterController");
	case 0xbafd6409: FUNC_LOG_ERROR("TODO: cellPadLddDataInsert");
	case 0xbe5be3ba: FUNC_LOG_ERROR("TODO: cellPadSetSensorMode");
	case 0xbfce3285: FUNC_LOG_ERROR("TODO: cellKbEnd");
	case 0xc9030138: FUNC_LOG_ERROR("TODO: cellMouseInit");
	case 0xcf3051f7: FUNC_LOG_ERROR("TODO: cellPadDbgGetData");
	case 0xdeefdfa7: FUNC_LOG_ERROR("TODO: cellKbSetReadMode");
	case 0xe10183ce: FUNC_LOG_ERROR("TODO: cellMouseEnd");
	case 0xe442faa8: FUNC_LOG_ERROR("TODO: cellPadLddUnregisterController");
	case 0xf5d9d571: FUNC_LOG_ERROR("TODO: sys_config_remove_service_listener");
	case 0xf65544ee: FUNC_LOG_ERROR("TODO: cellPadSetActDirect");
	case 0xf83f8182: FUNC_LOG_ERROR("TODO: cellPadSetPressMode");
	case 0xff0a21b7: FUNC_LOG_ERROR("TODO: cellKbRead");
	case 0x00acf0e5: FUNC_LOG_ERROR("TODO: spu_printf_finalize");
	case 0x00fb4a6b: FUNC_LOG_ERROR("TODO: spu_thread_sprintf");
	case 0x0125b2ca: FUNC_LOG_ERROR("TODO: _rand_int32_TT800");
	case 0x01508f24: FUNC_LOG_ERROR("TODO: raw_spu_write_float");
	case 0x0264f468: FUNC_LOG_ERROR("TODO: _Wctomb");
	case 0x02f4d325: FUNC_LOG_ERROR("TODO: spu_thread_read_double");
	case 0x02f52a3c: FUNC_LOG_ERROR("TODO: _filep_close_it");
	case 0x03becf3c: FUNC_LOG_ERROR("TODO: _Defloc");
	case 0x04a183fc: FUNC_LOG_ERROR("TODO: strcpy");
	case 0x04a1f19d: FUNC_LOG_ERROR("TODO: raw_spu_write_short");
	case 0x05d821c4: FUNC_LOG_ERROR("TODO: _Stoullx");
	case 0x077cdb23: FUNC_LOG_ERROR("TODO: btowc");
	case 0x07c7971d: FUNC_LOG_ERROR("TODO: _Stoldx");
	case 0x0871ffb0: FUNC_LOG_ERROR("TODO: mspace_malloc_usable_size");
	case 0x0891a3fa: FUNC_LOG_ERROR("TODO: _Tlsfree");
	case 0x09cbee1e: FUNC_LOG_ERROR("TODO: strxfrm");
	case 0x0a1d4b00: FUNC_LOG_ERROR("TODO: spu_thread_read_uint");
	case 0x0a4e2541: FUNC_LOG_ERROR("TODO: spu_thread_read_ldouble");
	case 0x0ae275a4: FUNC_LOG_ERROR("TODO: _Stolx");
	case 0x0b0d272f: FUNC_LOG_ERROR("TODO: _malloc_finalize");
	case 0x0b9d04d0: FUNC_LOG_ERROR("TODO: _Getnloc");
	case 0x0b9ecb98: FUNC_LOG_ERROR("TODO: toupper_ascii");
	case 0x0cae547f: FUNC_LOG_ERROR("TODO: raw_spu_write_double");
	case 0x0d2a593b: FUNC_LOG_ERROR("TODO: srand");
	case 0x0d8a2de0: FUNC_LOG_ERROR("TODO: _CStrxfrm");
	case 0x0df8809f: FUNC_LOG_ERROR("TODO: __call_functions_registered_with_atexit");
	case 0x0f60eb63: FUNC_LOG_ERROR("TODO: vfwscanf");
	case 0x0ff4722c: FUNC_LOG_ERROR("TODO: raw_spu_read_ushort");
	case 0x1096f8f1: FUNC_LOG_ERROR("TODO: ispunct_ascii");
	case 0x1098a99d: FUNC_LOG_ERROR("TODO: localeconv");
	case 0x112ea8ea: FUNC_LOG_ERROR("TODO: strspn");
	case 0x115e2f70: FUNC_LOG_ERROR("TODO: spu_thread_snprintf");
	case 0x116cda13: FUNC_LOG_ERROR("TODO: wcstol");
	case 0x118712ea: FUNC_LOG_ERROR("TODO: islower");
	case 0x11d270d2: FUNC_LOG_ERROR("TODO: exitspawn");
	case 0x126656b7: FUNC_LOG_ERROR("TODO: _Btowc");
	case 0x128b334f: FUNC_LOG_ERROR("TODO: raw_spu_read_mem");
	case 0x12a55fb7: FUNC_LOG_ERROR("TODO: mbrtowc");
	case 0x130d20a5: FUNC_LOG_ERROR("TODO: towlower");
	case 0x1365b52a: FUNC_LOG_ERROR("TODO: fcntl");
	case 0x13808972: FUNC_LOG_ERROR("TODO: wcstok");
	case 0x14052ae0: FUNC_LOG_ERROR("TODO: absi4");
	case 0x14348b57: FUNC_LOG_ERROR("TODO: divi4");
	case 0x145853cd: FUNC_LOG_ERROR("TODO: mspace_destroy");
	case 0x15362bc9: FUNC_LOG_ERROR("TODO: spu_thread_read_long");
	case 0x153b364a: FUNC_LOG_ERROR("TODO: mkdir");
	case 0x15bdcc00: FUNC_LOG_ERROR("TODO: rand");
	case 0x15c2e29d: FUNC_LOG_ERROR("TODO: isgraph_ascii");
	case 0x17752bab: FUNC_LOG_ERROR("TODO: wcsftime");
	case 0x17bc0136: FUNC_LOG_ERROR("TODO: _Lrv2d");
	case 0x17c031d7: FUNC_LOG_ERROR("TODO: spu_thread_read_ulong");
	case 0x1855b9b1: FUNC_LOG_ERROR("TODO: setlocale");
	case 0x1895908d: FUNC_LOG_ERROR("TODO: mspace_realloc");
	case 0x18e48b5d: FUNC_LOG_ERROR("TODO: wscanf");
	case 0x18f7b77d: FUNC_LOG_ERROR("TODO: _Dnorm");
	case 0x1970cd7e: FUNC_LOG_ERROR("TODO: getpid");
	case 0x19ccbb81: FUNC_LOG_ERROR("TODO: mktime");
	case 0x1ab01ea8: FUNC_LOG_ERROR("TODO: truncate");
	case 0x1abd0985: FUNC_LOG_ERROR("TODO: div");
	case 0x1ae06860: FUNC_LOG_ERROR("TODO: wcstoumax");
	case 0x1b4c3ff0: FUNC_LOG_ERROR("TODO: atexit");
	case 0x1c0e8ab6: FUNC_LOG_ERROR("TODO: vswscanf");
	case 0x1c2ef212: FUNC_LOG_ERROR("TODO: getwc");
	case 0x1cf4d80a: FUNC_LOG_ERROR("TODO: iswalpha");
	case 0x1dcd8609: FUNC_LOG_ERROR("TODO: _Strxfrmx");
	case 0x1dd0d4c5: FUNC_LOG_ERROR("TODO: spu_printf_attach_group");
	case 0x1df4732e: FUNC_LOG_ERROR("TODO: _Getptolower");
	case 0x1e9d2b4f: FUNC_LOG_ERROR("TODO: spu_thread_read_int");
	case 0x1ecae195: FUNC_LOG_ERROR("TODO: _Vacopy");
	case 0x1f913e8d: FUNC_LOG_ERROR("TODO: chmod");
	case 0x1f925c41: FUNC_LOG_ERROR("TODO: _allocate_mapped_pages");
	case 0x206612c4: FUNC_LOG_ERROR("TODO: spu_thread_read_ptr");
	case 0x216984ed: FUNC_LOG_ERROR("TODO: spu_thread_write_long");
	case 0x216fcd2a: FUNC_LOG_ERROR("TODO: _Atrealloc");
	case 0x21807b8e: FUNC_LOG_ERROR("TODO: towctrans");
	case 0x225702e1: FUNC_LOG_ERROR("TODO: _fs_initialize");
	case 0x22b0e566: FUNC_LOG_ERROR("TODO: _Stollx");
	case 0x23d3bca7: FUNC_LOG_ERROR("TODO: _Eadd");
	case 0x242c603e: FUNC_LOG_ERROR("TODO: _Frprep");
	case 0x243b52d8: FUNC_LOG_ERROR("TODO: _Mbtowcx");
	case 0x24802244: FUNC_LOG_ERROR("TODO: iswcntrl");
	case 0x24c9e021: FUNC_LOG_ERROR("TODO: abs");
	case 0x24e230d2: FUNC_LOG_ERROR("TODO: _Wctob");
	case 0x24f6cbdd: FUNC_LOG_ERROR("TODO: clock");
	case 0x253b7210: FUNC_LOG_ERROR("TODO: _rand_real2_TT800");
	case 0x25beee5a: FUNC_LOG_ERROR("TODO: __raw_spu_printf");
	case 0x25da8fbb: FUNC_LOG_ERROR("TODO: iscntrl");
	case 0x266311a0: FUNC_LOG_ERROR("TODO: localtime");
	case 0x2677568c: FUNC_LOG_ERROR("TODO: putchar");
	case 0x26f023d5: FUNC_LOG_ERROR("TODO: ftell");
	case 0x273b9711: FUNC_LOG_ERROR("TODO: sprintf");
	case 0x28b92ebf: FUNC_LOG_ERROR("TODO: raw_spu_read_uchar");
	case 0x296bc72f: FUNC_LOG_ERROR("TODO: _FDunscale");
	case 0x2b45cb34: FUNC_LOG_ERROR("TODO: wcsrtombs");
	case 0x2b7ba4ca: FUNC_LOG_ERROR("TODO: _Tlsset");
	case 0x2b81fb7f: FUNC_LOG_ERROR("TODO: readdir");
	case 0x2bc9dee6: FUNC_LOG_ERROR("TODO: raw_spu_read_short");
	case 0x2caea755: FUNC_LOG_ERROR("TODO: _Once");
	case 0x2d067448: FUNC_LOG_ERROR("TODO: ftruncate64");
	case 0x2d17ca7f: FUNC_LOG_ERROR("TODO: _Puttxt");
	case 0x2eea9f25: FUNC_LOG_ERROR("TODO: _Esub");
	case 0x2f45d39c: FUNC_LOG_ERROR("TODO: strlen");
	case 0x2fecec13: FUNC_LOG_ERROR("TODO: getwchar");
	case 0x30fb2899: FUNC_LOG_ERROR("TODO: _Getmem");
	case 0x312be3b3: FUNC_LOG_ERROR("TODO: _malloc_init_lv2");
	case 0x313f04ab: FUNC_LOG_ERROR("TODO: raw_spu_read_char");
	case 0x329a4540: FUNC_LOG_ERROR("TODO: _WPrintf");
	case 0x32e4a30a: FUNC_LOG_ERROR("TODO: _Mtxdst");
	case 0x336b4191: FUNC_LOG_ERROR("TODO: _Getint");
	case 0x33d6ae54: FUNC_LOG_ERROR("TODO: ferror");
	case 0x344eca7e: FUNC_LOG_ERROR("TODO: _WGetstr");
	case 0x34dd6650: FUNC_LOG_ERROR("TODO: _Getcloc");
	case 0x34e7c97e: FUNC_LOG_ERROR("TODO: _Unlocksyslock");
	case 0x3512ad38: FUNC_LOG_ERROR("TODO: tmpnam");
	case 0x355fd1fd: FUNC_LOG_ERROR("TODO: mbtowc");
	case 0x3574d37d: FUNC_LOG_ERROR("TODO: _Wcsxfrmx");
	case 0x36c067c1: FUNC_LOG_ERROR("TODO: _Stoll");
	case 0x36f2b4ed: FUNC_LOG_ERROR("TODO: strtoull");
	case 0x36feb965: FUNC_LOG_ERROR("TODO: raw_spu_write_llong");
	case 0x3704840e: FUNC_LOG_ERROR("TODO: _fs_finalize");
	case 0x38426d25: FUNC_LOG_ERROR("TODO: _Wctombx");
	case 0x3902363a: FUNC_LOG_ERROR("TODO: malloc_footprint");
	case 0x39bf419c: FUNC_LOG_ERROR("TODO: valloc");
	case 0x3a210c93: FUNC_LOG_ERROR("TODO: swscanf");
	case 0x3a840ae3: FUNC_LOG_ERROR("TODO: snprintf");
	case 0x3b22e88a: FUNC_LOG_ERROR("TODO: isxdigit");
	case 0x3b8097ac: FUNC_LOG_ERROR("TODO: _WScanf");
	case 0x3bce073b: FUNC_LOG_ERROR("TODO: putc");
	case 0x3bd9ce0a: FUNC_LOG_ERROR("TODO: fsync");
	case 0x3ca81c76: FUNC_LOG_ERROR("TODO: _Iswctype");
	case 0x3d1460e9: FUNC_LOG_ERROR("TODO: _Strerror");
	case 0x3d541975: FUNC_LOG_ERROR("TODO: atoi");
	case 0x3d5fdea7: FUNC_LOG_ERROR("TODO: vfwprintf");
	case 0x3d85d6f8: FUNC_LOG_ERROR("TODO: strcmp");
	case 0x3dbc3bee: FUNC_LOG_ERROR("TODO: opendir");
	case 0x3e57dfac: FUNC_LOG_ERROR("TODO: _Genld");
	case 0x3ec99a66: FUNC_LOG_ERROR("TODO: _Getptimes");
	case 0x3ee29d0b: FUNC_LOG_ERROR("TODO: _Stof");
	case 0x3f125e2e: FUNC_LOG_ERROR("TODO: spu_thread_write_short");
	case 0x3f4ccdc7: FUNC_LOG_ERROR("TODO: isdigit");
	case 0x3f650700: FUNC_LOG_ERROR("TODO: mspace_is_heap_empty");
	case 0x40a2599a: FUNC_LOG_ERROR("TODO: atol");
	case 0x40d04e4e: FUNC_LOG_ERROR("TODO: fwide");
	case 0x40e0ff25: FUNC_LOG_ERROR("TODO: _WGenld");
	case 0x41283333: FUNC_LOG_ERROR("TODO: isdigit_ascii");
	case 0x418bdfe1: FUNC_LOG_ERROR("TODO: _get_fd");
	case 0x4217b4cf: FUNC_LOG_ERROR("TODO: difftime");
	case 0x433fe2a9: FUNC_LOG_ERROR("TODO: fwscanf");
	case 0x44115dd0: FUNC_LOG_ERROR("TODO: _Geterrno");
	case 0x44796e5c: FUNC_LOG_ERROR("TODO: strerror");
	case 0x449317ed: FUNC_LOG_ERROR("TODO: _Fopen");
	case 0x44d7cae8: FUNC_LOG_ERROR("TODO: raw_spu_read_float");
	case 0x4544c2de: FUNC_LOG_ERROR("TODO: spu_thread_write_mem");
	case 0x4569518c: FUNC_LOG_ERROR("TODO: malloc_stats");
	case 0x459072c3: FUNC_LOG_ERROR("TODO: _init_TT800");
	case 0x4595c42b: FUNC_LOG_ERROR("TODO: wcsxfrm");
	case 0x468b45dc: FUNC_LOG_ERROR("TODO: mspace_calloc");
	case 0x4911ff9c: FUNC_LOG_ERROR("TODO: rand_int31_TT800");
	case 0x498a5036: FUNC_LOG_ERROR("TODO: raw_spu_write_mem");
	case 0x4a0049c6: FUNC_LOG_ERROR("TODO: _Getpctype");
	case 0x4ab5fbe2: FUNC_LOG_ERROR("TODO: _Printf");
	case 0x4b36c0e0: FUNC_LOG_ERROR("TODO: vfscanf");
	case 0x4b6a4010: FUNC_LOG_ERROR("TODO: vswprintf");
	case 0x4bb8e2b2: FUNC_LOG_ERROR("TODO: raw_spu_write_ushort");
	case 0x4c3f5f29: FUNC_LOG_ERROR("TODO: _Getgloballocale");
	case 0x4c7dc863: FUNC_LOG_ERROR("TODO: iswupper");
	case 0x4d348427: FUNC_LOG_ERROR("TODO: fputs");
	case 0x4e4be299: FUNC_LOG_ERROR("TODO: longjmp");
	case 0x4e72f810: FUNC_LOG_ERROR("TODO: wmemchr");
	case 0x4ffba189: FUNC_LOG_ERROR("TODO: feof");
	case 0x508196b4: FUNC_LOG_ERROR("TODO: raw_spu_printf");
	case 0x508e00c6: FUNC_LOG_ERROR("TODO: _Getloc");
	case 0x51b28904: FUNC_LOG_ERROR("TODO: _Stodx");
	case 0x526a496a: FUNC_LOG_ERROR("TODO: write");
	case 0x532b03be: FUNC_LOG_ERROR("TODO: raw_spu_read_uint");
	case 0x53eb43a1: FUNC_LOG_ERROR("TODO: _Getpmbstate");
	case 0x54b383bc: FUNC_LOG_ERROR("TODO: _Locvar");
	case 0x54c2844e: FUNC_LOG_ERROR("TODO: spu_raw_snprintf");
	case 0x54f57626: FUNC_LOG_ERROR("TODO: rewind");
	case 0x5516bbbf: FUNC_LOG_ERROR("TODO: iswctype");
	case 0x55d4866e: FUNC_LOG_ERROR("TODO: fgetws");
	case 0x5751acf9: FUNC_LOG_ERROR("TODO: _LDscale");
	case 0x575fb268: FUNC_LOG_ERROR("TODO: wctrans");
	case 0x57ff7dd7: FUNC_LOG_ERROR("TODO: _WStod");
	case 0x58320830: FUNC_LOG_ERROR("TODO: _WLitob");
	case 0x589b5314: FUNC_LOG_ERROR("TODO: strncat");
	case 0x5909e3c4: FUNC_LOG_ERROR("TODO: memset");
	case 0x59640bc6: FUNC_LOG_ERROR("TODO: raw_spu_read_ullong");
	case 0x59c1bb1f: FUNC_LOG_ERROR("TODO: _Getpwcstate");
	case 0x59e8dd58: FUNC_LOG_ERROR("TODO: strtoll");
	case 0x5a74f774: FUNC_LOG_ERROR("TODO: spu_thread_read_float");
	case 0x5b162b7f: FUNC_LOG_ERROR("TODO: memmove");
	case 0x5b4b6d6d: FUNC_LOG_ERROR("TODO: wcspbrk");
	case 0x5cc71eee: FUNC_LOG_ERROR("TODO: raw_spu_write_ldouble");
	case 0x5d43c1a3: FUNC_LOG_ERROR("TODO: _Mbtowc");
	case 0x5dbceee3: FUNC_LOG_ERROR("TODO: rand_int32_TT800");
	case 0x5e06c3fe: FUNC_LOG_ERROR("TODO: __getpid");
	case 0x5e7888f0: FUNC_LOG_ERROR("TODO: bsearch");
	case 0x5eb95641: FUNC_LOG_ERROR("TODO: _Stold");
	case 0x5f922a30: FUNC_LOG_ERROR("TODO: _Dscale");
	case 0x5f9a65c7: FUNC_LOG_ERROR("TODO: _WStold");
	case 0x5fa1e497: FUNC_LOG_ERROR("TODO: _Unlockfilelock");
	case 0x60627fb3: FUNC_LOG_ERROR("TODO: _LDunscale");
	case 0x6075a3c6: FUNC_LOG_ERROR("TODO: _Ld2rv");
	case 0x609080ec: FUNC_LOG_ERROR("TODO: isspace_ascii");
	case 0x6137d196: FUNC_LOG_ERROR("TODO: memalign");
	case 0x6287ac6a: FUNC_LOG_ERROR("TODO: iswdigit");
	case 0x62bf1d6c: FUNC_LOG_ERROR("TODO: swprintf");
	case 0x64aaf016: FUNC_LOG_ERROR("TODO: raw_spu_read_ldouble");
	case 0x6514dbe5: FUNC_LOG_ERROR("TODO: wcstold");
	case 0x6539ff6d: FUNC_LOG_ERROR("TODO: _Gentime");
	case 0x6545b7de: FUNC_LOG_ERROR("TODO: fgetpos");
	case 0x65e8d4d0: FUNC_LOG_ERROR("TODO: wcslen");
	case 0x6660fc8d: FUNC_LOG_ERROR("TODO: TlsGetValue");
	case 0x6687fba4: FUNC_LOG_ERROR("TODO: _Fgpos");
	case 0x66b71b17: FUNC_LOG_ERROR("TODO: wcsspn");
	case 0x67582370: FUNC_LOG_ERROR("TODO: spu_thread_write_double");
	case 0x676e3e7a: FUNC_LOG_ERROR("TODO: raw_spu_write_ptr");
	case 0x67d6334b: FUNC_LOG_ERROR("TODO: strtof");
	case 0x6823c180: FUNC_LOG_ERROR("TODO: iswprint");
	case 0x69106fd2: FUNC_LOG_ERROR("TODO: _init_by_array_TT800");
	case 0x692b497f: FUNC_LOG_ERROR("TODO: perror");
	case 0x6995f5e8: FUNC_LOG_ERROR("TODO: _Ldtob");
	case 0x69c27c12: FUNC_LOG_ERROR("TODO: fopen");
	case 0x69ff1b9b: FUNC_LOG_ERROR("TODO: fseek");
	case 0x6ba10474: FUNC_LOG_ERROR("TODO: _Tlsalloc");
	case 0x6cf78f3e: FUNC_LOG_ERROR("TODO: _Mtxunlock");
	case 0x6d5115b0: FUNC_LOG_ERROR("TODO: wcsncmp");
	case 0x6e988e5f: FUNC_LOG_ERROR("TODO: _rand_int31_TT800");
	case 0x7028dea9: FUNC_LOG_ERROR("TODO: _Locksyslock");
	case 0x703ec767: FUNC_LOG_ERROR("TODO: setvbuf");
	case 0x70b0e833: FUNC_LOG_ERROR("TODO: mblen");
	case 0x714c9618: FUNC_LOG_ERROR("TODO: __raw_spu_putfld");
	case 0x717b2502: FUNC_LOG_ERROR("TODO: stat");
	case 0x72236cbc: FUNC_LOG_ERROR("TODO: raw_spu_write_ullong");
	case 0x72b84004: FUNC_LOG_ERROR("TODO: spu_printf_attach_thread");
	case 0x73096858: FUNC_LOG_ERROR("TODO: wctob");
	case 0x7345b4be: FUNC_LOG_ERROR("TODO: _WStoll");
	case 0x73eae03d: FUNC_LOG_ERROR("TODO: strrchr");
	case 0x744d2505: FUNC_LOG_ERROR("TODO: ispunct");
	case 0x74fe4a7b: FUNC_LOG_ERROR("TODO: iswgraph");
	case 0x759e0635: FUNC_LOG_ERROR("TODO: malloc");
	case 0x75d4485c: FUNC_LOG_ERROR("TODO: rename");
	case 0x75f98579: FUNC_LOG_ERROR("TODO: wcscoll");
	case 0x76da0c84: FUNC_LOG_ERROR("TODO: ftruncate");
	case 0x76ed4243: FUNC_LOG_ERROR("TODO: _Wcsftime");
	case 0x770bfaee: FUNC_LOG_ERROR("TODO: wctype");
	case 0x77a602dd: FUNC_LOG_ERROR("TODO: free");
	case 0x77c15441: FUNC_LOG_ERROR("TODO: _WGetfloat");
	case 0x77e241bc: FUNC_LOG_ERROR("TODO: _Skip");
	case 0x7817edf0: FUNC_LOG_ERROR("TODO: raw_spu_write_uint");
	case 0x783636d1: FUNC_LOG_ERROR("TODO: spu_thread_read_char");
	case 0x78429d81: FUNC_LOG_ERROR("TODO: putwchar");
	case 0x79819dbf: FUNC_LOG_ERROR("TODO: fputc");
	case 0x7994c28d: FUNC_LOG_ERROR("TODO: _FDtentox");
	case 0x79eadf05: FUNC_LOG_ERROR("TODO: malloc_usable_size");
	case 0x7aaab95c: FUNC_LOG_ERROR("TODO: iswblank");
	case 0x7ae82e0f: FUNC_LOG_ERROR("TODO: vsprintf");
	case 0x7aee5acd: FUNC_LOG_ERROR("TODO: _Lockfilelock");
	case 0x7b5aac20: FUNC_LOG_ERROR("TODO: spu_thread_write_ptr");
	case 0x7b7a687a: FUNC_LOG_ERROR("TODO: _WPutfld");
	case 0x7b9c592e: FUNC_LOG_ERROR("TODO: spu_thread_read_ullong");
	case 0x7c1bcf37: FUNC_LOG_ERROR("TODO: isalnum_ascii");
	case 0x7c370679: FUNC_LOG_ERROR("TODO: _Foprep");
	case 0x7cec7b39: FUNC_LOG_ERROR("TODO: _Putfld");
	case 0x7d894764: FUNC_LOG_ERROR("TODO: _Readloc");
	case 0x7e7017b1: FUNC_LOG_ERROR("TODO: rmdir");
	case 0x7ea8d860: FUNC_LOG_ERROR("TODO: spu_printf_detach_group");
	case 0x7efd420a: FUNC_LOG_ERROR("TODO: _Daysto");
	case 0x7fd325c4: FUNC_LOG_ERROR("TODO: mspace_malloc_stats");
	case 0x7fdcf73e: FUNC_LOG_ERROR("TODO: wcscat");
	case 0x806fd281: FUNC_LOG_ERROR("TODO: isblank_ascii");
	case 0x809a143f: FUNC_LOG_ERROR("TODO: kill");
	case 0x813a9666: FUNC_LOG_ERROR("TODO: ungetwc");
	case 0x814d8cb0: FUNC_LOG_ERROR("TODO: fflush");
	case 0x81a0a858: FUNC_LOG_ERROR("TODO: _memset_int");
	case 0x82a3cc30: FUNC_LOG_ERROR("TODO: wcschr");
	case 0x82a4561a: FUNC_LOG_ERROR("TODO: _put_fd");
	case 0x831d70a5: FUNC_LOG_ERROR("TODO: memcpy");
	case 0x8342b757: FUNC_LOG_ERROR("TODO: utime");
	case 0x84378ddc: FUNC_LOG_ERROR("TODO: wcsncpy");
	case 0x86532174: FUNC_LOG_ERROR("TODO: imaxdiv");
	case 0x867275d7: FUNC_LOG_ERROR("TODO: _Stoul");
	case 0x86b4c669: FUNC_LOG_ERROR("TODO: tolower_ascii");
	case 0x8713c859: FUNC_LOG_ERROR("TODO: link");
	case 0x8725a1a7: FUNC_LOG_ERROR("TODO: _memset_vmx");
	case 0x87e8f748: FUNC_LOG_ERROR("TODO: memset_vmx");
	case 0x8809cdfd: FUNC_LOG_ERROR("TODO: _Getpwctytab");
	case 0x882689f2: FUNC_LOG_ERROR("TODO: _Makeloc");
	case 0x882e7760: FUNC_LOG_ERROR("TODO: raw_spu_write_uchar");
	case 0x889d5804: FUNC_LOG_ERROR("TODO: _Dunscale");
	case 0x88e009f5: FUNC_LOG_ERROR("TODO: vwprintf");
	case 0x896e1bfd: FUNC_LOG_ERROR("TODO: spu_thread_write_uchar");
	case 0x89b62f56: FUNC_LOG_ERROR("TODO: _Etentox");
	case 0x89f6f026: FUNC_LOG_ERROR("TODO: time");
	case 0x8a6830e7: FUNC_LOG_ERROR("TODO: abort");
	case 0x8a71132c: FUNC_LOG_ERROR("TODO: remove");
	case 0x8a847b51: FUNC_LOG_ERROR("TODO: tmpfile");
	case 0x8ab0abc6: FUNC_LOG_ERROR("TODO: strncpy");
	case 0x8b439438: FUNC_LOG_ERROR("TODO: clearerr");
	case 0x8b9d8dd2: FUNC_LOG_ERROR("TODO: iswpunct");
	case 0x8cb6bfdc: FUNC_LOG_ERROR("TODO: _Locsum");
	case 0x8d7ffaf1: FUNC_LOG_ERROR("TODO: _WStopfx");
	case 0x8e2484f1: FUNC_LOG_ERROR("TODO: _Emul");
	case 0x8ed71e8b: FUNC_LOG_ERROR("TODO: _WGetfld");
	case 0x8ef85e47: FUNC_LOG_ERROR("TODO: _WPuttxt");
	case 0x8f5dd179: FUNC_LOG_ERROR("TODO: _Nnl");
	case 0x90010029: FUNC_LOG_ERROR("TODO: gets");
	case 0x9027fd99: FUNC_LOG_ERROR("TODO: _WStoldx");
	case 0x90457fe3: FUNC_LOG_ERROR("TODO: raw_spu_read_long");
	case 0x90b27880: FUNC_LOG_ERROR("TODO: strtoumax");
	case 0x9234f738: FUNC_LOG_ERROR("TODO: raw_spu_read_int");
	case 0x93427cb9: FUNC_LOG_ERROR("TODO: setbuf");
	case 0x938bfcf7: FUNC_LOG_ERROR("TODO: spu_thread_write_char");
	case 0x93a3e3ac: FUNC_LOG_ERROR("TODO: tolower");
	case 0x9439e4cd: FUNC_LOG_ERROR("TODO: wcsncat");
	case 0x96b6baa6: FUNC_LOG_ERROR("TODO: spu_thread_read_mem");
	case 0x96e6303b: FUNC_LOG_ERROR("TODO: _WStoxflt");
	case 0x96ea4de6: FUNC_LOG_ERROR("TODO: wctomb");
	case 0x97896359: FUNC_LOG_ERROR("TODO: isspace");
	case 0x9800573c: FUNC_LOG_ERROR("TODO: _WLdtob");
	case 0x980d3ea7: FUNC_LOG_ERROR("TODO: _Getfld");
	case 0x9886810c: FUNC_LOG_ERROR("TODO: _FDnorm");
	case 0x98f0eeab: FUNC_LOG_ERROR("TODO: raw_spu_write_ulong");
	case 0x99782342: FUNC_LOG_ERROR("TODO: strncasecmp_ascii");
	case 0x99a72146: FUNC_LOG_ERROR("TODO: vsnprintf");
	case 0x99b38ce7: FUNC_LOG_ERROR("TODO: wmemmove");
	case 0x9a87bb3a: FUNC_LOG_ERROR("TODO: _Getmbcurmax");
	case 0x9abe8c74: FUNC_LOG_ERROR("TODO: wprintf");
	case 0x9c7028a5: FUNC_LOG_ERROR("TODO: spu_thread_write_uint");
	case 0x9c9d7b0d: FUNC_LOG_ERROR("TODO: strtold");
	case 0x9cab08d1: FUNC_LOG_ERROR("TODO: spu_thread_write_int");
	case 0x9d140351: FUNC_LOG_ERROR("TODO: _Destroytls");
	case 0x9eb25e00: FUNC_LOG_ERROR("TODO: strcoll");
	case 0x9eee5387: FUNC_LOG_ERROR("TODO: truncate64");
	case 0x9ff08d57: FUNC_LOG_ERROR("TODO: _Clearlocks");
	case 0xa0ab76d5: FUNC_LOG_ERROR("TODO: _absi4");
	case 0xa0bc0efb: FUNC_LOG_ERROR("TODO: mallinfo");
	case 0xa0ddba8e: FUNC_LOG_ERROR("TODO: _Stoulx");
	case 0xa1dbb466: FUNC_LOG_ERROR("TODO: _Gettime");
	case 0xa2945229: FUNC_LOG_ERROR("TODO: _WGetint");
	case 0xa30d4797: FUNC_LOG_ERROR("TODO: wcstoll");
	case 0xa3440924: FUNC_LOG_ERROR("TODO: closedir");
	case 0xa3da58f6: FUNC_LOG_ERROR("TODO: rand_real1_TT800");
	case 0xa45a0313: FUNC_LOG_ERROR("TODO: mspace_create");
	case 0xa483d50d: FUNC_LOG_ERROR("TODO: _rv2d");
	case 0xa53800c2: FUNC_LOG_ERROR("TODO: _malloc_finalize_lv2");
	case 0xa568db82: FUNC_LOG_ERROR("TODO: spu_thread_read_ushort");
	case 0xa57cc615: FUNC_LOG_ERROR("TODO: iswspace");
	case 0xa5bc0e19: FUNC_LOG_ERROR("TODO: getchar");
	case 0xa6463518: FUNC_LOG_ERROR("TODO: __rename");
	case 0xa650df19: FUNC_LOG_ERROR("TODO: toupper");
	case 0xa65886b8: FUNC_LOG_ERROR("TODO: _Findloc");
	case 0xa72a7595: FUNC_LOG_ERROR("TODO: calloc");
	case 0xa797790f: FUNC_LOG_ERROR("TODO: wcsstr");
	case 0xa82d70da: FUNC_LOG_ERROR("TODO: _Tlsget");
	case 0xa835be11: FUNC_LOG_ERROR("TODO: __cxa_atexit");
	case 0xa874036a: FUNC_LOG_ERROR("TODO: wcstof");
	case 0xa8a6f615: FUNC_LOG_ERROR("TODO: TlsSetValue");
	case 0xa8b07f1b: FUNC_LOG_ERROR("TODO: wmemcpy");
	case 0xa9f68eff: FUNC_LOG_ERROR("TODO: qsort");
	case 0xaa1e687d: FUNC_LOG_ERROR("TODO: isgraph");
	case 0xaa266d35: FUNC_LOG_ERROR("TODO: _malloc_init");
	case 0xaa9635d7: FUNC_LOG_ERROR("TODO: strcat");
	case 0xab4c7ca1: FUNC_LOG_ERROR("TODO: _CWcsxfrm");
	case 0xab77019f: FUNC_LOG_ERROR("TODO: fstat");
	case 0xabc27420: FUNC_LOG_ERROR("TODO: wcstoul");
	case 0xac758d20: FUNC_LOG_ERROR("TODO: wmemcmp");
	case 0xac893127: FUNC_LOG_ERROR("TODO: fgetc");
	case 0xace90be4: FUNC_LOG_ERROR("TODO: _Dtentox");
	case 0xad62a342: FUNC_LOG_ERROR("TODO: ldiv");
	case 0xad8e9ad0: FUNC_LOG_ERROR("TODO: _Initlocks");
	case 0xaec7c970: FUNC_LOG_ERROR("TODO: lseek");
	case 0xaf002043: FUNC_LOG_ERROR("TODO: independent_comalloc");
	case 0xaf44a615: FUNC_LOG_ERROR("TODO: fgets");
	case 0xaf6bdcb0: FUNC_LOG_ERROR("TODO: _Nonfatal_Assert");
	case 0xaf89fdbd: FUNC_LOG_ERROR("TODO: _Assert");
	case 0xafa39179: FUNC_LOG_ERROR("TODO: _WPutstr");
	case 0xb120f6ca: FUNC_LOG_ERROR("TODO: close");
	case 0xb17b79d0: FUNC_LOG_ERROR("TODO: isalpha");
	case 0xb18cc115: FUNC_LOG_ERROR("TODO: freopen");
	case 0xb1cc43e3: FUNC_LOG_ERROR("TODO: _CStrftime");
	case 0xb1f4779d: FUNC_LOG_ERROR("TODO: spu_thread_printf");
	case 0xb24cb8d6: FUNC_LOG_ERROR("TODO: _Locterm");
	case 0xb2702e15: FUNC_LOG_ERROR("TODO: wcrtomb");
	case 0xb2748a9f: FUNC_LOG_ERROR("TODO: _Freeloc");
	case 0xb30042ce: FUNC_LOG_ERROR("TODO: lldiv");
	case 0xb37982ea: FUNC_LOG_ERROR("TODO: _Getstr");
	case 0xb3c495bd: FUNC_LOG_ERROR("TODO: imaxabs");
	case 0xb3d98d59: FUNC_LOG_ERROR("TODO: _rand_real1_TT800");
	case 0xb400f226: FUNC_LOG_ERROR("TODO: isupper_ascii");
	case 0xb4225825: FUNC_LOG_ERROR("TODO: mbsinit");
	case 0xb43c25c7: FUNC_LOG_ERROR("TODO: wcstoull");
	case 0xb49eea74: FUNC_LOG_ERROR("TODO: _init_malloc_lock0");
	case 0xb4a54446: FUNC_LOG_ERROR("TODO: _Stofx");
	case 0xb4fc7078: FUNC_LOG_ERROR("TODO: _close_all_FILE");
	case 0xb529d259: FUNC_LOG_ERROR("TODO: isalnum");
	case 0xb569849d: FUNC_LOG_ERROR("TODO: reallocalign");
	case 0xb57bdf7b: FUNC_LOG_ERROR("TODO: iswxdigit");
	case 0xb5d353e8: FUNC_LOG_ERROR("TODO: _LDtentox");
	case 0xb6002508: FUNC_LOG_ERROR("TODO: _Putstr");
	case 0xb6257e3d: FUNC_LOG_ERROR("TODO: strncasecmp");
	case 0xb680e240: FUNC_LOG_ERROR("TODO: wcstombs");
	case 0xb6af290e: FUNC_LOG_ERROR("TODO: _WFrprep");
	case 0xb6d92ac3: FUNC_LOG_ERROR("TODO: strcasecmp");
	case 0xb738027a: FUNC_LOG_ERROR("TODO: strtok_r");
	case 0xb794631e: FUNC_LOG_ERROR("TODO: _WStofx");
	case 0xb7ab5127: FUNC_LOG_ERROR("TODO: wcsrchr");
	case 0xb7b793ed: FUNC_LOG_ERROR("TODO: get_state_TT800");
	case 0xb7ba4aeb: FUNC_LOG_ERROR("TODO: _WStoul");
	case 0xb7d3427f: FUNC_LOG_ERROR("TODO: iscntrl_ascii");
	case 0xb81cd66a: FUNC_LOG_ERROR("TODO: mbrlen");
	case 0xb9ed25d4: FUNC_LOG_ERROR("TODO: raw_spu_read_ulong");
	case 0xba62681f: FUNC_LOG_ERROR("TODO: mspace_memalign");
	case 0xbb605c96: FUNC_LOG_ERROR("TODO: pvalloc");
	case 0xbbd4582f: FUNC_LOG_ERROR("TODO: _Setloc");
	case 0xbc1d69c5: FUNC_LOG_ERROR("TODO: atoll");
	case 0xbc374779: FUNC_LOG_ERROR("TODO: _Getlname");
	case 0xbc5af0b5: FUNC_LOG_ERROR("TODO: fgetwc");
	case 0xbc7b4b8e: FUNC_LOG_ERROR("TODO: ctime");
	case 0xbe11beaa: FUNC_LOG_ERROR("TODO: _wremove");
	case 0xbe251a29: FUNC_LOG_ERROR("TODO: islower_ascii");
	case 0xbe6e5c58: FUNC_LOG_ERROR("TODO: spu_thread_read_uchar");
	case 0xbec43f86: FUNC_LOG_ERROR("TODO: raw_spu_read_ptr");
	case 0xbf5bf5ea: FUNC_LOG_ERROR("TODO: lseek64");
	case 0xbfcd1b3b: FUNC_LOG_ERROR("TODO: _Getdst");
	case 0xc01d9f97: FUNC_LOG_ERROR("TODO: printf");
	case 0xc08cc41d: FUNC_LOG_ERROR("TODO: wcstod");
	case 0xc0e27b2c: FUNC_LOG_ERROR("TODO: _Makestab");
	case 0xc155a73f: FUNC_LOG_ERROR("TODO: _WStoull");
	case 0xc15e657e: FUNC_LOG_ERROR("TODO: spu_raw_sprintf");
	case 0xc1a71972: FUNC_LOG_ERROR("TODO: _d2rv");
	case 0xc1b4bbb9: FUNC_LOG_ERROR("TODO: raw_spu_write_char");
	case 0xc1c8737c: FUNC_LOG_ERROR("TODO: _Getptoupper");
	case 0xc291e698: FUNC_LOG_ERROR("TODO: exit");
	case 0xc3c598e2: FUNC_LOG_ERROR("TODO: spu_printf_initialize");
	case 0xc3e14cbe: FUNC_LOG_ERROR("TODO: memcmp");
	case 0xc4178000: FUNC_LOG_ERROR("TODO: _rand_real3_TT800");
	case 0xc41c6e5d: FUNC_LOG_ERROR("TODO: _Scanf");
	case 0xc57337f8: FUNC_LOG_ERROR("TODO: _Fofind");
	case 0xc5c09834: FUNC_LOG_ERROR("TODO: strstr");
	case 0xc63c354f: FUNC_LOG_ERROR("TODO: _Exit");
	case 0xc69b2427: FUNC_LOG_ERROR("TODO: labs");
	case 0xc78df618: FUNC_LOG_ERROR("TODO: rand_real3_TT800");
	case 0xc7b62ab8: FUNC_LOG_ERROR("TODO: spu_thread_write_ullong");
	case 0xc9471fac: FUNC_LOG_ERROR("TODO: _Mtxinit");
	case 0xc94b27e3: FUNC_LOG_ERROR("TODO: _WStof");
	case 0xc95b20d3: FUNC_LOG_ERROR("TODO: fputwc");
	case 0xc9607d35: FUNC_LOG_ERROR("TODO: _Stopfx");
	case 0xc97a17d7: FUNC_LOG_ERROR("TODO: vsscanf");
	case 0xcab654bf: FUNC_LOG_ERROR("TODO: _Once_ctor");
	case 0xcb85ac70: FUNC_LOG_ERROR("TODO: mspace_malloc");
	case 0xcb9c535b: FUNC_LOG_ERROR("TODO: strftime");
	case 0xcbac7ad7: FUNC_LOG_ERROR("TODO: memchr");
	case 0xcbdc3a6d: FUNC_LOG_ERROR("TODO: raw_spu_write_int");
	case 0xcc5e0c72: FUNC_LOG_ERROR("TODO: _divi4");
	case 0xcca68e9c: FUNC_LOG_ERROR("TODO: putwc");
	case 0xce7a9e76: FUNC_LOG_ERROR("TODO: isprint_ascii");
	case 0xcecbcdc4: FUNC_LOG_ERROR("TODO: _Frv2d");
	case 0xcf863219: FUNC_LOG_ERROR("TODO: _Fwprep");
	case 0xcfbfb7a7: FUNC_LOG_ERROR("TODO: spu_printf_detach_thread");
	case 0xd14ece90: FUNC_LOG_ERROR("TODO: strtol");
	case 0xd1d69cb8: FUNC_LOG_ERROR("TODO: _Stod");
	case 0xd20f6601: FUNC_LOG_ERROR("TODO: independent_calloc");
	case 0xd2a99b1e: FUNC_LOG_ERROR("TODO: isprint");
	case 0xd2ac48d7: FUNC_LOG_ERROR("TODO: iswalnum");
	case 0xd360dcb4: FUNC_LOG_ERROR("TODO: fileno");
	case 0xd3964a09: FUNC_LOG_ERROR("TODO: __spu_thread_putfld");
	case 0xd40723d6: FUNC_LOG_ERROR("TODO: fread");
	case 0xd417eeb5: FUNC_LOG_ERROR("TODO: _Stoull");
	case 0xd4912ee3: FUNC_LOG_ERROR("TODO: _FDscale");
	case 0xd5c8cb55: FUNC_LOG_ERROR("TODO: spu_thread_write_ushort");
	case 0xd69c513d: FUNC_LOG_ERROR("TODO: _Wcscollx");
	case 0xd784459d: FUNC_LOG_ERROR("TODO: isupper");
	case 0xd7dc3a8f: FUNC_LOG_ERROR("TODO: strtod");
	case 0xd8b4eb20: FUNC_LOG_ERROR("TODO: __spu_thread_puttxt");
	case 0xd9674905: FUNC_LOG_ERROR("TODO: mspace_reallocalign");
	case 0xd9a4f812: FUNC_LOG_ERROR("TODO: atoff");
	case 0xda5a7eb8: FUNC_LOG_ERROR("TODO: strtoul");
	case 0xdaeada07: FUNC_LOG_ERROR("TODO: mallopt");
	case 0xddbac025: FUNC_LOG_ERROR("TODO: strcasecmp_ascii");
	case 0xddc71a75: FUNC_LOG_ERROR("TODO: _SCE_Assert");
	case 0xde1bb092: FUNC_LOG_ERROR("TODO: init_by_array_TT800");
	case 0xde32a334: FUNC_LOG_ERROR("TODO: _Exitspawn");
	case 0xde7aff7a: FUNC_LOG_ERROR("TODO: memcpy16");
	case 0xdebee2af: FUNC_LOG_ERROR("TODO: strchr");
	case 0xdef86a83: FUNC_LOG_ERROR("TODO: isxdigit_ascii");
	case 0xdfb52083: FUNC_LOG_ERROR("TODO: _Stoxflt");
	case 0xe03c7ab1: FUNC_LOG_ERROR("TODO: _Fspos");
	case 0xe1858899: FUNC_LOG_ERROR("TODO: _Getpwctrtab");
	case 0xe1bd3587: FUNC_LOG_ERROR("TODO: fclose");
	case 0xe1e83c65: FUNC_LOG_ERROR("TODO: strncmp");
	case 0xe2c5274a: FUNC_LOG_ERROR("TODO: _WStoflt");
	case 0xe3812672: FUNC_LOG_ERROR("TODO: fdopen");
	case 0xe3cc73f3: FUNC_LOG_ERROR("TODO: puts");
	case 0xe3d91db3: FUNC_LOG_ERROR("TODO: raw_spu_read_double");
	case 0xe40ba755: FUNC_LOG_ERROR("TODO: strtok");
	case 0xe44bf0bf: FUNC_LOG_ERROR("TODO: atof");
	case 0xe469fb20: FUNC_LOG_ERROR("TODO: _Atexit");
	case 0xe48348e9: FUNC_LOG_ERROR("TODO: vprintf");
	case 0xe4c51d4c: FUNC_LOG_ERROR("TODO: wcstoimax");
	case 0xe5ea9e2b: FUNC_LOG_ERROR("TODO: _Isdst");
	case 0xe5f09c80: FUNC_LOG_ERROR("TODO: llabs");
	case 0xe60ee9e5: FUNC_LOG_ERROR("TODO: fputws");
	case 0xe6a7de0a: FUNC_LOG_ERROR("TODO: ungetc");
	case 0xe7def231: FUNC_LOG_ERROR("TODO: _Getfloat");
	case 0xe89071ad: FUNC_LOG_ERROR("TODO: isalpha_ascii");
	case 0xe9137453: FUNC_LOG_ERROR("TODO: fwprintf");
	case 0xe9a2cc40: FUNC_LOG_ERROR("TODO: raw_spu_write_long");
	case 0xe9b560a5: FUNC_LOG_ERROR("TODO: sscanf");
	case 0xeb26298c: FUNC_LOG_ERROR("TODO: gmtime");
	case 0xeb40c9ec: FUNC_LOG_ERROR("TODO: rand_real2_TT800");
	case 0xeb8abe73: FUNC_LOG_ERROR("TODO: vwscanf");
	case 0xec9e7cb9: FUNC_LOG_ERROR("TODO: spu_thread_read_llong");
	case 0xecddba69: FUNC_LOG_ERROR("TODO: _WStodx");
	case 0xed6ec979: FUNC_LOG_ERROR("TODO: fsetpos");
	case 0xeda48c80: FUNC_LOG_ERROR("TODO: malloc_trim");
	case 0xeddcee2c: FUNC_LOG_ERROR("TODO: init_TT800");
	case 0xedec777d: FUNC_LOG_ERROR("TODO: _Ttotm");
	case 0xeeeb4f3e: FUNC_LOG_ERROR("TODO: _get_state_TT800");
	case 0xeeffc9a6: FUNC_LOG_ERROR("TODO: _wrename");
	case 0xef110b6b: FUNC_LOG_ERROR("TODO: unlink");
	case 0xf06eed36: FUNC_LOG_ERROR("TODO: wmemset");
	case 0xf0776a44: FUNC_LOG_ERROR("TODO: wcscmp");
	case 0xf0e022c6: FUNC_LOG_ERROR("TODO: getc");
	case 0xf2bbbee9: FUNC_LOG_ERROR("TODO: _Litob");
	case 0xf2fca4b2: FUNC_LOG_ERROR("TODO: spu_thread_write_llong");
	case 0xf356418c: FUNC_LOG_ERROR("TODO: open");
	case 0xf3ef3678: FUNC_LOG_ERROR("TODO: wcscspn");
	case 0xf41355f9: FUNC_LOG_ERROR("TODO: wcscpy");
	case 0xf418ee84: FUNC_LOG_ERROR("TODO: _WFwprep");
	case 0xf4207734: FUNC_LOG_ERROR("TODO: spu_thread_write_ulong");
	case 0xf5a32994: FUNC_LOG_ERROR("TODO: _Getpcostate");
	case 0xf5ef229c: FUNC_LOG_ERROR("TODO: _Getpwcostate");
	case 0xf5f7dda8: FUNC_LOG_ERROR("TODO: towupper");
	case 0xf68e2ac9: FUNC_LOG_ERROR("TODO: _init_malloc_lock");
	case 0xf7583d67: FUNC_LOG_ERROR("TODO: vscanf");
	case 0xf7908e27: FUNC_LOG_ERROR("TODO: strcspn");
	case 0xf7a14a22: FUNC_LOG_ERROR("TODO: realloc");
	case 0xf7d51596: FUNC_LOG_ERROR("TODO: scanf");
	case 0xf7ddb471: FUNC_LOG_ERROR("TODO: _Setgloballocale");
	case 0xf88f26c4: FUNC_LOG_ERROR("TODO: fwrite");
	case 0xf8935fe3: FUNC_LOG_ERROR("TODO: spu_thread_write_float");
	case 0xf89dc648: FUNC_LOG_ERROR("TODO: strpbrk");
	case 0xf9dae72c: FUNC_LOG_ERROR("TODO: setjmp");
	case 0xf9dba140: FUNC_LOG_ERROR("TODO: _Mtxlock");
	case 0xf9e26b72: FUNC_LOG_ERROR("TODO: _Once_dtor");
	case 0xfa00d211: FUNC_LOG_ERROR("TODO: read");
	case 0xfae4b063: FUNC_LOG_ERROR("TODO: _Strcollx");
	case 0xfaec8c60: FUNC_LOG_ERROR("TODO: fprintf");
	case 0xfb0f0018: FUNC_LOG_ERROR("TODO: _Makewct");
	case 0xfb2081fd: FUNC_LOG_ERROR("TODO: vfprintf");
	case 0xfb81426d: FUNC_LOG_ERROR("TODO: iswlower");
	case 0xfb8ea4d2: FUNC_LOG_ERROR("TODO: _Fd2rv");
	case 0xfc0428a6: FUNC_LOG_ERROR("TODO: strdup");
	case 0xfc60575c: FUNC_LOG_ERROR("TODO: __spu_thread_printf");
	case 0xfc606237: FUNC_LOG_ERROR("TODO: mbsrtowcs");
	case 0xfcac2e8e: FUNC_LOG_ERROR("TODO: mbstowcs");
	case 0xfd0cb96d: FUNC_LOG_ERROR("TODO: spu_thread_read_short");
	case 0xfd461e85: FUNC_LOG_ERROR("TODO: spu_thread_write_ldouble");
	case 0xfd6a1ddb: FUNC_LOG_ERROR("TODO: raw_spu_read_llong");
	case 0xfd81f6ca: FUNC_LOG_ERROR("TODO: _Stoflt");
	case 0xfe0261aa: FUNC_LOG_ERROR("TODO: mspace_free");
	case 0xfe630fd9: FUNC_LOG_ERROR("TODO: isblank");
	case 0xfe88e97e: FUNC_LOG_ERROR("TODO: fscanf");
	case 0xff689124: FUNC_LOG_ERROR("TODO: strtoimax");
	case 0xffbae95e: FUNC_LOG_ERROR("TODO: asctime");
	case 0xffbd876b: FUNC_LOG_ERROR("TODO: __raw_spu_puttxt");
	case 0x003395d9: FUNC_LOG_ERROR("TODO: _Feraise");
	case 0x00367be0: FUNC_LOG_ERROR("TODO: fminl");
	case 0x007854f4: FUNC_LOG_ERROR("TODO: _FDclass");
	case 0x00fde072: FUNC_LOG_ERROR("TODO: f_powf");
	case 0x010818fc: FUNC_LOG_ERROR("TODO: asinf4");
	case 0x012d0a91: FUNC_LOG_ERROR("TODO: _fminf4");
	case 0x016556df: FUNC_LOG_ERROR("TODO: _sinf4");
	case 0x01b84b27: FUNC_LOG_ERROR("TODO: llround");
	case 0x01ecef7d: FUNC_LOG_ERROR("TODO: _FCbuild");
	case 0x02e68d44: FUNC_LOG_ERROR("TODO: _f_fmodf");
	case 0x032cc709: FUNC_LOG_ERROR("TODO: csin");
	case 0x03593d2c: FUNC_LOG_ERROR("TODO: _f_expf");
	case 0x03aea906: FUNC_LOG_ERROR("TODO: divf4");
	case 0x0522d1af: FUNC_LOG_ERROR("TODO: _recipf4");
	case 0x054aae63: FUNC_LOG_ERROR("TODO: _fdimf4");
	case 0x05cb1718: FUNC_LOG_ERROR("TODO: f_fdimf");
	case 0x05e27a13: FUNC_LOG_ERROR("TODO: log10f4fast");
	case 0x05efc660: FUNC_LOG_ERROR("TODO: asin");
	case 0x05f1dc9e: FUNC_LOG_ERROR("TODO: _FExp");
	case 0x07274304: FUNC_LOG_ERROR("TODO: csinh");
	case 0x07daed62: FUNC_LOG_ERROR("TODO: log2f4");
	case 0x07f400e3: FUNC_LOG_ERROR("TODO: _LCbuild");
	case 0x080414bd: FUNC_LOG_ERROR("TODO: conjl");
	case 0x08139bd2: FUNC_LOG_ERROR("TODO: _fmaxf4");
	case 0x0829a21d: FUNC_LOG_ERROR("TODO: asinhl");
	case 0x0a242ed5: FUNC_LOG_ERROR("TODO: sinf4");
	case 0x0b3f4e90: FUNC_LOG_ERROR("TODO: catanhf");
	case 0x0bb036a6: FUNC_LOG_ERROR("TODO: _cosf4");
	case 0x0c14cfcc: FUNC_LOG_ERROR("TODO: fesetenv");
	case 0x0c9b8305: FUNC_LOG_ERROR("TODO: hypotf4");
	case 0x0cbdae68: FUNC_LOG_ERROR("TODO: sinf");
	case 0x0cf9b8bd: FUNC_LOG_ERROR("TODO: _Erfc");
	case 0x0d86295d: FUNC_LOG_ERROR("TODO: _LCaddcr");
	case 0x0e53319f: FUNC_LOG_ERROR("TODO: _asinf4");
	case 0x0e8573dc: FUNC_LOG_ERROR("TODO: expm1l");
	case 0x0f02f882: FUNC_LOG_ERROR("TODO: llrintl");
	case 0x0f428f0f: FUNC_LOG_ERROR("TODO: rint");
	case 0x0f721a9d: FUNC_LOG_ERROR("TODO: _LCsubcc");
	case 0x10627248: FUNC_LOG_ERROR("TODO: f_fmodf");
	case 0x11c51388: FUNC_LOG_ERROR("TODO: tgamma");
	case 0x1225dd31: FUNC_LOG_ERROR("TODO: casinf");
	case 0x12de4e46: FUNC_LOG_ERROR("TODO: _powf4");
	case 0x12e04cd7: FUNC_LOG_ERROR("TODO: cimagl");
	case 0x1313a420: FUNC_LOG_ERROR("TODO: acos");
	case 0x137f7e77: FUNC_LOG_ERROR("TODO: expf4");
	case 0x14208b00: FUNC_LOG_ERROR("TODO: _asinf4fast");
	case 0x1498a072: FUNC_LOG_ERROR("TODO: _Cmulcr");
	case 0x16bf208a: FUNC_LOG_ERROR("TODO: log10f");
	case 0x17316bee: FUNC_LOG_ERROR("TODO: log2");
	case 0x178d98dd: FUNC_LOG_ERROR("TODO: atanf4fast");
	case 0x17cd5d87: FUNC_LOG_ERROR("TODO: _recipf4fast");
	case 0x182cd542: FUNC_LOG_ERROR("TODO: tgammal");
	case 0x18668ce3: FUNC_LOG_ERROR("TODO: exp");
	case 0x18b26998: FUNC_LOG_ERROR("TODO: remainderl");
	case 0x18ec6099: FUNC_LOG_ERROR("TODO: rintl");
	case 0x1988732d: FUNC_LOG_ERROR("TODO: clog10");
	case 0x1a1adede: FUNC_LOG_ERROR("TODO: rsqrtf4fast");
	case 0x1acb2b16: FUNC_LOG_ERROR("TODO: acosf4");
	case 0x1bbdcd9f: FUNC_LOG_ERROR("TODO: expm1f4");
	case 0x1bcdeb47: FUNC_LOG_ERROR("TODO: _LSinh");
	case 0x1be996cc: FUNC_LOG_ERROR("TODO: _LCdivcc");
	case 0x1c11885d: FUNC_LOG_ERROR("TODO: _floorf4");
	case 0x1d35bfe4: FUNC_LOG_ERROR("TODO: _LLog");
	case 0x1d5bf5d0: FUNC_LOG_ERROR("TODO: _modff4");
	case 0x1e623f95: FUNC_LOG_ERROR("TODO: truncf4");
	case 0x1e85ef02: FUNC_LOG_ERROR("TODO: f_atanf");
	case 0x1e9fd6ba: FUNC_LOG_ERROR("TODO: _sinf4fast");
	case 0x2033eeb7: FUNC_LOG_ERROR("TODO: csqrt");
	case 0x2118fe46: FUNC_LOG_ERROR("TODO: cexpl");
	case 0x21a37b3e: FUNC_LOG_ERROR("TODO: log1pf");
	case 0x21e6d304: FUNC_LOG_ERROR("TODO: ceil");
	case 0x22c3e308: FUNC_LOG_ERROR("TODO: _exp2f4");
	case 0x238af59b: FUNC_LOG_ERROR("TODO: fegetenv");
	case 0x23b985f7: FUNC_LOG_ERROR("TODO: floorf");
	case 0x241f9337: FUNC_LOG_ERROR("TODO: _FCmulcr");
	case 0x24497c52: FUNC_LOG_ERROR("TODO: cosf");
	case 0x246ea8d0: FUNC_LOG_ERROR("TODO: f_sqrtf");
	case 0x2627d6b2: FUNC_LOG_ERROR("TODO: erfc");
	case 0x266d2473: FUNC_LOG_ERROR("TODO: _Caddcr");
	case 0x26deed0b: FUNC_LOG_ERROR("TODO: cosl");
	case 0x26ef50ed: FUNC_LOG_ERROR("TODO: asinh");
	case 0x28faaa5a: FUNC_LOG_ERROR("TODO: ilogbf4");
	case 0x29685118: FUNC_LOG_ERROR("TODO: _negatef4");
	case 0x2a138d2b: FUNC_LOG_ERROR("TODO: truncf");
	case 0x2a4dcbad: FUNC_LOG_ERROR("TODO: cacosl");
	case 0x2a89ce33: FUNC_LOG_ERROR("TODO: llrintf");
	case 0x2af4b73b: FUNC_LOG_ERROR("TODO: fmax");
	case 0x2b282ebb: FUNC_LOG_ERROR("TODO: sqrtl");
	case 0x2bb0f2c9: FUNC_LOG_ERROR("TODO: logb");
	case 0x2c45fe6a: FUNC_LOG_ERROR("TODO: fmaxl");
	case 0x2c601f3b: FUNC_LOG_ERROR("TODO: csinl");
	case 0x2cbb6f53: FUNC_LOG_ERROR("TODO: f_hypotf");
	case 0x2dcab6a4: FUNC_LOG_ERROR("TODO: nanl");
	case 0x2df339bc: FUNC_LOG_ERROR("TODO: _f_floorf");
	case 0x2e69bb2a: FUNC_LOG_ERROR("TODO: _FCosh");
	case 0x2ec867b4: FUNC_LOG_ERROR("TODO: exp2f4fast");
	case 0x30bc7a53: FUNC_LOG_ERROR("TODO: logf4");
	case 0x315673f6: FUNC_LOG_ERROR("TODO: _Csubcc");
	case 0x31be25c3: FUNC_LOG_ERROR("TODO: scalblnf");
	case 0x31db8c89: FUNC_LOG_ERROR("TODO: atan2");
	case 0x321c55de: FUNC_LOG_ERROR("TODO: nexttowardl");
	case 0x3261de11: FUNC_LOG_ERROR("TODO: fesetexceptflag");
	case 0x329ec019: FUNC_LOG_ERROR("TODO: rsqrtf4");
	case 0x32f994a1: FUNC_LOG_ERROR("TODO: cosf4fast");
	case 0x33e5929b: FUNC_LOG_ERROR("TODO: _LDsign");
	case 0x33f27f25: FUNC_LOG_ERROR("TODO: _FCdivcr");
	case 0x3436f008: FUNC_LOG_ERROR("TODO: csinhf");
	case 0x3459748b: FUNC_LOG_ERROR("TODO: log10f4");
	case 0x347c1ee1: FUNC_LOG_ERROR("TODO: atanf4");
	case 0x34c0371e: FUNC_LOG_ERROR("TODO: powl");
	case 0x358d7f93: FUNC_LOG_ERROR("TODO: _f_lrintf");
	case 0x3593a445: FUNC_LOG_ERROR("TODO: clog");
	case 0x35b6e70a: FUNC_LOG_ERROR("TODO: lrintl");
	case 0x35d3f688: FUNC_LOG_ERROR("TODO: creal");
	case 0x36778d1b: FUNC_LOG_ERROR("TODO: coshf");
	case 0x373054d1: FUNC_LOG_ERROR("TODO: cpow");
	case 0x37345541: FUNC_LOG_ERROR("TODO: log1pl");
	case 0x376fb27f: FUNC_LOG_ERROR("TODO: sinhl");
	case 0x3792b12d: FUNC_LOG_ERROR("TODO: lroundl");
	case 0x38ba5590: FUNC_LOG_ERROR("TODO: ccosl");
	case 0x38e69f09: FUNC_LOG_ERROR("TODO: pow");
	case 0x398483aa: FUNC_LOG_ERROR("TODO: _expm1f4fast");
	case 0x39ef81c9: FUNC_LOG_ERROR("TODO: f_fmaxf");
	case 0x3ad203fa: FUNC_LOG_ERROR("TODO: lrint");
	case 0x3adc01d7: FUNC_LOG_ERROR("TODO: f_frexpf");
	case 0x3b802524: FUNC_LOG_ERROR("TODO: ldexpf4");
	case 0x3c057fbd: FUNC_LOG_ERROR("TODO: atanf");
	case 0x3c616743: FUNC_LOG_ERROR("TODO: _LDtest");
	case 0x3cb818fa: FUNC_LOG_ERROR("TODO: _f_fdimf");
	case 0x3d4efafb: FUNC_LOG_ERROR("TODO: atan2l");
	case 0x3d549f2a: FUNC_LOG_ERROR("TODO: ctanhl");
	case 0x3d901a10: FUNC_LOG_ERROR("TODO: _ceilf4");
	case 0x3da55602: FUNC_LOG_ERROR("TODO: fabsf");
	case 0x3dfa060f: FUNC_LOG_ERROR("TODO: scalbnl");
	case 0x3e7eb58f: FUNC_LOG_ERROR("TODO: frexpf4");
	case 0x3e919cba: FUNC_LOG_ERROR("TODO: scalbnf");
	case 0x3ec9de23: FUNC_LOG_ERROR("TODO: _cbrtf4");
	case 0x3eeedb0e: FUNC_LOG_ERROR("TODO: _Dclass");
	case 0x3f6262b3: FUNC_LOG_ERROR("TODO: f_fminf");
	case 0x3f701e78: FUNC_LOG_ERROR("TODO: _Poly");
	case 0x4020f5ef: FUNC_LOG_ERROR("TODO: cbrt");
	case 0x405f9727: FUNC_LOG_ERROR("TODO: _log1pf4fast");
	case 0x40a2e212: FUNC_LOG_ERROR("TODO: _fabsf4");
	case 0x4111b546: FUNC_LOG_ERROR("TODO: _LExp");
	case 0x411434bb: FUNC_LOG_ERROR("TODO: asinf");
	case 0x414c5ecc: FUNC_LOG_ERROR("TODO: _f_hypotf");
	case 0x4152669c: FUNC_LOG_ERROR("TODO: scalbln");
	case 0x417851ce: FUNC_LOG_ERROR("TODO: feholdexcept");
	case 0x418036e3: FUNC_LOG_ERROR("TODO: _FTgamma");
	case 0x4189a367: FUNC_LOG_ERROR("TODO: remquo");
	case 0x41d1b236: FUNC_LOG_ERROR("TODO: _f_rintf");
	case 0x430309a1: FUNC_LOG_ERROR("TODO: ldexpf");
	case 0x434881a0: FUNC_LOG_ERROR("TODO: cacosf");
	case 0x43d522f4: FUNC_LOG_ERROR("TODO: cabsl");
	case 0x44cd6308: FUNC_LOG_ERROR("TODO: remainder");
	case 0x44cf744b: FUNC_LOG_ERROR("TODO: tanhl");
	case 0x45034943: FUNC_LOG_ERROR("TODO: nan");
	case 0x452ac4bb: FUNC_LOG_ERROR("TODO: floorf4");
	case 0x453f9e91: FUNC_LOG_ERROR("TODO: cbrtf");
	case 0x46b66f76: FUNC_LOG_ERROR("TODO: csqrtl");
	case 0x46cf72d9: FUNC_LOG_ERROR("TODO: fdimf");
	case 0x47433144: FUNC_LOG_ERROR("TODO: expm1f4fast");
	case 0x475d855b: FUNC_LOG_ERROR("TODO: trunc");
	case 0x476b5591: FUNC_LOG_ERROR("TODO: fmaf");
	case 0x48157605: FUNC_LOG_ERROR("TODO: _f_llrintf");
	case 0x4826db61: FUNC_LOG_ERROR("TODO: fma");
	case 0x4875601d: FUNC_LOG_ERROR("TODO: _exp2f4fast");
	case 0x487bbd1c: FUNC_LOG_ERROR("TODO: tanf4");
	case 0x488df791: FUNC_LOG_ERROR("TODO: cexp");
	case 0x48d462a9: FUNC_LOG_ERROR("TODO: _FDint");
	case 0x4930ac11: FUNC_LOG_ERROR("TODO: logbl");
	case 0x4a5ae27d: FUNC_LOG_ERROR("TODO: f_exp2f");
	case 0x4a6ca9a6: FUNC_LOG_ERROR("TODO: powf4");
	case 0x4ab22a63: FUNC_LOG_ERROR("TODO: _Caddcc");
	case 0x4add664c: FUNC_LOG_ERROR("TODO: feclearexcept");
	case 0x4ae52dd3: FUNC_LOG_ERROR("TODO: exp2");
	case 0x4b03d5b2: FUNC_LOG_ERROR("TODO: f_rintf");
	case 0x4b584841: FUNC_LOG_ERROR("TODO: f_asinf");
	case 0x4cb5fa99: FUNC_LOG_ERROR("TODO: nexttoward");
	case 0x4d878773: FUNC_LOG_ERROR("TODO: remainderf4");
	case 0x4ddb926b: FUNC_LOG_ERROR("TODO: powf");
	case 0x4e010403: FUNC_LOG_ERROR("TODO: copysign");
	case 0x4eb5eb51: FUNC_LOG_ERROR("TODO: sin");
	case 0x4fa4f5ec: FUNC_LOG_ERROR("TODO: nexttowardf");
	case 0x501c412f: FUNC_LOG_ERROR("TODO: cargf");
	case 0x519ebb77: FUNC_LOG_ERROR("TODO: floor");
	case 0x547fb4a7: FUNC_LOG_ERROR("TODO: sinf4fast");
	case 0x54d2fb8c: FUNC_LOG_ERROR("TODO: rintf");
	case 0x5516d621: FUNC_LOG_ERROR("TODO: acosl");
	case 0x55c8a549: FUNC_LOG_ERROR("TODO: truncl");
	case 0x56c573a8: FUNC_LOG_ERROR("TODO: log1p");
	case 0x575e9b6e: FUNC_LOG_ERROR("TODO: asinl");
	case 0x58eb9e57: FUNC_LOG_ERROR("TODO: fabs");
	case 0x596ab55c: FUNC_LOG_ERROR("TODO: atanh");
	case 0x5b18eded: FUNC_LOG_ERROR("TODO: clogl");
	case 0x5b474c22: FUNC_LOG_ERROR("TODO: casinhl");
	case 0x5bfd37be: FUNC_LOG_ERROR("TODO: _FCaddcc");
	case 0x5e48dede: FUNC_LOG_ERROR("TODO: exp2f4");
	case 0x5ee10a95: FUNC_LOG_ERROR("TODO: catanh");
	case 0x5ee37927: FUNC_LOG_ERROR("TODO: _LErfc");
	case 0x60e9ff3c: FUNC_LOG_ERROR("TODO: _expm1f4");
	case 0x61250988: FUNC_LOG_ERROR("TODO: catanl");
	case 0x6261c0b5: FUNC_LOG_ERROR("TODO: _log10f4");
	case 0x63bbdfa6: FUNC_LOG_ERROR("TODO: _FCmulcc");
	case 0x642e3d18: FUNC_LOG_ERROR("TODO: _frexpf4");
	case 0x642f7d6b: FUNC_LOG_ERROR("TODO: f_copysignf");
	case 0x645557bd: FUNC_LOG_ERROR("TODO: copysignl");
	case 0x64abdb4d: FUNC_LOG_ERROR("TODO: csinhl");
	case 0x657d0e83: FUNC_LOG_ERROR("TODO: divf4fast");
	case 0x65935877: FUNC_LOG_ERROR("TODO: ilogbf");
	case 0x659e011e: FUNC_LOG_ERROR("TODO: sqrt");
	case 0x6636c4a5: FUNC_LOG_ERROR("TODO: frexpf");
	case 0x664e04b9: FUNC_LOG_ERROR("TODO: negatef4");
	case 0x6764c707: FUNC_LOG_ERROR("TODO: f_log2f");
	case 0x683cacb3: FUNC_LOG_ERROR("TODO: sinh");
	case 0x68a8957f: FUNC_LOG_ERROR("TODO: casinhf");
	case 0x68f72416: FUNC_LOG_ERROR("TODO: nextafterl");
	case 0x69040b9b: FUNC_LOG_ERROR("TODO: logbf4");
	case 0x69725dce: FUNC_LOG_ERROR("TODO: lgamma");
	case 0x6ad1c42b: FUNC_LOG_ERROR("TODO: _sincosf4");
	case 0x6b660894: FUNC_LOG_ERROR("TODO: _acosf4fast");
	case 0x6b6ab2a9: FUNC_LOG_ERROR("TODO: _LDclass");
	case 0x6c009c56: FUNC_LOG_ERROR("TODO: f_log10f");
	case 0x6c6285c6: FUNC_LOG_ERROR("TODO: acoshf");
	case 0x6cc4bd13: FUNC_LOG_ERROR("TODO: casinh");
	case 0x6ddd31b2: FUNC_LOG_ERROR("TODO: hypot");
	case 0x6df35518: FUNC_LOG_ERROR("TODO: floorl");
	case 0x6e9eb0dc: FUNC_LOG_ERROR("TODO: sincosf4fast");
	case 0x6ef6b083: FUNC_LOG_ERROR("TODO: _FCsubcr");
	case 0x6f5dd7d2: FUNC_LOG_ERROR("TODO: cexpf");
	case 0x6f639afb: FUNC_LOG_ERROR("TODO: f_llroundf");
	case 0x6fcc1e27: FUNC_LOG_ERROR("TODO: _FPoly");
	case 0x70357b12: FUNC_LOG_ERROR("TODO: _atanf4fast");
	case 0x7048396e: FUNC_LOG_ERROR("TODO: carg");
	case 0x705d9e24: FUNC_LOG_ERROR("TODO: f_acosf");
	case 0x70f71871: FUNC_LOG_ERROR("TODO: _FCdivcc");
	case 0x71293b71: FUNC_LOG_ERROR("TODO: _FLog");
	case 0x714adce1: FUNC_LOG_ERROR("TODO: log");
	case 0x71f2bc56: FUNC_LOG_ERROR("TODO: _divf4fast");
	case 0x728149e5: FUNC_LOG_ERROR("TODO: f_ldexpf");
	case 0x729b7269: FUNC_LOG_ERROR("TODO: cproj");
	case 0x72a3ed28: FUNC_LOG_ERROR("TODO: fesettrapenable");
	case 0x72f1f64b: FUNC_LOG_ERROR("TODO: _logbf4");
	case 0x734ca589: FUNC_LOG_ERROR("TODO: _f_cosf");
	case 0x742f12b4: FUNC_LOG_ERROR("TODO: _Sin");
	case 0x74902d4b: FUNC_LOG_ERROR("TODO: expf4fast");
	case 0x749440f9: FUNC_LOG_ERROR("TODO: lgammal");
	case 0x752fa85e: FUNC_LOG_ERROR("TODO: fmaxf4");
	case 0x758f33dc: FUNC_LOG_ERROR("TODO: nearbyint");
	case 0x75e3e2e9: FUNC_LOG_ERROR("TODO: nearbyintl");
	case 0x76afaf04: FUNC_LOG_ERROR("TODO: _sqrtf4");
	case 0x76e639ec: FUNC_LOG_ERROR("TODO: _atanf4");
	case 0x772f1e4d: FUNC_LOG_ERROR("TODO: lround");
	case 0x7793a86b: FUNC_LOG_ERROR("TODO: ctanf");
	case 0x7831a2e0: FUNC_LOG_ERROR("TODO: hypotl");
	case 0x78e4590a: FUNC_LOG_ERROR("TODO: acosh");
	case 0x790c53bd: FUNC_LOG_ERROR("TODO: _Fpcomp");
	case 0x7919f414: FUNC_LOG_ERROR("TODO: _f_nearbyintf");
	case 0x79ba9b5c: FUNC_LOG_ERROR("TODO: expl");
	case 0x7a893af1: FUNC_LOG_ERROR("TODO: _rsqrtf4");
	case 0x7ab679da: FUNC_LOG_ERROR("TODO: f_cosf");
	case 0x7c2eaeb5: FUNC_LOG_ERROR("TODO: fminf");
	case 0x7d02a5ca: FUNC_LOG_ERROR("TODO: sqrtf4fast");
	case 0x7d6191d0: FUNC_LOG_ERROR("TODO: _Cosh");
	case 0x7f381837: FUNC_LOG_ERROR("TODO: frexp");
	case 0x7f579e03: FUNC_LOG_ERROR("TODO: atan");
	case 0x7f91cd41: FUNC_LOG_ERROR("TODO: tanf4fast");
	case 0x812ed488: FUNC_LOG_ERROR("TODO: cabsf");
	case 0x81daf880: FUNC_LOG_ERROR("TODO: _LCsubcr");
	case 0x8217e783: FUNC_LOG_ERROR("TODO: cosh");
	case 0x833e6b0e: FUNC_LOG_ERROR("TODO: cimag");
	case 0x834f5917: FUNC_LOG_ERROR("TODO: ccosh");
	case 0x842cb14d: FUNC_LOG_ERROR("TODO: _log1pf4");
	case 0x8451edf0: FUNC_LOG_ERROR("TODO: sqrtf");
	case 0x889cccb0: FUNC_LOG_ERROR("TODO: llroundl");
	case 0x88fb4a66: FUNC_LOG_ERROR("TODO: recipf4fast");
	case 0x892f2590: FUNC_LOG_ERROR("TODO: fegetround");
	case 0x895cdb49: FUNC_LOG_ERROR("TODO: fmaxf");
	case 0x89b507b3: FUNC_LOG_ERROR("TODO: catanhl");
	case 0x89d1d168: FUNC_LOG_ERROR("TODO: _LAtan");
	case 0x8b168769: FUNC_LOG_ERROR("TODO: fdiml");
	case 0x8bd1deb2: FUNC_LOG_ERROR("TODO: _LTgamma");
	case 0x8bd67efc: FUNC_LOG_ERROR("TODO: erf");
	case 0x8c85369b: FUNC_LOG_ERROR("TODO: _f_fminf");
	case 0x8d5858db: FUNC_LOG_ERROR("TODO: _f_exp2f");
	case 0x8e01379e: FUNC_LOG_ERROR("TODO: cacoshf");
	case 0x8e258fa0: FUNC_LOG_ERROR("TODO: cacos");
	case 0x8ecae294: FUNC_LOG_ERROR("TODO: nextafter");
	case 0x8f2bcdb5: FUNC_LOG_ERROR("TODO: _logf4");
	case 0x8f96319e: FUNC_LOG_ERROR("TODO: log10l");
	case 0x8fb7bac7: FUNC_LOG_ERROR("TODO: _sqrtf4fast");
	case 0x904e646b: FUNC_LOG_ERROR("TODO: cargl");
	case 0x90f0242f: FUNC_LOG_ERROR("TODO: _f_sinf");
	case 0x9110708a: FUNC_LOG_ERROR("TODO: modfl");
	case 0x91cdfdb0: FUNC_LOG_ERROR("TODO: asinf4fast");
	case 0x9232baea: FUNC_LOG_ERROR("TODO: _FDtest");
	case 0x9245e01b: FUNC_LOG_ERROR("TODO: _divf4");
	case 0x9379e36e: FUNC_LOG_ERROR("TODO: tanf");
	case 0x938fb946: FUNC_LOG_ERROR("TODO: _tanf4fast");
	case 0x947ae18e: FUNC_LOG_ERROR("TODO: _LHypot");
	case 0x9558ed08: FUNC_LOG_ERROR("TODO: lrintf");
	case 0x95dfecb1: FUNC_LOG_ERROR("TODO: _FCsubcc");
	case 0x961688d1: FUNC_LOG_ERROR("TODO: f_nearbyintf");
	case 0x9616e336: FUNC_LOG_ERROR("TODO: _FHypot");
	case 0x964ac044: FUNC_LOG_ERROR("TODO: creall");
	case 0x96d1b95e: FUNC_LOG_ERROR("TODO: log2f4fast");
	case 0x9700d9cd: FUNC_LOG_ERROR("TODO: clogf");
	case 0x970a3432: FUNC_LOG_ERROR("TODO: cacosh");
	case 0x99a6c261: FUNC_LOG_ERROR("TODO: catanf");
	case 0x99c228fc: FUNC_LOG_ERROR("TODO: roundl");
	case 0x9a81e583: FUNC_LOG_ERROR("TODO: fmodf");
	case 0x9af30eaf: FUNC_LOG_ERROR("TODO: casin");
	case 0x9e289062: FUNC_LOG_ERROR("TODO: _f_ceilf");
	case 0x9e3ada21: FUNC_LOG_ERROR("TODO: logl");
	case 0x9e8130b6: FUNC_LOG_ERROR("TODO: ccos");
	case 0x9f03dd3e: FUNC_LOG_ERROR("TODO: lgammaf");
	case 0x9f0efc6e: FUNC_LOG_ERROR("TODO: exp2l");
	case 0x9f46f5a4: FUNC_LOG_ERROR("TODO: tgammaf");
	case 0x9f65bd34: FUNC_LOG_ERROR("TODO: fdimf4");
	case 0x9f78f052: FUNC_LOG_ERROR("TODO: cos");
	case 0x9fded78a: FUNC_LOG_ERROR("TODO: _acosf4");
	case 0xa0160c30: FUNC_LOG_ERROR("TODO: _copysignf4");
	case 0xa20827a8: FUNC_LOG_ERROR("TODO: ctanl");
	case 0xa2c81938: FUNC_LOG_ERROR("TODO: _LSin");
	case 0xa4578433: FUNC_LOG_ERROR("TODO: fmin");
	case 0xa46a70a1: FUNC_LOG_ERROR("TODO: atanhl");
	case 0xa4ca5cf2: FUNC_LOG_ERROR("TODO: llroundf");
	case 0xa56557b6: FUNC_LOG_ERROR("TODO: catan");
	case 0xa5d0b260: FUNC_LOG_ERROR("TODO: acoshl");
	case 0xa713f8cf: FUNC_LOG_ERROR("TODO: modf");
	case 0xa7658186: FUNC_LOG_ERROR("TODO: log1pf4");
	case 0xa823836b: FUNC_LOG_ERROR("TODO: ilogb");
	case 0xa8c16038: FUNC_LOG_ERROR("TODO: _FDsign");
	case 0xa8d180e8: FUNC_LOG_ERROR("TODO: _Cbuild");
	case 0xa92bcc85: FUNC_LOG_ERROR("TODO: cabs");
	case 0xa9e039c4: FUNC_LOG_ERROR("TODO: erfcf");
	case 0xaaa270dc: FUNC_LOG_ERROR("TODO: _LCdivcr");
	case 0xab377381: FUNC_LOG_ERROR("TODO: log2f");
	case 0xabdccc7a: FUNC_LOG_ERROR("TODO: f_atan2f");
	case 0xacca2f83: FUNC_LOG_ERROR("TODO: copysignf");
	case 0xad17e787: FUNC_LOG_ERROR("TODO: _Dint");
	case 0xad3a093d: FUNC_LOG_ERROR("TODO: _LCosh");
	case 0xad5d3e57: FUNC_LOG_ERROR("TODO: _FLgamma");
	case 0xaddce673: FUNC_LOG_ERROR("TODO: erfcl");
	case 0xafa13040: FUNC_LOG_ERROR("TODO: f_llrintf");
	case 0xafcfdad7: FUNC_LOG_ERROR("TODO: _Lgamma");
	case 0xafd9a625: FUNC_LOG_ERROR("TODO: cimagf");
	case 0xb0fa1592: FUNC_LOG_ERROR("TODO: clog10l");
	case 0xb24bd2f8: FUNC_LOG_ERROR("TODO: logbf");
	case 0xb348c5c2: FUNC_LOG_ERROR("TODO: _LLgamma");
	case 0xb412a8dc: FUNC_LOG_ERROR("TODO: _LDint");
	case 0xb4ef29d5: FUNC_LOG_ERROR("TODO: f_floorf");
	case 0xb4f4513e: FUNC_LOG_ERROR("TODO: _Tgamma");
	case 0xb54cc9a1: FUNC_LOG_ERROR("TODO: f_sinf");
	case 0xb5961d4e: FUNC_LOG_ERROR("TODO: _sincosf4fast");
	case 0xb598a495: FUNC_LOG_ERROR("TODO: fmodl");
	case 0xb5e28191: FUNC_LOG_ERROR("TODO: _FSin");
	case 0xb7696143: FUNC_LOG_ERROR("TODO: nextafterf");
	case 0xb79012ba: FUNC_LOG_ERROR("TODO: modff");
	case 0xb89863bc: FUNC_LOG_ERROR("TODO: _rsqrtf4fast");
	case 0xb8aa984e: FUNC_LOG_ERROR("TODO: _expf4");
	case 0xb94b9d13: FUNC_LOG_ERROR("TODO: _Dtest");
	case 0xb9d2ad22: FUNC_LOG_ERROR("TODO: remquol");
	case 0xba136594: FUNC_LOG_ERROR("TODO: csinf");
	case 0xba84eab5: FUNC_LOG_ERROR("TODO: coshl");
	case 0xbaf11866: FUNC_LOG_ERROR("TODO: ceilf");
	case 0xbb165807: FUNC_LOG_ERROR("TODO: expm1f");
	case 0xbb208b20: FUNC_LOG_ERROR("TODO: cbrtf4fast");
	case 0xbb761c89: FUNC_LOG_ERROR("TODO: remquof");
	case 0xbbaa300b: FUNC_LOG_ERROR("TODO: f_log1pf");
	case 0xbbf7354e: FUNC_LOG_ERROR("TODO: fegetexceptflag");
	case 0xbd7410d9: FUNC_LOG_ERROR("TODO: recipf4");
	case 0xbd8bb75c: FUNC_LOG_ERROR("TODO: asinhf");
	case 0xbf23f2e7: FUNC_LOG_ERROR("TODO: cprojl");
	case 0xbfda6837: FUNC_LOG_ERROR("TODO: _f_log10f");
	case 0xc0609820: FUNC_LOG_ERROR("TODO: nearbyintf");
	case 0xc0bcf25e: FUNC_LOG_ERROR("TODO: _logf4fast");
	case 0xc357b33a: FUNC_LOG_ERROR("TODO: frexpl");
	case 0xc406dd09: FUNC_LOG_ERROR("TODO: cbrtf4");
	case 0xc41f01db: FUNC_LOG_ERROR("TODO: fminf4");
	case 0xc477c0f6: FUNC_LOG_ERROR("TODO: f_lroundf");
	case 0xc4cccd1f: FUNC_LOG_ERROR("TODO: modff4");
	case 0xc7369fce: FUNC_LOG_ERROR("TODO: _Atan");
	case 0xc78ac9d0: FUNC_LOG_ERROR("TODO: scalbn");
	case 0xc7b45a19: FUNC_LOG_ERROR("TODO: _LFpcomp");
	case 0xc7f1d407: FUNC_LOG_ERROR("TODO: fmal");
	case 0xc7fb73d6: FUNC_LOG_ERROR("TODO: f_lrintf");
	case 0xc8910002: FUNC_LOG_ERROR("TODO: ilogbl");
	case 0xc8dd9279: FUNC_LOG_ERROR("TODO: expm1");
	case 0xc90f4bbc: FUNC_LOG_ERROR("TODO: _atan2f4");
	case 0xc9481758: FUNC_LOG_ERROR("TODO: _tanf4");
	case 0xc94fcc63: FUNC_LOG_ERROR("TODO: cbrtl");
	case 0xc977e1ea: FUNC_LOG_ERROR("TODO: fetestexcept");
	case 0xc984bf53: FUNC_LOG_ERROR("TODO: roundf");
	case 0xc9c536ce: FUNC_LOG_ERROR("TODO: _ldexpf4");
	case 0xca239640: FUNC_LOG_ERROR("TODO: fmodf4");
	case 0xca463458: FUNC_LOG_ERROR("TODO: _Log");
	case 0xcaaf7ae7: FUNC_LOG_ERROR("TODO: cprojf");
	case 0xcac167a5: FUNC_LOG_ERROR("TODO: _Cmulcc");
	case 0xcb6599c0: FUNC_LOG_ERROR("TODO: exp2f");
	case 0xcb6a147e: FUNC_LOG_ERROR("TODO: _cosf4fast");
	case 0xcbdf9afb: FUNC_LOG_ERROR("TODO: _log10f4fast");
	case 0xccc66f11: FUNC_LOG_ERROR("TODO: _FSinh");
	case 0xce91ff18: FUNC_LOG_ERROR("TODO: nanf");
	case 0xcfee82d8: FUNC_LOG_ERROR("TODO: _remainderf4");
	case 0xd0fd3ca8: FUNC_LOG_ERROR("TODO: _hypotf4");
	case 0xd125b89e: FUNC_LOG_ERROR("TODO: conjf");
	case 0xd1a3574c: FUNC_LOG_ERROR("TODO: clog10f");
	case 0xd231e30a: FUNC_LOG_ERROR("TODO: ldexpl");
	case 0xd28ef6dd: FUNC_LOG_ERROR("TODO: _Hypot");
	case 0xd2a666c9: FUNC_LOG_ERROR("TODO: ctanh");
	case 0xd3a346a8: FUNC_LOG_ERROR("TODO: tanl");
	case 0xd40f3f2c: FUNC_LOG_ERROR("TODO: erff");
	case 0xd42904b7: FUNC_LOG_ERROR("TODO: fabsl");
	case 0xd477852d: FUNC_LOG_ERROR("TODO: logf");
	case 0xd48eaae1: FUNC_LOG_ERROR("TODO: scalblnl");
	case 0xd4f37b9d: FUNC_LOG_ERROR("TODO: tanhf");
	case 0xd50277ad: FUNC_LOG_ERROR("TODO: tan");
	case 0xd54039cb: FUNC_LOG_ERROR("TODO: fegettrapenable");
	case 0xd5adc4b2: FUNC_LOG_ERROR("TODO: cpowl");
	case 0xd5d38552: FUNC_LOG_ERROR("TODO: _LCaddcc");
	case 0xd612fa16: FUNC_LOG_ERROR("TODO: _Sinh");
	case 0xd70df92a: FUNC_LOG_ERROR("TODO: _FCaddcr");
	case 0xd7653782: FUNC_LOG_ERROR("TODO: sinhf");
	case 0xd76a16da: FUNC_LOG_ERROR("TODO: _fmaf4");
	case 0xd8270894: FUNC_LOG_ERROR("TODO: fdim");
	case 0xd8c4096d: FUNC_LOG_ERROR("TODO: atan2f4");
	case 0xd8d157f5: FUNC_LOG_ERROR("TODO: f_expf");
	case 0xd8f79f4c: FUNC_LOG_ERROR("TODO: log10");
	case 0xd97852b7: FUNC_LOG_ERROR("TODO: sinl");
	case 0xd97ce5d4: FUNC_LOG_ERROR("TODO: fesetround");
	case 0xda217d1f: FUNC_LOG_ERROR("TODO: atanl");
	case 0xda31fc5d: FUNC_LOG_ERROR("TODO: _FFpcomp");
	case 0xdc14974c: FUNC_LOG_ERROR("TODO: fmaf4");
	case 0xdc151707: FUNC_LOG_ERROR("TODO: _f_log2f");
	case 0xdd8660d2: FUNC_LOG_ERROR("TODO: atan2f4fast");
	case 0xdd92118e: FUNC_LOG_ERROR("TODO: ceill");
	case 0xdddabb32: FUNC_LOG_ERROR("TODO: remainderf");
	case 0xde7833f2: FUNC_LOG_ERROR("TODO: _log2f4fast");
	case 0xdece76a6: FUNC_LOG_ERROR("TODO: acosf");
	case 0xdfd41734: FUNC_LOG_ERROR("TODO: _Exp");
	case 0xdffb4e3c: FUNC_LOG_ERROR("TODO: casinl");
	case 0xe1288c47: FUNC_LOG_ERROR("TODO: atanhf");
	case 0xe1c71b05: FUNC_LOG_ERROR("TODO: ccoshl");
	case 0xe2b596ec: FUNC_LOG_ERROR("TODO: ccosf");
	case 0xe2de89e6: FUNC_LOG_ERROR("TODO: csqrtf");
	case 0xe2f1d4b2: FUNC_LOG_ERROR("TODO: tanh");
	case 0xe31cc0d3: FUNC_LOG_ERROR("TODO: _ilogbf4");
	case 0xe3e379b8: FUNC_LOG_ERROR("TODO: _expf4fast");
	case 0xe584836c: FUNC_LOG_ERROR("TODO: _LPoly");
	case 0xe58fc9b5: FUNC_LOG_ERROR("TODO: erfl");
	case 0xe5a0be9f: FUNC_LOG_ERROR("TODO: _powf4fast");
	case 0xe5d2293f: FUNC_LOG_ERROR("TODO: _Force_raise");
	case 0xe5ea65e8: FUNC_LOG_ERROR("TODO: feraiseexcept");
	case 0xe6c1ff41: FUNC_LOG_ERROR("TODO: llrint");
	case 0xe769e5cf: FUNC_LOG_ERROR("TODO: fmod");
	case 0xe8fcf1f8: FUNC_LOG_ERROR("TODO: acosf4fast");
	case 0xe913a166: FUNC_LOG_ERROR("TODO: logf4fast");
	case 0xe92f3fb8: FUNC_LOG_ERROR("TODO: _f_fmaf");
	case 0xe93abfca: FUNC_LOG_ERROR("TODO: ctan");
	case 0xe9ac8223: FUNC_LOG_ERROR("TODO: _LCmulcr");
	case 0xe9f501df: FUNC_LOG_ERROR("TODO: crealf");
	case 0xea1e83e3: FUNC_LOG_ERROR("TODO: f_logf");
	case 0xeac62795: FUNC_LOG_ERROR("TODO: _Cdivcc");
	case 0xeac7ca2c: FUNC_LOG_ERROR("TODO: ceilf4");
	case 0xebb4e08a: FUNC_LOG_ERROR("TODO: hypotf");
	case 0xec43b983: FUNC_LOG_ERROR("TODO: _f_sqrtf");
	case 0xec7da0c8: FUNC_LOG_ERROR("TODO: _atan2f4fast");
	case 0xed05c265: FUNC_LOG_ERROR("TODO: sqrtf4");
	case 0xed9d1ac5: FUNC_LOG_ERROR("TODO: f_tanf");
	case 0xeda86c48: FUNC_LOG_ERROR("TODO: copysignf4");
	case 0xee0db701: FUNC_LOG_ERROR("TODO: _Csubcr");
	case 0xee204ac6: FUNC_LOG_ERROR("TODO: f_ceilf");
	case 0xee303936: FUNC_LOG_ERROR("TODO: _Dsign");
	case 0xeed82401: FUNC_LOG_ERROR("TODO: _f_logf");
	case 0xf0947035: FUNC_LOG_ERROR("TODO: ctanhf");
	case 0xf0ab77c1: FUNC_LOG_ERROR("TODO: ccoshf");
	case 0xf16568af: FUNC_LOG_ERROR("TODO: _FAtan");
	case 0xf19c5e94: FUNC_LOG_ERROR("TODO: sincosf4");
	case 0xf1aaa2f8: FUNC_LOG_ERROR("TODO: conj");
	case 0xf3bd7d08: FUNC_LOG_ERROR("TODO: _cbrtf4fast");
	case 0xf3ec0258: FUNC_LOG_ERROR("TODO: round");
	case 0xf4ad6ea8: FUNC_LOG_ERROR("TODO: ldexp");
	case 0xf537d837: FUNC_LOG_ERROR("TODO: _truncf4");
	case 0xf5cd1e19: FUNC_LOG_ERROR("TODO: cosf4");
	case 0xf7844153: FUNC_LOG_ERROR("TODO: _f_fmaxf");
	case 0xf83a372f: FUNC_LOG_ERROR("TODO: f_fmaf");
	case 0xf95b7769: FUNC_LOG_ERROR("TODO: powf4fast");
	case 0xf99da2fc: FUNC_LOG_ERROR("TODO: fabsf4");
	case 0xfa28434b: FUNC_LOG_ERROR("TODO: log2l");
	case 0xfa765d42: FUNC_LOG_ERROR("TODO: _Cdivcr");
	case 0xfa97afbf: FUNC_LOG_ERROR("TODO: feupdateenv");
	case 0xfae9e727: FUNC_LOG_ERROR("TODO: _f_copysignf");
	case 0xfb6e6213: FUNC_LOG_ERROR("TODO: log1pf4fast");
	case 0xfb932a56: FUNC_LOG_ERROR("TODO: atan2f");
	case 0xfbb4047a: FUNC_LOG_ERROR("TODO: lroundf");
	case 0xfbe88922: FUNC_LOG_ERROR("TODO: _FErfc");
	case 0xfcedabc3: FUNC_LOG_ERROR("TODO: _fmodf4");
	case 0xfcf08193: FUNC_LOG_ERROR("TODO: expf");
	case 0xfdec16e1: FUNC_LOG_ERROR("TODO: cacoshl");
	case 0xfe23dbe9: FUNC_LOG_ERROR("TODO: _log2f4");
	case 0xff036800: FUNC_LOG_ERROR("TODO: cpowf");
	case 0xfffe79bf: FUNC_LOG_ERROR("TODO: _LCmulcc");
	case 0x06a840f5: FUNC_LOG_ERROR("TODO: sys_dbg_set_stacksize_ppu_exception_handler");
	case 0x08ef08a9: FUNC_LOG_ERROR("TODO: sys_dbg_get_spu_thread_group_ids");
	case 0x113b0bea: FUNC_LOG_ERROR("TODO: sys_dbg_get_ppu_thread_ids");
	case 0x1860f909: FUNC_LOG_ERROR("TODO: sys_dbg_get_spu_thread_ids");
	case 0x22916f45: FUNC_LOG_ERROR("TODO: sys_dbg_register_ppu_exception_handler");
	case 0x24a3d413: FUNC_LOG_ERROR("TODO: sys_dbg_mat_set_condition");
	case 0x266c2bd3: FUNC_LOG_ERROR("TODO: sys_dbg_read_spu_thread_context2");
	case 0x3147c6ca: FUNC_LOG_ERROR("TODO: sys_dbg_enable_floating_point_enabled_exception");
	case 0x381ae33e: FUNC_LOG_ERROR("TODO: sys_dbg_get_event_queue_information");
	case 0x3e5eed36: FUNC_LOG_ERROR("TODO: sys_dbg_get_spu_thread_name");
	case 0x4b55f456: FUNC_LOG_ERROR("TODO: sys_dbg_get_ppu_thread_name");
	case 0x4ded9f6c: FUNC_LOG_ERROR("TODO: sys_dbg_signal_to_ppu_exception_handler");
	case 0x50453aa8: FUNC_LOG_ERROR("TODO: sys_dbg_get_mutex_information");
	case 0x580f8203: FUNC_LOG_ERROR("TODO: sys_dbg_vm_get_page_information");
	case 0x590a276e: FUNC_LOG_ERROR("TODO: sys_dbg_mat_get_condition");
	case 0x63bd413e: FUNC_LOG_ERROR("TODO: sys_dbg_get_cond_information");
	case 0x6b413178: FUNC_LOG_ERROR("TODO: sys_dbg_get_ppu_thread_status");
	case 0x7bdadb01: FUNC_LOG_ERROR("TODO: sys_dbg_get_lwcond_information");
	case 0x9794bb53: FUNC_LOG_ERROR("TODO: sys_dbg_get_rwlock_information");
	case 0x9ddb9dc3: FUNC_LOG_ERROR("TODO: sys_dbg_get_spu_thread_group_status");
	case 0xa2d6cbd2: FUNC_LOG_ERROR("TODO: sys_dbg_get_semaphore_information");
	case 0xab475d53: FUNC_LOG_ERROR("TODO: sys_dbg_set_mask_to_ppu_exception_handler");
	case 0xb9da87d3: FUNC_LOG_ERROR("TODO: sys_dbg_get_coredump_params");
	case 0xbb0ae221: FUNC_LOG_ERROR("TODO: sys_dbg_get_address_from_dabr");
	case 0xbd69e584: FUNC_LOG_ERROR("TODO: sys_dbg_get_spu_thread_group_name");
	case 0xc0eb9266: FUNC_LOG_ERROR("TODO: sys_dbg_finalize_ppu_exception_handler");
	case 0xc21ee635: FUNC_LOG_ERROR("TODO: sys_dbg_read_spu_thread_context");
	case 0xc353353a: FUNC_LOG_ERROR("TODO: sys_dbg_initialize_ppu_exception_handler");
	case 0xc5eef17f: FUNC_LOG_ERROR("TODO: sys_dbg_read_ppu_thread_context");
	case 0xc6d7ec13: FUNC_LOG_ERROR("TODO: sys_dbg_unregister_ppu_exception_handler");
	case 0xcb377e36: FUNC_LOG_ERROR("TODO: sys_dbg_get_lwmutex_information");
	case 0xd830062a: FUNC_LOG_ERROR("TODO: sys_dbg_signal_to_coredump_handler");
	case 0xdb14b37b: FUNC_LOG_ERROR("TODO: sys_dbg_set_address_to_dabr");
	case 0xdf856979: FUNC_LOG_ERROR("TODO: sys_dbg_get_event_flag_information");
	case 0xf254768c: FUNC_LOG_ERROR("TODO: sys_dbg_disable_floating_point_enabled_exception");
	case 0x051ee3ee: FUNC_LOG_ERROR("TODO: socketpoll");
	case 0x05bd4438: FUNC_LOG_ERROR("TODO: sys_net_get_udpp2p_test_param");
	case 0x10b81ed6: FUNC_LOG_ERROR("TODO: sys_net_set_udpp2p_test_param");
	case 0x139a9e9b: FUNC_LOG_ERROR("TODO: sys_net_initialize_network_ex");
	case 0x13efe7f5: FUNC_LOG_ERROR("TODO: getsockname");
	case 0x1d14d6e4: FUNC_LOG_ERROR("TODO: sys_net_get_lib_name_server");
	case 0x1f953b9f: FUNC_LOG_ERROR("TODO: recvfrom");
	case 0x27fb339d: FUNC_LOG_ERROR("TODO: sys_net_if_ctl");
	case 0x28e208bb: FUNC_LOG_ERROR("TODO: listen");
	case 0x368823c0: FUNC_LOG_ERROR("TODO: sys_net_get_netemu_test_param");
	case 0x3b27c780: FUNC_LOG_ERROR("TODO: sys_net_get_sockinfo");
	case 0x3f09e20a: FUNC_LOG_ERROR("TODO: socketselect");
	case 0x44328aa2: FUNC_LOG_ERROR("TODO: sys_net_close_dump");
	case 0x4ab0b9b9: FUNC_LOG_ERROR("TODO: sys_net_set_test_param");
	case 0x506ad863: FUNC_LOG_ERROR("TODO: inet_network");
	case 0x5420e419: FUNC_LOG_ERROR("TODO: sys_net_show_nameserver");
	case 0x566893ce: FUNC_LOG_ERROR("TODO: inet_lnaof");
	case 0x5a045bd1: FUNC_LOG_ERROR("TODO: getsockopt");
	case 0x6005cde1: FUNC_LOG_ERROR("TODO: _sys_net_errno_loc");
	case 0x64f66d35: FUNC_LOG_ERROR("TODO: connect");
	case 0x6db6e8cd: FUNC_LOG_ERROR("TODO: socketclose");
	case 0x71f4c717: FUNC_LOG_ERROR("TODO: gethostbyname");
	case 0x7687d48c: FUNC_LOG_ERROR("TODO: sys_net_set_resolver_configurations");
	case 0x79b61646: FUNC_LOG_ERROR("TODO: sys_net_show_route");
	case 0x858a930b: FUNC_LOG_ERROR("TODO: inet_ntoa");
	case 0x88f03575: FUNC_LOG_ERROR("TODO: setsockopt");
	case 0x89c9917c: FUNC_LOG_ERROR("TODO: sys_net_read_dump");
	case 0x8af3825e: FUNC_LOG_ERROR("TODO: inet_pton");
	case 0x8ccf05ed: FUNC_LOG_ERROR("TODO: sys_net_abort_resolver");
	case 0x8d1b77fb: FUNC_LOG_ERROR("TODO: sys_net_abort_socket");
	case 0x9647570b: FUNC_LOG_ERROR("TODO: sendto");
	case 0x9a318259: FUNC_LOG_ERROR("TODO: sys_net_set_lib_name_server");
	case 0x9c056962: FUNC_LOG_ERROR("TODO: socket");
	case 0xa50777c6: FUNC_LOG_ERROR("TODO: shutdown");
	case 0xa5a86557: FUNC_LOG_ERROR("TODO: sys_net_get_test_param");
	case 0xa765d029: FUNC_LOG_ERROR("TODO: sys_net_get_sockinfo_ex");
	case 0xa9a079e0: FUNC_LOG_ERROR("TODO: inet_aton");
	case 0xab447704: FUNC_LOG_ERROR("TODO: sys_net_open_dump");
	case 0xad09481b: FUNC_LOG_ERROR("TODO: sendmsg");
	case 0xb0a59804: FUNC_LOG_ERROR("TODO: bind");
	case 0xb4152c74: FUNC_LOG_ERROR("TODO: inet_makeaddr");
	case 0xb48636c4: FUNC_LOG_ERROR("TODO: sys_net_show_ifconfig");
	case 0xb68d5625: FUNC_LOG_ERROR("TODO: sys_net_finalize_network");
	case 0xc9157d30: FUNC_LOG_ERROR("TODO: _sys_net_h_errno_loc");
	case 0xc94f6939: FUNC_LOG_ERROR("TODO: accept");
	case 0xc98a3146: FUNC_LOG_ERROR("TODO: inet_ntop");
	case 0xc9d09c34: FUNC_LOG_ERROR("TODO: recvmsg");
	case 0xdabbc2c0: FUNC_LOG_ERROR("TODO: inet_addr");
	case 0xdc751b40: FUNC_LOG_ERROR("TODO: send");
	case 0xe2434507: FUNC_LOG_ERROR("TODO: sys_net_set_netemu_test_param");
	case 0xe39a62a7: FUNC_LOG_ERROR("TODO: inet_netof");
	case 0xf7ac8941: FUNC_LOG_ERROR("TODO: gethostbyaddr");
	case 0xf9ec2db6: FUNC_LOG_ERROR("TODO: getpeername");
	case 0xfba04f37: FUNC_LOG_ERROR("TODO: recv");
	case 0xfdb8f926: FUNC_LOG_ERROR("TODO: sys_net_free_thread_context");
	case 0x0341bb97: FUNC_LOG_ERROR("TODO: sys_prx_get_module_id_by_address");
	case 0x04e83d2c: FUNC_LOG_ERROR("TODO: _sys_strncmp");
	case 0x052d29a6: FUNC_LOG_ERROR("TODO: _sys_strcat");
	case 0x05c65656: FUNC_LOG_ERROR("TODO: sys_mempool_try_allocate_block");
	case 0x0618936b: FUNC_LOG_ERROR("TODO: _sys_vsnprintf");
	case 0x06574237: FUNC_LOG_ERROR("TODO: _sys_snprintf");
	case 0x1573dc3f: return sys_lwmutex_lock(SC_ARGS_2);//FUNC_LOG_ERROR("TODO: sys_lwmutex_lock");
	case 0x191f0c4a: FUNC_LOG_ERROR("TODO: _sys_strrchr");
	case 0x1ae10b92: FUNC_LOG_ERROR("TODO: _sys_spu_printf_attach_thread");
	case 0x1bc200f4: return sys_lwmutex_unlock(SC_ARGS_1);//FUNC_LOG_ERROR("TODO: sys_lwmutex_unlock");
	case 0x1c9a942c: FUNC_LOG_ERROR("TODO: sys_lwcond_destroy");
	case 0x1ca525a2: FUNC_LOG_ERROR("TODO: _sys_strncasecmp");
	case 0x1ed454ce: FUNC_LOG_ERROR("TODO: sys_spu_elf_get_information");
	case 0x24a1ea07: return sys_ppu_thread_create(SC_ARGS_7);//FUNC_LOG_ERROR("TODO: sys_ppu_thread_create");
	case 0x25596f51: FUNC_LOG_ERROR("TODO: sys_mempool_get_count");
	case 0x26090058: FUNC_LOG_ERROR("TODO: sys_prx_load_module");
	case 0x27427742: FUNC_LOG_ERROR("TODO: _sys_memmove");
	case 0x2a6d9d51: FUNC_LOG_ERROR("TODO: sys_lwcond_wait");
	case 0x2c847572: FUNC_LOG_ERROR("TODO: _sys_process_atexitspawn");
	case 0x2d36462b:
		//FUNC_LOG_ERROR("TODO: _sys_strlen");
		ConLog.Write("sys_strlen(addr=0x%x(%s))", SC_ARGS_1, Memory.ReadString(SC_ARGS_1));
		return strlen((const char*)&Memory[SC_ARGS_1]);
	case 0x2f85c0ef: return sys_lwmutex_create(SC_ARGS_2);//FUNC_LOG_ERROR("TODO: sys_lwmutex_create");
	case 0x3172759d: FUNC_LOG_ERROR("TODO: sys_game_get_temperature");
	case 0x318f17e1: FUNC_LOG_ERROR("TODO: _sys_memalign");
	case 0x350d454e: return sys_ppu_thread_get_id(SC_ARGS_1);//FUNC_LOG_ERROR("TODO: sys_ppu_thread_get_id");
	case 0x35168520: return sys_heap_malloc(SC_ARGS_2); //FUNC_LOG_ERROR("TODO: _sys_heap_malloc");
	case 0x3bd53c7b: FUNC_LOG_ERROR("TODO: _sys_memchr");
	case 0x3dd4a957: FUNC_LOG_ERROR("TODO: sys_ppu_thread_register_atexit");
	case 0x409ad939: FUNC_LOG_ERROR("TODO: sys_mmapper_free_memory");
	case 0x42b23552: FUNC_LOG_ERROR("TODO: sys_prx_register_library");
	case 0x44265c08: FUNC_LOG_ERROR("TODO: _sys_heap_memalign");
	case 0x459b4393: FUNC_LOG_ERROR("TODO: _sys_strcmp");
	case 0x45fe2fce: FUNC_LOG_ERROR("TODO: _sys_spu_printf_initialize");
	case 0x4643ba6e: FUNC_LOG_ERROR("TODO: sys_mmapper_unmap_memory");
	case 0x4a071d98: FUNC_LOG_ERROR("TODO: sys_interrupt_thread_disestablish");
	case 0x4b2f301a: FUNC_LOG_ERROR("TODO: _sys_tolower");
	case 0x4f7172c9: FUNC_LOG_ERROR("TODO: sys_process_is_stack");
	case 0x5267cb35: FUNC_LOG_ERROR("TODO: sys_spinlock_unlock");
	case 0x52aadadf: FUNC_LOG_ERROR("TODO: sys_lwcond_signal_to");
	case 0x5fdfb2fe: FUNC_LOG_ERROR("TODO: _sys_spu_printf_detach_group");
	case 0x608212fc: FUNC_LOG_ERROR("TODO: sys_mempool_free_block");
	case 0x620e35a7: FUNC_LOG_ERROR("TODO: sys_game_get_system_sw_version");
	case 0x67f9fedb: FUNC_LOG_ERROR("TODO: sys_game_process_exitspawn2");
	case 0x68b9b011:
		ConLog.Warning("_sys_memset(0x%llx, 0x%lld, 0x%lld)", SC_ARGS_3);
		return 
			(u32)memset(Memory.GetMemFromAddr(CPU.GPR[3]), CPU.GPR[4], CPU.GPR[5])
			- Memory.GetMemByAddr(CPU.GPR[3]).GetStartAddr();
		FUNC_LOG_ERROR("TODO: _sys_memset");
	case 0x6bf66ea7: FUNC_LOG_ERROR("TODO: _sys_memcpy");
	case 0x6e05231d: FUNC_LOG_ERROR("TODO: sys_game_watchdog_stop");
	case 0x70258515: FUNC_LOG_ERROR("TODO: sys_mmapper_allocate_memory_from_container");
	case 0x71a8472a: FUNC_LOG_ERROR("TODO: sys_get_random_number");
	case 0x722a0254: FUNC_LOG_ERROR("TODO: sys_spinlock_trylock");
	case 0x74311398: FUNC_LOG_ERROR("TODO: sys_prx_get_my_module_id");
	case 0x744680a2:
		// FUNC_LOG_ERROR("TODO: sys_initialize_tls");
		ConLog.Warning("sys_initialize_tls()");
		//CPU.GPR[4] = Emu.GetTLSFilesz();
		//CPU.GPR[5] = Emu.GetTLSMemsz();
	return 0;//Memory.MainMem.Alloc(Emu.GetTLSMemsz());//Emu.GetTLSAddr();
	case 0x7498887b: FUNC_LOG_ERROR("TODO: _sys_strchr");
	case 0x791b9219: FUNC_LOG_ERROR("TODO: _sys_vsprintf");
	case 0x80fb0c19: FUNC_LOG_ERROR("TODO: sys_prx_stop_module");
	case 0x8461e528: return sys_time_get_system_time();//FUNC_LOG_ERROR("TODO: sys_time_get_system_time");
	case 0x84bb6774: FUNC_LOG_ERROR("TODO: sys_prx_get_module_info");
	case 0x893305fa: FUNC_LOG_ERROR("TODO: sys_raw_spu_load");
	case 0x8985b5b6: FUNC_LOG_ERROR("TODO: _sys_heap_stats");
	case 0x8a2f159b: FUNC_LOG_ERROR("TODO: console_getc");
	case 0x8a561d92: FUNC_LOG_ERROR("TODO: _sys_heap_free");
	case 0x8bb03ab8: FUNC_LOG_ERROR("TODO: sys_game_board_storage_write");
	case 0x8c2bb498: FUNC_LOG_ERROR("TODO: sys_spinlock_initialize");
	case 0x96328741: FUNC_LOG_ERROR("TODO: _sys_process_at_Exitspawn");
	case 0x996f7cf8: FUNC_LOG_ERROR("TODO: _sys_strncat");
	case 0x99c88692: FUNC_LOG_ERROR("TODO: _sys_strcpy");
	case 0x9d3c0f81: FUNC_LOG_ERROR("TODO: sys_mempool_destroy");
	case 0x9e0623b5: FUNC_LOG_ERROR("TODO: sys_game_watchdog_start");
	case 0x9f04f7af: FUNC_LOG_ERROR("TODO: _sys_printf");
	case 0x9f18429d: FUNC_LOG_ERROR("TODO: sys_prx_start_module");
	case 0x9f950780: FUNC_LOG_ERROR("TODO: sys_game_get_rtc_status");
	case 0xa146a143: FUNC_LOG_ERROR("TODO: sys_mempool_allocate_block");
	case 0xa1f9eafe:
		ConLog.Warning("_sys_sprintf(0x%llx, 0x%llx(%s), 0x%llx)", CPU.GPR[3], CPU.GPR[4], Memory.ReadString(CPU.GPR[4]), CPU.GPR[5]);
		return vsprintf((char*)Memory.GetMemFromAddr(CPU.GPR[3]), Memory.ReadString(CPU.GPR[4]), (char*)Memory.GetMemFromAddr(CPU.GPR[5]));
		FUNC_LOG_ERROR("TODO: _sys_sprintf");
	case 0xa285139d: FUNC_LOG_ERROR("TODO: sys_spinlock_lock");
	case 0xa2c7ba64: FUNC_LOG_ERROR("TODO: sys_prx_exitspawn_with_level");
	case 0xa330ad84: FUNC_LOG_ERROR("TODO: sys_prx_load_module_on_memcontainer_by_fd");
	case 0xa3e3be68: sys_ppu_thread_once(SC_ARGS_2); return SC_ARGS_1;//FUNC_LOG_ERROR("TODO: sys_ppu_thread_once");
	case 0xa5d06bf0: FUNC_LOG_ERROR("TODO: sys_prx_get_module_list");
	case 0xaa6d9bff: FUNC_LOG_ERROR("TODO: sys_prx_load_module_on_memcontainer");
	case 0xac6fc404: FUNC_LOG_ERROR("TODO: sys_ppu_thread_unregister_atexit");
	case 0xacad8fb6: FUNC_LOG_ERROR("TODO: sys_game_watchdog_clear");
	case 0xaeb78725: return sys_lwmutex_trylock(SC_ARGS_1);//FUNC_LOG_ERROR("TODO: sys_lwmutex_trylock");
	case 0xaede4b03: FUNC_LOG_ERROR("TODO: _sys_heap_delete_heap");
	case 0xaff080a4: return sys_ppu_thread_exit(SC_ARGS_1);//FUNC_LOG_ERROR("TODO: sys_ppu_thread_exit");
	case 0xb257540b: return sys_mmapper_allocate_memory(SC_ARGS_3); //FUNC_LOG_ERROR("TODO: sys_mmapper_allocate_memory");
	case 0xb27c8ae7: FUNC_LOG_ERROR("TODO: sys_prx_load_module_list");
	case 0xb2fcf2c8: return sys_heap_create_heap(SC_ARGS_3);//FUNC_LOG_ERROR("TODO: _sys_heap_create_heap");
	case 0xb3bbcf2a: FUNC_LOG_ERROR("TODO: _sys_spu_printf_detach_thread");
	case 0xb6369393: FUNC_LOG_ERROR("TODO: _sys_heap_get_total_free_size");
	case 0xb995662e: FUNC_LOG_ERROR("TODO: sys_raw_spu_image_load");
	case 0xb9bf1078: FUNC_LOG_ERROR("TODO: _sys_heap_alloc_heap_memory");
	case 0xbdb18f83:
		ConLog.Warning("_sys_malloc(0x%llx)", SC_ARGS_1);
		return Memory.Alloc(CPU.GPR[3], Emu.GetMallocPageSize());
		FUNC_LOG_ERROR("TODO: _sys_malloc");
	case 0xc3476d0c: return sys_lwmutex_destroy(SC_ARGS_1);////FUNC_LOG_ERROR("TODO: sys_lwmutex_destroy");
	case 0xc4fd6121: FUNC_LOG_ERROR("TODO: _sys_qsort");
	case 0xca9a60bf: FUNC_LOG_ERROR("TODO: sys_mempool_create");
	case 0xd0ea47a7: FUNC_LOG_ERROR("TODO: sys_prx_unregister_library");
	case 0xd1ad4570: FUNC_LOG_ERROR("TODO: _sys_heap_get_mallinfo");
	case 0xd3039d4d: FUNC_LOG_ERROR("TODO: _sys_strncpy");
	case 0xda0eb71a: FUNC_LOG_ERROR("TODO: sys_lwcond_create");
	case 0xdb6b3250: FUNC_LOG_ERROR("TODO: sys_spu_elf_get_segments");
	case 0xdc578057: return sys_mmapper_map_memory(SC_ARGS_3); //FUNC_LOG_ERROR("TODO: sys_mmapper_map_memory");
	case 0xdd0c1e09: FUNC_LOG_ERROR("TODO: _sys_spu_printf_attach_group");
	case 0xdd3b27ac: FUNC_LOG_ERROR("TODO: _sys_spu_printf_finalize");
	case 0xe0998dbf: FUNC_LOG_ERROR("TODO: sys_prx_get_module_id_by_name");
	case 0xe0da8efd: FUNC_LOG_ERROR("TODO: sys_spu_image_close");
	case 0xe66bac36: FUNC_LOG_ERROR("TODO: console_putc");
	case 0xe6f2c1e7: return sys_process_exit(SC_ARGS_1);///FUNC_LOG_ERROR("TODO: sys_process_exit");
	case 0xe76964f5: FUNC_LOG_ERROR("TODO: sys_game_board_storage_read");
	case 0xe7ef3a80: FUNC_LOG_ERROR("TODO: sys_prx_load_module_list_on_memcontainer");
	case 0xe9a1bd84: FUNC_LOG_ERROR("TODO: sys_lwcond_signal_all");
	case 0xebe5f72f: FUNC_LOG_ERROR("TODO: sys_spu_image_import");
	case 0xeef75113: FUNC_LOG_ERROR("TODO: _sys_toupper");
	case 0xef68c17c: FUNC_LOG_ERROR("TODO: sys_prx_load_module_by_fd");
	case 0xef87a695: FUNC_LOG_ERROR("TODO: sys_lwcond_signal");
	case 0xf0aece0d: FUNC_LOG_ERROR("TODO: sys_prx_unload_module");
	case 0xf57e1d6f: FUNC_LOG_ERROR("TODO: console_write");
	case 0xf7f7fb20: FUNC_LOG_ERROR("TODO: _sys_free");
	case 0xfa7f693d: FUNC_LOG_ERROR("TODO: _sys_vprintf");
	case 0xfb5db080: FUNC_LOG_ERROR("TODO: _sys_memcmp");
	case 0xfc52a7a9: return sys_game_process_exitspawn(SC_ARGS_7); FUNC_LOG_ERROR("TODO: sys_game_process_exitspawn");
	}
	
	ConLog.Error("Unknown func id: 0x%08x", id);
	return -1;
}